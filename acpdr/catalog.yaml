swagger: '2.0'
info:
  version: 1.0.0
  title: Catalog Service RESTful API Resource.
  description: >-
    Catalog service API for client registration. Administrative use only.

    Notes:

    * When trying out the APIs, get your tokens from IMS stage and prefix it
    with 'Bearer'.

    * All requests with a payload in the request body (i.e., POST, PUT, and
    PATCH calls) must include the header 'Content-Type: application/json'.  This
    UI automatically supplies that header when using the 'Try it out' button,
    but calling clients must take care to supply it for themselves.
  contact:
    name: Catalog Team.
basePath: /data/foundation/catalog
host: platform-int.adobe.io
consumes:
  - application/json
produces:
  - application/json
paths:
  /accounts:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      operationId: get_accounts
      summary: Fetches a list of Accounts.
      produces:
        - application/json
      parameters:
        - name: connector
          description: The ID for the Connector this Account params was created from.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/description'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: Account response.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/account'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Saves a new account.
      operationId: post_account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: account
          description: Account to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/account'
      responses:
        '201':
          description: 'Array[ @/account/accountId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/accounts/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      operationId: get_account_by_id
      summary: Fetches Accounts by ID.
      produces:
        - application/json
      responses:
        '200':
          description: account response.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/account'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Saves a new Account with a specified ID.
      operationId: post_account_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: account
          description: Account to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/account'
      responses:
        '201':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    put:
      security:
        - Bearer: []
      summary: Updates an existing Account by ID.
      operationId: update_account_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
        - name: account
          description: Account field(s) to be updated
          required: true
          in: body
          schema:
            $ref: '#/definitions/account'
      responses:
        '200':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    patch:
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing Account.
      operationId: patch_account_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - name: account
          description: Account field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/account'
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
      responses:
        '200':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes a Account by ID.
      operationId: delete_account_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  /batches:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      operationId: get_batch
      summary: Fetches a list of Batches.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - $ref: '#/parameters/version'
        - name: status
          description: The current (mutable) status of this Batch.
          required: false
          type: string
          in: query
        - name: recordCount
          description: >-
            The total number of data records (rows/documents) processed in this
            Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: failedRecordCount
          description: The number of records that could not be processed in this Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: Number of bytes processed in this Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: started
          description: >-
            The Unix timestamp (in milliseconds) when the Batch processing
            action was started.
          required: false
          type: integer
          format: int64
          in: query
        - name: completed
          description: >-
            The Unix timestamp (in milliseconds) when the Batch processing
            action was completed. Completed - Started should yield the total
            processing time.
          required: false
          type: integer
          format: int64
          in: query
        - name: startAfter
          description: >-
            Query only batches with availability dates that start after the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: startBefore
          description: >-
            Query only batches with availability dates that start before the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endAfter
          description: >-
            Query only batches with availability dates that end after the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endBefore
          description: >-
            Query only batches with availability dates that end before the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: batch
          description: 'Used to filter on the related object: &batch=batchId.'
          required: false
          type: string
          in: query
        - name: connection
          description: 'Used to filter on the related object: &connection=connectionId.'
          required: false
          type: string
          in: query
        - name: connector
          description: 'Used to filter on the related object: &connector=connectorId.'
          required: false
          type: string
          in: query
        - name: dataSet
          description: 'Used to filter on the related object: &dataSet=dataSetId.'
          required: false
          type: string
          in: query
        - name: dataSetFile
          description: 'Used to filter on the related object: &dataSetFile=dataSetFileId.'
          required: false
          type: string
          in: query
        - name: dataSetView
          description: 'Used to filter on the related object: &dataSetView=dataSetViewId.'
          required: false
          type: string
          in: query
        - name: transform
          description: 'Used to filter on the related object: &transform=transformId.'
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: batch response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/batch'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Saves a new Batch.
      operationId: post_batch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch
          description: Batch to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/batch'
      responses:
        '201':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/batches/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      operationId: get_batch_by_id
      description: Fetches Batches by ID.
      produces:
        - application/json
      parameters:
        - name: aggregate
          description: >-
            If true, then return the aggregated status, metrics, and errors in
            the root level status, metrics, and errors (default is false).
          required: false
          type: boolean
          in: query
      responses:
        '200':
          description: batch response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/batch'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Creates a new Batch with a specified ID.
      operationId: post_batch_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch
          description: Batch to be created.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batch'
      responses:
        '201':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    put:
      security:
        - Bearer: []
      summary: Updates an existing Batch by ID.
      operationId: update_batch_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
        - name: batch
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batch'
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    patch:
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing Batch.
      operationId: patch_batch_by_id
      consumes:
        - application/json
      parameters:
        - name: batch
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batch'
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes a Batch by ID.
      operationId: delete_batch_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: ' @/batches/batchId '
          schema:
            type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  /catalog/health:
    get:
      summary: Catalog healthcheck report. Used by monitoring services and dashboards.
      operationId: get_catalog_healthcheck
      produces:
        - application/json
      responses:
        '200':
          description: healthcheck response
          schema:
            $ref: '#/definitions/healthcheck'
        '503':
          description: service unavailable
        default:
          description: unexpected error
  /catalog/health-detailed:
    get:
      security:
        - Bearer: []
      summary: >-
        Catalog healthcheck report with dependencies. Used by monitoring
        services and dashboards.
      operationId: get_catalog_detailed_healthcheck
      produces:
        - application/json
      responses:
        '200':
          description: healthcheck response
          schema:
            $ref: '#/definitions/health-detailed'
        '503':
          description: service unavailable
        default:
          description: unexpected error
  /connections:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      summary: Fetches a list of Connections.
      operationId: get_connections
      produces:
        - application/json
      parameters:
        - name: connector
          description: The ID for the Connector this Connection was created from.
          required: false
          type: string
          in: query
        - name: parentConnectionId
          description: >-
            Used in cases where global/shared data is managed by this
            connection. The parent connection performs the ETL/Mapping jobs, and
            this child connection represents a customer's membership and
            visibility into the parent.
          required: false
          type: string
          in: query
        - name: name
          description: The user-facing name of this Connection.
          required: false
          type: string
          in: query
        - name: accountId
          description: >-
            Foreign key to the account where the credentials and related fields
            of the connector and connection combination is stored.
          required: false
          type: string
          in: query
        - name: description
          description: The user-provided description of the Connection.
          required: false
          type: string
          in: query
        - name: enabled
          description: >-
            Indicates the status of the Connection. Should be interpreted as
            disabled or suspended when set to false.
          required: false
          type: boolean
          in: query
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: ingestStart
          description: Suggested date/time to start ingesting.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: connections response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connection'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Saves a new Connection.
      operationId: post_connection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: connection
          in: body
          description: Connection to be posted.
          required: true
          schema:
            $ref: '#/definitions/connection'
      responses:
        '201':
          description: 'Array[ @/connection/connectionId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/connections/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      operationId: get_connection_by_id
      summary: Fetches Connections by ID.
      produces:
        - application/json
      responses:
        '200':
          description: connections response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connection'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Saves a new Connection with a specified ID.
      operationId: post_connection_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: connection
          in: body
          description: Connection to be posted
          required: true
          schema:
            $ref: '#/definitions/connection'
      responses:
        '201':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    put:
      security:
        - Bearer: []
      summary: Updates an existing Connection by ID.
      operationId: update_connection_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
        - name: connection
          description: Connection field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/connection'
      responses:
        '200':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    patch:
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing Connection.
      operationId: patch_connection_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
        - name: connection
          description: Connection field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/connection'
      responses:
        '200':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes a Connection by ID.
      operationId: delete_connection_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/connections/{id}/dataSets':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      operationId: get_data_sets_by_connection_id
      summary: Fetches DataSets for the given Connection.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: connections response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSet'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  /connectors:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      summary: Fetches the list of Connectors.
      operationId: get_connectors
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - name: type
          description: The ingest type for this Connector.
          required: false
          type: string
          in: query
        - name: name
          description: Name of this Connector.
          required: false
          type: string
          in: query
        - name: category
          description: >-
            Connectors currently have 2 categories: 1) standard: we are
            connecting to a known source with known data (ie. other companies
            data stores) or 2) custom: a generaic connector to FTP or S3 etc.
          required: false
          type: string
          in: query
        - name: description
          description: >-
            Introductory text describing this connector, it's primary
            functionality, relevant data sets, etc.
          required: false
          type: string
          in: query
        - name: maxConnections
          description: >-
            The maximum number of connections a customer (IMS Org) can create of
            this type.
          required: false
          type: integer
          in: query
        - name: uiCreationAllowed
          description: >-
            When set to false, this connector should not be shown by the UI
            Connector Library. Essentially, the UI is not to create connectors
            of this type, but should show status related to this connector
            elsewhere.
          required: false
          type: boolean
          in: query
        - name: ingestStart
          description: Suggested date/time to start ingesting.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: connectors response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connector'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/connectors/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches Connectors by ID.
      operationId: get_connector_by_id
      produces:
        - application/json
      responses:
        '200':
          description: connector response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connector'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/connectors/{id}/stats':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches statistics for a given Connector.
      operationId: get_stats_by_connector_id
      produces:
        - application/json
      responses:
        '200':
          description: Returns connection count.
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  /dataSets:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      summary: Fetches a list of DataSets.
      operationId: get_data_sets
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: isPublic
          description: >-
            Marks this dataset as available for use (by UI) in lookup operations
            with datasets not in the current connection, or across customers.
          required: false
          type: boolean
          in: query
        - name: connectorId
          description: >-
            Foreign key to the Connector this DataSet originates from. Template
            DataSets are tied to Connectors and not Connections.
          required: false
          type: string
          in: query
        - name: connectionId
          description: Foreign key to the Connection this DataSet originates from.
          required: false
          type: string
          in: query
        - name: name
          description: 'A descriptive, human-readable name for this DataSet.'
          required: false
          type: string
          in: query
        - name: description
          description: A longer text description of the DataSet.
          required: false
          type: string
          in: query
        - name: type
          description: >-
            DataSet types reflect where the data is in the MCDP lifecycle. Raw
            datasets are created by ingest, Master datasets are created by the
            Harvester, and Model datasets are configured by users. App datasets
            can then be created by MCDP services.
          required: false
          type: string
          in: query
        - name: namespace
          description: One of the registered platform acronyms that identify the platform.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: connections response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSet'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Saves a new DataSet.
      operationId: post_data_set
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: requestDataSource
          description: >-
            Set to true if you want Catalog to create a dataSource on your
            behalf; otherwise, pass a dataSourceId in the body.
          type: string
          in: query
        - name: dataSet
          description: Data set to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSet'
      responses:
        '201':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches DataSets by ID.
      operationId: get_data_set_by_id
      produces:
        - application/json
      responses:
        '200':
          description: connections response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSet'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    put:
      security:
        - Bearer: []
      summary: Updates an existing DataSet by ID.
      operationId: update_data_set_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
        - name: requestDataSource
          description: >-
            Set to true if you want Catalog to create a dataSource on your
            behalf; otherwise, pass a dataSourceId in the body.
          type: string
          in: query
        - name: dataSet
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSet'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    patch:
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing DataSet.
      operationId: patch_data_set_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
        - name: dataSet
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSet'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes a DataSet by ID.
      operationId: delete_data_set_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}/credentials':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches credentials for the given DataSet.
      operationId: get_credentials_by_data_set_id
      consumes:
        - application/json
      parameters:
        - name: batchId
          description: >-
            If wishing to write, the batchId used during writing. Required for
            buliding a stage path.
          required: false
          in: query
          type: string
      responses:
        '200':
          description: credential response
          schema:
            $ref: '#/definitions/dataSetCredentials'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}/views':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Lists DataSetViews for this DataSet.
      operationId: get_data_set_views_by_data_set_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: dataSet response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetView'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Creates a new DataSetView for this DataSet.
      operationId: post_data_set_view_by_data_set_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetView
          description: Datasetview to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetView'
      responses:
        '201':
          description: 'Array[ @/dataSets/dataSetId/views/viewId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}/views/{viewid}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches a particular DataSetView for this DataSet.
      operationId: get_data_set_view_by_data_set_id_by_id
      produces:
        - application/json
      parameters:
        - name: viewid
          description: datasetview id
          required: true
          in: path
          type: string
      responses:
        '200':
          description: dataSet response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetView'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}/views/{viewId}/transforms':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Lists the Transforms for a particular DataSetView for this DataSet.
      operationId: get_transforms_by_data_set_id_and_data_set_view_id
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: dataset response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/transform'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}/views/{viewId}/files':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Lists the DataSetFiles for a particular DataSetView for this DataSet.
      operationId: get_data_set_files_by_data_set_id_and_data_set_view_id
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: dataset response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFile'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Adds DataSetFile to a particular DataSetView for this DataSet.
      operationId: post_data_set_file_by_data_set_id_and_data_set_view_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - name: dataSetFile
          description: Data set file to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFile'
      responses:
        '201':
          description: 'Array[ @/dataSets/{datasetId}/views/{viewId}/files/{fileId} ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}/views/{viewId}/files/{fileId}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches a DataSetFile for a particular DataSetView for this DataSet.
      operationId: get_data_set_file_by_data_set_id_and_data_set_view_id_by_id
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - name: fileId
          description: dataSetView ID
          required: true
          in: path
          type: string
      responses:
        '200':
          description: dataset response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFile'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Removes a DataSetFile for a particular DataSetView for this DataSet.
      operationId: delete_data_set_file_by_data_set_id_and_data_set_view_id_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - name: fileId
          description: dataSetView ID
          required: true
          in: path
          type: string
      responses:
        '200':
          description: 'Array[ @/{datasetId?/views/{viewId}/files/{fileId} ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}/views/{viewId}/sampleFiles':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: >-
        Lists the sample DataSetFiles for a particular DataSetView for this
        DataSet.
      operationId: get_sample_files_by_data_set_id_and_data_set_view_id
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: dataset response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFile'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Adds DataSetFile to a particular DataSetView for this DataSet.
      operationId: post_sample_file_by_data_set_id_and_data_set_view_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - name: dataSetFile
          description: Data set file to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFile'
      responses:
        '201':
          description: 'Array[ @/dataSets/{datasetId}/views/{viewId}/sampleFiles/{fileId} ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}/views/{viewId}/sampleFile/{fileId}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    delete:
      security:
        - Bearer: []
      summary: Removes a sample File for a particular DataSetView for this DataSet.
      operationId: delete_sample_file_by_data_set_id_and_data_set_view_id_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - name: fileId
          description: dataSetView ID
          required: true
          in: path
          type: string
      responses:
        '200':
          description: 'Array[@/{datasetId}/views/{viewId}/sampleFiles/{fileId} ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}/ingestBatchSummary':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: >-
        Retrieves summarized stats for a DataSet's batches. Default time window:
        last seven days.
      operationId: get_data_set_batches_summary
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: batch summary object
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSets/{id}/dule':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Returns the DULE labels associated with a dataset.
      operationId: get_dule_labels
      produces:
        - application/json
      responses:
        '200':
          description: The DULE labels assocated with the dataset.
          schema:
            $ref: '#/definitions/duleLabelResonse'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  /dataSetViews:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      summary: Fetches a list of DataSetViews.
      operationId: get_data_set_views
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: dataSetId
          description: Foreign key to the owning DataSet.
          required: false
          type: string
          in: query
        - name: name
          description: The name of this DataSetView.
          required: false
          type: string
          in: query
        - name: isDefault
          description: >-
            Marks this view as the default for it's DataSet. DataSets should
            only be associated to a single default view.
          required: false
          type: boolean
          in: query
        - name: status
          description: >-
            Describes the current state of the view.  If a view is not enabled,
            it should not be used by any process even when it is specified as a
            dependency. Only one view of a given aspect should be enabled at any
            time. For example, no DataSet should have more than one enabled
            production or sandbox view.
          required: false
          type: string
          in: query
        - name: editable
          description: >-
            Determines whether or not this DataSetView definition should be
            editable by the user.  Some documents are 'locked' and not available
            for edit.
          required: false
          type: boolean
          in: query
        - name: sdsVersion
          description: >-
            The semantic version of the SDS this view (and it's transforms) are
            compatible with.
          required: false
          type: string
          in: query
        - name: basePath
          description: >-
            Fully qualified base path for all DataSetFiles associated with this
            view. For views cached in a database (HBase or Cassandra), supply a
            templatized DSN.
          required: false
          type: string
          in: query
        - name: saveStrategy
          description: Denotes save strategy for this dataset.
          required: false
          type: string
          in: query
        - name: isCached
          description: >-
            Some DataSetViews are pre-cached in a high-speed lookup table for
            faster access, this flag indicates if that has been done.
          required: false
          type: boolean
          in: query
        - name: aspect
          description: >-
            Aspect represents the particular perspective or target you're after
            when viewing a dataset. Sandbox views are a version of the dataset
            that's being used to iterate towards a final ETL job definition. The
            production aspect is then used (by default).
          required: false
          type: string
          in: query
        - name: schema
          description: This is the uri for the XDM model.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: dataSetView response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetView'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Saves a new DataSetView.
      operationId: post_data_set_view
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetView
          description: Data set view to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetView'
      responses:
        '201':
          description: 'Array[ @/dataSetViews/dataSetViewId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSetViews/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches DataSetViews by ID.
      operationId: get_data_set_view_by_id
      produces:
        - application/json
      responses:
        '200':
          description: dataSetView response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetView'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    put:
      security:
        - Bearer: []
      summary: Updates an existing DataSetView by ID.
      operationId: update_data_set_view_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
        - name: dataSetView
          description: Data set views to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetView'
      responses:
        '201':
          description: 'Array[ @/dataSetViews/dataSetViewId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    patch:
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing DataSetView.
      operationId: patch_data_set_view_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
        - name: dataSetView
          description: Data set view field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetView'
      responses:
        '200':
          description: 'Array[ @/dataSetViews/{dataSetViewId} ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes a DataSetView by ID.
      operationId: delete_data_set_view_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/dataSetViews/dataSetViewId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSetViews/{id}/children':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Lists DataSetViews dependent on the current DataSetView.
      operationId: get_children_by_data_set_view_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: dataSetId
          description: Foreign key to the owning DataSet.
          required: false
          type: string
          in: query
        - name: name
          description: The name of this DataSetView.
          required: false
          type: string
          in: query
        - name: isDefault
          description: >-
            Marks this view as the default for it's DataSet. DataSets should
            only be associated to a single default view.
          required: false
          type: boolean
          in: query
        - name: editable
          description: >-
            Determines whether or not this DataSetView definition should be
            editable by the user.  Some documents are 'locked' and not available
            for edit.
          required: false
          type: boolean
          in: query
        - name: sdsVersion
          description: >-
            The semantic version of the SDS this view (and it's transforms) are
            compatible with.
          required: false
          type: string
          in: query
        - name: basePath
          description: >-
            Fully qualified base path for all DataSetFiles associated with this
            view. For views cached in a database (HBase or Cassandra), supply a
            templatized DSN.
          required: false
          type: string
          in: query
        - name: isCached
          description: >-
            Some DataSetViews are pre-cached in a high-speed lookup table for
            faster access, this flag indicates if that has been done.
          required: false
          type: boolean
          in: query
        - name: status
          description: >-
            Describes the current state of the view.  If a view is not enabled,
            it should not be used by any process even when it is specified as a
            dependency. Only one view of a given aspect should be enabled at any
            time. For example, no DataSet should have more than one enabled
            production or sandbox view.
          required: false
          type: string
          in: query
        - name: saveStrategy
          description: Denotes save strategy for this dataset.
          required: false
          type: string
          in: query
        - name: aspect
          description: >-
            Aspect represents the particular perspective or target you're after
            when viewing a dataset. Sandbox views are a version of the dataset
            that's being used to iterate towards a final ETL job definition. The
            production aspect is then used (by default).
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: dataSetView response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetView'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  /dataSetFiles:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      summary: Fetches a list of DataSetFiles.
      operationId: get_data_set_files
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: folderName
          description: >-
            The name of the folder as it resides in the basePath (provided from
            the DataSetView).
          required: false
          type: string
          in: query
        - name: batchId
          description: The ID of the Batch operation that created this DataSetFile.
          required: false
          type: string
          in: query
        - name: dataSetViewId
          description: The ID of the owning DataSetView.
          required: false
          type: string
          in: query
        - name: records
          description: >-
            The number of records/rows/transactions contained in file
            represented by this DataSetFile.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: Size for the file in bytes.
          required: false
          type: integer
          format: int64
          in: query
        - name: isValid
          description: >-
            True if the file can still be used. False if the file was part of a
            batch that was mistakenly uploaded or incorrect, and should no
            longer be considered.
          required: false
          type: boolean
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: connections response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFile'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Saves a new DataSetFile.
      operationId: post_data_set_file
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetFile
          description: Data set file to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFile'
      responses:
        '201':
          description: 'Array[ @/dataSets/dataSetFileId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes a DataSetFile based on a search criteria.
      operationId: delete_data_set_file_by_search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batchId
          description: >-
            ID of the batch object associated with the creation of a
            DataSetFile.
          required: false
          in: query
          type: string
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetFileId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/dataSetFiles/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches DataSetFiles by ID.
      operationId: get_data_set_file_by_id
      produces:
        - application/json
      responses:
        '200':
          description: connections response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFile'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    put:
      security:
        - Bearer: []
      summary: Updates an existing DataSetFile by ID.
      operationId: update_data_set_file_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetFile
          description: Data set file field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFile'
      responses:
        '200':
          description: ' @/dataSets/dataSetFileId '
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    patch:
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing DataSetFile.
      operationId: patch_data_set_file_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - name: dataSetFile
          description: DataSetFile field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFile'
      responses:
        '200':
          description: '@/dataSets/dataSetFileId'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes a DataSetFile by ID.
      operationId: delete_data_set_file_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: '@/dataSetFiles/'
          schema:
            type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  /sampleFiles:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      summary: Fetches a list of DataSetFiles.
      operationId: get_sample_data_set_files
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: folderName
          description: >-
            The name of the folder as it resides in the basePath (provided from
            the DataSetView).
          required: false
          type: string
          in: query
        - name: batchId
          description: The ID of the Batch operation that created this DataSetFile.
          required: false
          type: string
          in: query
        - name: dataSetViewId
          description: The ID of the owning DataSetView.
          required: true
          type: string
          in: query
        - name: records
          description: >-
            The number of records/rows/transactions contained in file
            represented by this DataSetFile.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: Size for the file in bytes.
          required: false
          type: integer
          format: int64
          in: query
        - name: isValid
          description: >-
            True if the file can still be used. False if the file was part of a
            batch that was mistakenly uploaded or incorrect, and should no
            longer be considered.
          required: false
          type: boolean
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: connections response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFile'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Saves new sample DataSetFile.
      operationId: post_sample_data_set_file
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetFile
          description: Data set file to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFile'
      responses:
        '201':
          description: 'Array[ @/sampleFiles/{fileId} ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes a DataSetFile based on a search criteria.
      operationId: delete_sample_data_set_file_by_search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batchId
          description: >-
            ID of the batch object associated with the creation of a
            DataSetFile.
          required: true
          in: query
          type: string
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetFileId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/sampleFiles/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches a sample DataSetFile by ID.
      operationId: get_sample_data_set_by_id
      produces:
        - application/json
      responses:
        '200':
          description: dataSetFile response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFile'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    put:
      security:
        - Bearer: []
      summary: Updates an existing DataSetFile by ID.
      operationId: update_sample_data_set_file_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetFile
          description: Data set file field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFile'
      responses:
        '200':
          description: ' @/dataSets/dataSetFileId '
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    patch:
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing DataSetFile.
      operationId: patch_sample_data_set_file_by_id
      consumes:
        - application/json
        - application/json-patch+json
      produces:
        - application/json
      parameters:
        - name: dataSetFile
          description: Sample dataSetFile field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFile'
      responses:
        '200':
          description: '@/dataSets/dataSetFileId'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes a sample DataSetFile by ID.
      operationId: delete_sample_data_set_file_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: ' @/sampleFiles/'
          schema:
            type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  /:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      summary: Fetches resource links for the Catalog Service.
      operationId: get_service_resources
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: serviceResources
          schema:
            $ref: '#/definitions/serviceResources'
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Allows for multiple and related Catalog API calls.
      operationId: post_service_resources
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: resources
          description: >-
            See:
            https://wiki.corp.adobe.com/pages/viewpage.action?spaceKey=DMSArchitecture&title=Catalog+Service#CatalogService-BatchingCatalogAPIRequests.
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/resourceItem'
      responses:
        '201':
          description: 'Array[ @/resource/resourceId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  /settings:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      summary: Catalog service API for sharing application settings with clients.
      operationId: get_settings
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: Charset
          schema:
            type: string
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  /transforms:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      summary: Fetches a list of Transforms.
      operationId: get_transforms
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: name
          description: The human-readable name or title for this Transform.
          required: false
          type: string
          in: query
        - name: body
          description: >-
            Lines of script that make up the transformation/mapping logic for
            this Transform.
          required: false
          type: string
          in: query
        - name: order
          description: >-
            For transforms execution order matters. The service does not enforce
            uniqueness an maintains determinism by using a sort of
            {order,created} to manage orders with the same value.
          required: false
          type: integer
          in: query
        - name: created
          description: >-
            The Unix timestamp (in milliseconds) when this DataSetView was
            persisted.
          required: false
          type: integer
          format: int64
          in: query
        - name: language
          description: The type of language this transform's body contains.
          required: false
          type: string
          in: query
        - name: codeUrl
          description: >-
            If the body of this transform is not used, it is expected that a URL
            pointing to the location of the code to be used for this transform
            is placed in this field.
          required: false
          type: string
          in: query
        - name: vehicleUrl
          description: >-
            The URL of the vehicle that will orchestrate or otherwise run the
            code in this transform.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: services response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/transform'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Saves a new Transform.
      operationId: post_transform
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transform
          description: Transform to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/transform'
      responses:
        '201':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/transforms/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches Transforms by ID.
      operationId: get_transform_by_id
      produces:
        - application/json
      responses:
        '200':
          description: services response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/transform'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    put:
      security:
        - Bearer: []
      summary: Updates an existing Transform by ID.
      operationId: update_transform_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
        - name: transform
          description: transform field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/transform'
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '500':
          description: internal server error
        default:
          description: unexpected error
    patch:
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing transform.
      operationId: patch_transform_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes a Transform by ID.
      operationId: delete_transform_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/transforms/{id}/inputs':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches inputs for a specific Transform.
      operationId: get_inputs_by_transform_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: 'Array[ {dataset: @/dataSets/dataSetId }]'
          schema:
            type: array
            items:
              type: object
            additionalProperties:
              $ref: '#/definitions/dataSet'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    patch:
      security:
        - Bearer: []
      summary: Updates inputs attributes of an existing transform.
      operationId: patch_inputs_by_transform_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - name: inputs
          description: 'Array[ {"dataSet": "@/dataSets/dataSetId"}]'
          required: true
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                dataSet:
                  type: string
        - name: if-match
          description: >-
            Set to verify the right version of document to be modified by
            matching the updated date.
          in: header
          type: string
        - name: E-tag
          description: >-
            Set to verify the right version of document to be modified by
            matching the version.
          in: header
          type: string
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/transforms/{id}/outputs':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches outputs for a specific Transform.
      operationId: get_outputs_by_transform_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: 'Array[ {dataset: @/dataSets/dataSetId }]'
          schema:
            type: array
            items:
              type: object
            additionalProperties:
              $ref: '#/definitions/dataSet'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    patch:
      security:
        - Bearer: []
      summary: Updates outputs attributes of an existing transform.
      operationId: patch_outputs_by_transform_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/E-tag'
        - name: outputs
          description: array of outputs for the transforms
          required: true
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                dataSet:
                  type: string
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/transforms/{id}/inputs/{dataSetId}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches an input DataSet for the specified Transform.
      operationId: get_inputs_by_transform_id_and_data_set_id
      produces:
        - application/json
      parameters:
        - name: dataSetId
          description: The ID of the dataSet
          required: true
          in: path
          type: string
      responses:
        '200':
          description: Data Set Object
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSet'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes an input DataSet for the specified Transform.
      operationId: delete_inputs_by_transform_id_and_data_set_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetId
          description: dataSetId
          required: true
          in: path
          type: string
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/transforms/{id}/outputs/{dataSetId}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      security:
        - Bearer: []
      summary: Fetches an output DataSet for the specified Transform.
      operationId: get_outputs_by_transform_id_and_data_set_id
      produces:
        - application/json
      parameters:
        - name: dataSetId
          description: dataSet Id
          required: true
          in: path
          type: string
      responses:
        '200':
          description: Data Set Object
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSet'
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Deletes an output DataSet for the specified Transform.
      operationId: delete_outputs_by_transform_id_and_data_set_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetId
          description: dataSetId
          required: true
          in: path
          type: string
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: forbidden
        '404':
          description: Not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/xdms/{namespace}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/namespace'
    get:
      security:
        - Bearer: []
      summary: List all objects of that namespace.
      operationId: get_obects_in_namespace
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/excludeExtension'
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/xdmVersion'
      responses:
        '200':
          description: standard xdm objects response.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/xdm'
        '404':
          description: not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/xdms/{namespace}/{objectName}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/namespace'
    get:
      security:
        - Bearer: []
      summary: Returns specific object for that namespace.
      operationId: get_obect_in_namespace
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/expansion'
        - $ref: '#/parameters/excludeExtension'
        - $ref: '#/parameters/objectName'
        - $ref: '#/parameters/xdmVersion'
      responses:
        '200':
          description: >-
            Returns the object for that namespace with or without the _customer
            extension depending if excludeExtension is set.
          schema:
            $ref: '#/definitions/xdm'
        '404':
          description: not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  /xdms/_customer:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      security:
        - Bearer: []
      summary: >-
        Returns all custom xdm objects under all namespaces the imsOrg has
        access to; can be filtered by xdmType (model|entity).
      operationId: get_all_custom_objects
      produces:
        - application/json
      parameters:
        - name: xdmType
          description: 'Custom xdm object type, possible values are model and entity.'
          required: false
          in: query
          type: string
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: custom xdm objects response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/xdm'
        '403':
          description: forbidden
        '404':
          description: not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/xdms/_customer/{extensionNS}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/extensionNS'
    get:
      security:
        - Bearer: []
      summary: Returns list of custom objects under the extension namespace.
      operationId: get_custom_objects
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: 'Array[ @/xdms/_customer/{extensionNS}/{objectName} ]'
          schema:
            type: array
            items:
              type: string
        '404':
          description: not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/xdms/_customer/{extensionNS}/{objectName}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/extensionNS'
      - $ref: '#/parameters/objectName'
    get:
      security:
        - Bearer: []
      summary: Returns specific custom object in the extension namespace.
      operationId: get_custom_object
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/expansion'
      responses:
        '200':
          description: Returns the custom object.
          schema:
            $ref: '#/definitions/xdmExtension'
        '404':
          description: not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Create a custom object in the extension namespace.
      operationId: post_custom_object
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/payload'
      responses:
        '201':
          description: 'Array[ @/xdms/_customer/{extensionNS}/{objectName} ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: bad request
        '500':
          description: internal server error
        default:
          description: unexpected error
    put:
      security:
        - Bearer: []
      summary: Create or update a custom object in the extension namespace.
      operationId: create_or_update_custom_object
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/payload'
      responses:
        '200':
          description: >-
            Sucessfully updated an existing custom XDM object. Response payload
            - 'Array[ @/xdms/_customer/{extensionNS}/{objectName} ]'
          schema:
            type: array
            items:
              type: string
        '201':
          description: >-
            Sucessfully created a custom XDM object. Response payload - 'Array[
            @/xdms/_customer/{extensionNS}/{objectName} ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: bad request
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Remove custom object in the extension namespace.
      operationId: remove_custom_object
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/xdms/_customer/{extensionNS}/{objectName} ]'
        '404':
          description: not found
        '500':
          description: internal server error
        default:
          description: unexpected error
  '/xdms/{namespace}/{objectName}/_customer/{extensionNS}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/namespace'
      - $ref: '#/parameters/objectName'
      - $ref: '#/parameters/extensionNS'
    get:
      security:
        - Bearer: []
      summary: Return extension to object in the namespace.
      operationId: get_extension_to_object
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/expansion'
      responses:
        '200':
          description: Return extension to object in the namespace.
          schema:
            $ref: '#/definitions/xdmExtension'
        '404':
          description: not found
        '500':
          description: internal server error
        default:
          description: unexpected error
    post:
      security:
        - Bearer: []
      summary: Create extension to object in the namespace.
      operationId: post_extension_to_object
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/payload'
      responses:
        '201':
          description: 'Array[ @/xdms/{namespace}/{objectName}/_customer/{extensionNS} ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: bad request
        '500':
          description: internal server error
        default:
          description: unexpected error
    put:
      security:
        - Bearer: []
      summary: Create or update extension to object in the namespace.
      operationId: create_or_update_extension_to_object
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/payload'
      responses:
        '200':
          description: >-
            Sucessfully updated an existing extension to a standard XDM object.
            Response payload - 'Array[
            @/xdms/{namespace}/{objectName}/_customer/{extensionNS} ]'
          schema:
            type: array
            items:
              type: string
        '201':
          description: >-
            Sucessfully created an extension to a standard XDM object. Response
            payload - 'Array[
            @/xdms/{namespace}/{objectName}/_customer/{extensionNS} ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: bad request
        '500':
          description: internal server error
        default:
          description: unexpected error
    delete:
      security:
        - Bearer: []
      summary: Remove extension to object in the namespace.
      operationId: remove_customer_extension
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/xdms/{namespace}/{objectName}/_customer/{extensionNS} ]'
          schema:
            type: array
            items:
              type: string
        '404':
          description: not found
        '500':
          description: internal server error
        default:
          description: unexpected error
parameters:
  orderBy:
    name: orderBy
    description: >-
      Sort parameter and direction for sorting the response. Ex.
      orderBy=asc:created,updated. This was previously called sort.
    in: query
    type: string
    required: false
  limit:
    name: limit
    description: Limit response to a specified number of objects. Ex. limit=10
    in: query
    type: integer
    required: false
  start:
    name: start
    description: >-
      Returns results from a specific offset of objects. This was previously
      called offset. Ex. start=3.
    in: query
    type: integer
    required: false
  property:
    name: property
    description: Regex used to filter objects in the response. Ex. property=name~^test.
    in: query
    type: string
    required: false
  tags:
    name: tags
    description: 'Filter response by the specified tags. Ex. tags=ns:tag,ns2:tag2'
    in: query
    type: string
    required: false
  description:
    name: description
    description: The user-provided description of the account.
    required: false
    type: string
    in: query
  version:
    name: version
    description: The Semantic version of the account. Updated when the object is modified.
    required: false
    type: string
    in: query
  created:
    name: created
    description: The Unix timestamp (in milliseconds) when this object was persisted.
    required: false
    type: integer
    format: int64
    in: query
  createdAfter:
    name: createdAfter
    description: Exclusively filter records created after this timestamp.
    required: false
    in: query
    type: integer
    format: int64
  createdBefore:
    name: createdBefore
    description: Exclusively filter records created before this timestamp.
    required: false
    in: query
    type: integer
    format: int64
  updated:
    name: updated
    description: The Unix timestamp (in milliseconds) for the time of last modification.
    required: false
    type: integer
    format: int64
    in: query
  createdClient:
    name: createdClient
    description: The ID of the IMS client that created this object.
    required: false
    type: string
    in: query
  createdUser:
    name: createdUser
    description: The ID of the user who created this object.
    required: false
    type: string
    in: query
  updatedUser:
    name: updatedUser
    description: The ID of the user who changed this object.
    required: false
    type: string
    in: query
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: The owning IMS organization identifier.
    required: true
    type: string
    in: header
  x-api-key:
    name: x-api-key
    description: The API key belonging to the calling client.
    required: true
    type: string
    in: header
  id:
    name: id
    description: Object ID
    required: true
    in: path
    type: string
  if-match:
    name: if-match
    description: >-
      Set to verify the right version of document to be modified by matching the
      updated date.
    in: header
    type: string
  E-tag:
    name: E-tag
    description: >-
      Set to verify the right version of document to be modified by matching the
      version.
    in: header
    type: string
  namespace:
    name: namespace
    description: The base namespace ("model" or "core").
    required: true
    in: path
    type: string
  excludeExtension:
    name: excludeExtension
    description: Set to true to exclude extensions.
    in: query
    type: boolean
  extensionNS:
    name: extensionNS
    description: The extension namespace.
    required: true
    in: path
    type: string
  objectName:
    name: objectName
    description: Name of custom object.
    required: true
    in: path
    type: string
  payload:
    name: payload
    description: The payload JSON that goes in the body of the request.
    required: true
    in: body
    schema:
      $ref: '#/definitions/xdmExtension'
  expansion:
    name: expansion
    description: Set to 'xdm' to expand XDM schema.
    in: query
    type: string
  xdmVersion:
    name: xdmVersion
    description: The version of the base XDM schemas that are being requested
    in: query
    type: string
    required: false
definitions:
  account:
    type: object
    properties:
      connector:
        type: string
        description: The ID for the Connector this Account params was created from.
      description:
        type: string
        description: The user-provided description of the account.
      version:
        type: string
        description: >-
          The Semantic version of the account. Updated when the Account is
          modified.
        readOnly: true
      created:
        type: integer
        format: int64
        description: The Unix timestamp (in milliseconds) when this Account was persisted.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this Account.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      params:
        type: object
        description: >-
          Keyed list of parameters used in account. The validation for these
          parameters is done based on settings in accountParams.
        properties: {}
    required:
      - imsOrg
      - connector
      - createdClient
  availableDates:
    description: >-
      Describes what date range of data is available in the Batch. Null if dates
      aren't relevant for data related to this Batch.
    properties:
      startDate:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in seconds) for the oldest data available in this
          Batch.
      endDate:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in seconds) for the most recent data available in
          this Batch.
  batch:
    type: object
    properties:
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      created:
        type: integer
        format: int64
        description: The Unix timestamp (in milliseconds) when this Batch was persisted.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this Batch.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: The Unix timestamp (in milliseconds) of last modification.
        readOnly: true
      started:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when the Batch processing action
          was started.
      completed:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when the Batch processing action
          was completed. Completed - Started should yield the total processing
          time.
      status:
        type: string
        description: The current (mutable) status of this Batch.
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
      recordCount:
        type: integer
        format: int64
        description: >-
          The total number of data records (rows/documents) processed in this
          Batch.
      failedRecordCount:
        type: integer
        format: int64
        description: The number of records that could not be processed in this Batch.
      errors:
        type: array
        description: ''
        items:
          $ref: '#/definitions/errors'
      size:
        type: integer
        format: int64
        description: Number of bytes processed in this Batch.
      version:
        type: string
        description: The Semantic version of the Batch. Updated when the Batch is modified.
        readOnly: true
      availableDates:
        type: object
        description: >-
          Describes what date range of data is available in the Batch. Null if
          dates aren't relevant for data related to this Batch.
        properties:
          startDate:
            type: integer
            format: int64
            description: >-
              The Unix timestamp (in seconds) for the oldest data available in
              this Batch.
          endDate:
            type: integer
            format: int64
            description: >-
              The Unix timestamp (in seconds) for the most recent data available
              in this Batch.
      relatedObjects:
        type: array
        description: A list of the objects involved with this Batch.
        items:
          $ref: '#/definitions/relatedObjects'
      metrics:
        type: object
        description: >-
          Contains metrics related to this Batch.  Metric names are determined
          by the producer of the object since each Batch may want to record
          metrics that are relevant to the process
        additionalProperties:
          type: integer
          format: int64
      tags:
        type: object
        description: >-
          Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that
          it understands.  Normally tags are not used for internal Catalog
          business logic
        additionalProperties:
          type: array
          items:
            type: string
    required:
      - imsOrg
      - status
  connection:
    type: object
    properties:
      connector:
        type: string
        description: The ID for the Connector this Connection was created from.
      parentConnectionId:
        type: string
        description: >-
          Used in cases where global/shared data is managed by this connection.
          The parent connection performs the ETL/Mapping jobs, and this child
          connection represents a customer's membership and visibility into the
          parent.
      name:
        type: string
        description: The user-facing name of this Connection.
      description:
        type: string
        description: The user-provided description of the Connection.
      enabled:
        type: boolean
        description: >-
          Indicates the status of the Connection. Should be interpreted as
          disabled or suspended when set to false.
      version:
        type: string
        description: >-
          The Semantic version of the batch. Updated when the Connection is
          modified.
        readOnly: true
      created:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when this Connection was
          persisted.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this Connection.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      attributes:
        type: object
        description: These are arbitrary key/value pairs related to this Connection.
        properties: {}
      dependencies:
        type: array
        description: ''
        items:
          type: string
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      contacts:
        type: array
        description: >-
          A list of persons to be contacts for this connection. One should be
          flagged as the primary contact/owner. This list is not meant to
          reflect roles or permissions, but a communication channel for
          operations related to this connection.
        items:
          $ref: '#/definitions/contacts'
      ingestStart:
        type: string
        description: Suggested date/time to start ingesting.
      frequency:
        type: object
        description: >-
          The frequency in which the data should be gathered into the platform.
          Specified either in CRONTAB format for recurring jobs or live=true for
          streaming data sources. The userEditable field is inherited from the
          parent connector.
        properties:
          userEditable:
            type: string
            description: >-
              If set to never, the user should not be allowed to adjust the
              frequency for connections created of this connection.
            enum:
              - minute
              - hour
              - day
              - month
              - week
              - never
          month:
            type: string
            description: Crontab month entry.
          day:
            type: string
            description: Crontab day entry.
          dayOfWeek:
            type: string
            description: Crontab weekday entry.
          hour:
            type: string
            description: Crontab hour entry.
          minute:
            type: string
            description: Crontab minute entry.
          timezone:
            type: string
            description: 'The timezone (ie: Europe/London).'
          live:
            type: boolean
            description: Set to true if the incoming data streams in live.
      accountId:
        type: string
        description: >-
          Foreign key to the account where the credentials and related fields of
          the connector and connection combination is stored.
      ingestParams:
        type: object
        description: >-
          Keyed list of parameters used in this connection to connect to a
          related ingest job. These params are typically persisted after the
          connection's ingest mechanism has been created, and they hold
          identifiers and configuration information related to tying this
          connection to objects in the foreign ingest systems.
        properties: {}
      statsCache:
        type: object
        description: >-
          Cached statistics for this connection. Not to be used for
          transactionally sensitive workflows, as this may be outdated or
          incorrect at times. These values cannot be submitted to Catalog.
        properties:
          earliestAvailableData:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the earliest start date of the oldest
              DataSetFile related to this connection.
          latestAvailableData:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the latest end date of the newest
              DataSetFile related to this connection.
          lastSuccess:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the updated date of the latest
              successful batch related to this connection.
          recentFailure:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the updated date of the last failed
              batch within the last week.
      tags:
        type: object
        description: >-
          Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that
          it understands.  Normally tags are not used for internal Catalog
          business logic
        additionalProperties:
          type: array
          items:
            type: string
      dule:
        type: object
        description: DULE labels.
        properties:
          contracts:
            type: array
            description: 'What Contractual Considerations, if any, apply to this data?'
            items:
              enum:
                - C1
                - C2
                - C3
                - C4
                - C5
                - C6
                - C7
                - C8
                - C9
                - None
              type: string
          identifiability:
            type: array
            description: >-
              Should this data be treated as Indirectly Identifiable Data or
              Directly Identifiable Data? (What is the level of
              Identifiability?)
            items:
              enum:
                - I1
                - I2
              type: string
          loginState:
            type: array
            description: What is the Log-in State?
            items:
              enum:
                - Identified
                - Incognito
                - Ambiguous
                - Not Provided
              type: string
          specialTypes:
            type: array
            description: >-
              Is this a special data type? (Relative to a regulated industry, or
              distinct regulatory rules, e.g. GDPR Special data, health data, or
              Financial data)
            items:
              enum:
                - S1
                - S2
              type: string
          other:
            type: string
            description: Other information that may govern the use of this data.
    required:
      - connector
      - name
      - enabled
      - version
      - createdClient
      - imsOrg
  connector:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the batch. Updated when the Connector is
          modified.
      type:
        type: string
        description: The ingest type for this Connector.
        enum:
          - batch
          - stream
      name:
        type: string
        description: Name of this Connector.
      category:
        type: string
        description: >-
          Connectors currently have 2 categories: 1) standard: we are connecting
          to a known source with known data (ie. other companies data stores) or
          2) custom: a generaic connector to FTP or S3 etc.
        enum:
          - standard
          - custom
      description:
        type: string
        description: >-
          Introductory text describing this connector, it's primary
          functionality, relevant data sets, etc.
      ingestStart:
        type: string
        description: Suggested date/time to start ingesting.
      frequency:
        type: object
        description: >-
          Suggested ingest frequency for Connections created from this
          Connector.
        properties:
          userEditable:
            type: string
            description: >-
              Signifies the granularity to which a user can configure the
              frequency settings. Settings representing the current granularity
              and smaller are allowed.
            enum:
              - minute
              - hour
              - day
              - month
              - week
              - never
          month:
            type: string
            description: Crontab month entry.
          day:
            type: string
            description: Crontab day entry.
          dayOfWeek:
            type: string
            description: Crontab weekday entry.
          hour:
            type: string
            description: Crontab hour entry.
          minute:
            type: string
            description: Crontab minute entry.
          timezone:
            type: string
            description: 'The timezone (ie: Europe/London).'
          live:
            type: boolean
            description: Set to true if the incoming data streams in live.
      uiCreationAllowed:
        type: boolean
        description: >-
          When set to false, this connector should not be shown by the UI
          Connector Library. Essentially, the UI is not to create connectors of
          this type, but should show status related to this connector elsewhere.
      maxConnections:
        type: integer
        description: >-
          The maximum number of connections a customer (IMS Org) can create of
          this type.
      documents:
        type: array
        description: >-
          URLs pointing to supporting documentation for using and gaining value
          from this connector.
        items:
          $ref: '#/definitions/documents'
      paramsSchema:
        type: object
        description: JSON Schema used to validation service params.
        properties: {}
  dataSet:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the DataSet. Updated when the DataSet is
          modified.
        readOnly: true
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      isPublic:
        type: boolean
        description: >-
          Marks this dataset as available for use (by UI) in lookup operations
          with datasets not in the current connection, or across customers.
      connectorId:
        type: string
        description: >-
          Foreign key to the Connector this DataSet originates from. Template
          DataSets are tied to Connectors and not Connections.
      connectionId:
        type: string
        description: Foreign key to the Connection this DataSet originates from.
      name:
        type: string
        description: 'A descriptive, human-readable name for this DataSet.'
      description:
        type: string
        description: A longer text description of the DataSet.
      created:
        type: integer
        format: int64
        description: The Unix timestamp (in milliseconds) when this DataSet was persisted.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this Batch.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      namespace:
        type: string
        description: One of the registered platform acronyms that identify the platform.
      tags:
        type: object
        description: >-
          Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that
          it understands.  Normally tags are not used for internal Catalog
          business logic
        additionalProperties:
          type: array
          items:
            type: string
      statsCache:
        type: object
        description: >-
          Cached statistics for this data set. These values cannot be submitted
          to Catalog.
        properties:
          failedRowCount:
            type: integer
            format: int64
            description: Rows that failed processing.
          rowCount:
            type: integer
            format: int64
            description: Total number of rows processed in the data set.
          startDate:
            type: integer
            format: int64
            description: Unix timestamp indicating the start date of the data set.
          endDate:
            type: integer
            format: int64
            description: Unix timestamp indicating the end date of the data set.
      lastBatchId:
        type: string
        description: ID of the last batch that modified the data set.
      lastBatchStatus:
        type: string
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
          - aborted
          - abandoned
        description: status of the last batch that modified the data set.
      lastSuccessfulBatch:
        type: string
        description: The ID of the last successful batch that has modified this data set.
      lastFailedBatch:
        type: string
        description: The ID of the last failed batch that has modified this data set.
        items:
          type: string
      dule:
        type: object
        description: DULE labels.
        properties:
          contracts:
            type: array
            description: 'What Contractual Considerations, if any, apply to this data?'
            items:
              enum:
                - C1
                - C2
                - C3
                - C4
                - C5
                - C6
                - C7
                - C8
                - C9
                - None
              type: string
          identifiability:
            type: array
            description: >-
              Should this data be treated as Indirectly Identifiable Data or
              Directly Identifiable Data? (What is the level of
              Identifiability?)
            items:
              enum:
                - I1
                - I2
              type: string
          loginState:
            type: array
            description: What is the Log-in State?
            items:
              enum:
                - Identified
                - Incognito
                - Ambiguous
                - Not Provided
              type: string
          specialTypes:
            type: array
            description: >-
              Is this a special data type? (Relative to a regulated industry, or
              distinct regulatory rules, e.g. GDPR Special data, health data, or
              Financial data)
            items:
              enum:
                - S1
                - S2
              type: string
          other:
            type: string
            description: Other information that may govern the use of this data.
      dataSourceId:
        type: integer
        description: 'The Id of the datasource. It must be unique, along with it''s name.'
    required:
      - imsOrg
      - createdClient
      - name
  data_types:
    description: >-
      The data type is one of the following: basic
      (string,integer,long,double,boolean,date,byte,binary,float), number,
      array, object, or map.
    type: object
  dataSetView:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the DataSetView. Updated when the DataSetView
          is modified.
        readOnly: true
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      dataSetId:
        type: string
        description: Foreign key to the owning DataSet.
      aspect:
        type: string
        description: >-
          Aspect represents the particular perspective or target you're after
          when viewing a dataset. Sandbox views are a version of the dataset
          that's being used to iterate towards a final ETL job definition. The
          production aspect is then used (by default).
        enum:
          - production
          - sandbox
      observableSchema:
        type: object
        description: >-
          observableSchema stores a JSON Schema object that is a valid subset (including the null case) of the XDM model specified by `schema`.    
      status:
        type: string
        description: >-
          Describes the current state of the view.  If a view is not enabled, it
          should not be used by any process even when it is specified as a
          dependency. Only one view of a given aspect should be enabled at any
          time. For example, no DataSet should have more than one enabled
          production or sandbox view.
        enum:
          - enabled
          - disabled
      requestStartDate:
        type: string
        description: 'The oldest date and the time, when the data was last ingested'
      editable:
        type: boolean
        description: >-
          Determines whether or not this DataSetView definition should be
          editable by the user.  Some documents are 'locked' and not available
          for edit.
      dependencies:
        type: array
        description: >-
          An array of dependency objects. If a DataSetView is referenced in a
          transform, data about that linkage should be found in this array.
        items:
          $ref: '#/definitions/dependencies'
      sdsVersion:
        type: string
        description: >-
          The semantic version of the SDS this view (and it's transforms) are
          compatible with.
      fields:
        type: array
        description: >-
          Ordered array of fields describing the resulting schema (output) for
          this view.
        items:
          allOf:
            - $ref: '#/definitions/data_types'
            - properties:
                name:
                  type: string
                  description: Field name.
                definition:
                  type: object
                  description: >-
                    Deprecated - this field is currently a hack to support
                    non-csv data.  We need to natively support this type of data
                meta:
                  type: object
                  description: Metadata descriptions for each field.
                  properties:
                    isPrimary:
                      type: boolean
                      description: Marks this field as a join key into other datasets.
                    delta:
                      type: object
                      description: >-
                        The presence of this attribute on a field indicates that
                        it is used in the origin system for retrieveing 'deltas'
                        of data
                      properties:
                        format:
                          type: string
                          description: >-
                            If the origin field is a date field this describes
                            the format of that field in the style of Java
                            SimpleDateFormat
                        timezone:
                          type: string
                          description: >-
                            The timezone that the data uses in the origin
                            system, uses the format from IANA in the tz_database
                dule:
                  type: object
                  description: DULE labels.
                  properties:
                    contracts:
                      description: >-
                        What Contractual Considerations, if any, apply to this
                        data?
                      type: array
                      items:
                        type: string
                        enum:
                          - C1
                          - C2
                          - C3
                          - C4
                          - C5
                          - C6
                          - C7
                          - C8
                          - C9
                          - None
                    identifiability:
                      description: >-
                        Should this data be treated as Indirectly Identifiable
                        Data or Directly Identifiable Data? (What is the level
                        of Identifiability?)
                      type: array
                      items:
                        type: string
                        enum:
                          - I1
                          - I2
                    loginState:
                      description: What is the Log-in State?
                      type: array
                      items:
                        type: string
                        enum:
                          - Identified
                          - Incognito
                          - Ambiguous
                          - Not Provided
                    specialTypes:
                      description: >-
                        Is this a special data type? (Relative to a regulated
                        industry, or distinct regulatory rules, e.g. GDPR
                        Special data, health data, or Financial data)
                      type: array
                      items:
                        type: string
                        enum:
                          - S1
                          - S2
                    other:
                      description: Other information that may govern the use of this data.
                      type: string
          type: object
      storageType:
        type: string
        description: >-
          Specifies the type of storage that applies to basePath. It is required
          only when basePath is not empty.
        enum:
          - s3
          - hdfs
          - azure-blob
      basePath:
        type: string
        description: >-
          Fully qualified base path for all DataSetFiles associated with this
          view. For views cached in a database (HBase or Cassandra), supply a
          templatized DSN.
        readOnly: true
      isCached:
        type: boolean
        description: >-
          Some DataSetViews are pre-cached in a high-speed lookup table for
          faster access, this flag indicates if that has been done.
      fileDescription:
        type: object
        description: Metadata describing the DataSetFiles associated with this DataSetView.
        properties:
          persisted:
            type: boolean
            description: >-
              Determines whether or not we are persisting the view to disk.  If
              this is false then the other fields in this object are redundant,
              but may be used for identifying old data that was persisted
              previously.
          containerFormat:
            type: string
            description: >-
              The Container format for all dataSetFiles associated with this
              view.
            enum:
              - text
              - sequence
              - parquet
          format:
            type: string
            description: The file format for all dataSetFiles associated with this view.
            enum:
              - ''
              - csv
              - text
              - parquet
              - json
              - sequencefile
          delimiters:
            type: array
            description: Characters used to separate fields.
            items:
              type: string
              maxLength: 1
          quotes:
            type: array
            description: ''
            items:
              type: string
          escapes:
            type: array
            description: ''
            items:
              type: string
          nullMarkers:
            type: array
            description: ''
            items:
              type: string
          header:
            type: boolean
            description: ''
          charset:
            type: string
            description: The character encoding of the files.
            enum:
              - US-ASCII
              - UTF-8
              - ISO-8859-1
              - ''
      partitions:
        type: array
        description: ''
        items:
          type: string
      saveStrategy:
        type: string
        description: Denotes save strategy for this dataset.
        enum:
          - append
          - overwrite
          - delta
      created:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when this DataSetView was
          persisted.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this DataSetView.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      schema:
        type: string
        description: This is the uri for the XDM model
    required:
      - imsOrg
      - createdClient
      - dataSetId
      - aspect
      - status
  dataSetFile:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the DataSetFile. Updated when the DataSetFile
          is modified. Pattern: Pattern:
          ^[0-9]+\.[0-9]+\.[0-9]+((-[.0-9A-Za-z\-\+]+)|(\+[.0-9A-Za-z\-\+]+))*$
      folderName:
        type: string
        description: >-
          The name of the folder as it resides in the basePath (provided from
          the DataSetView).
      batchId:
        type: string
        description: The ID of the Batch operation that created this DataSetFile.
      created:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when this DataSetFile was
          persisted.
      updated:
        type: integer
        format: int64
        description: The Unix timestamp (in milliseconds) of last modification.
      imsOrg:
        type: string
        description: >-
          The owning IMS organization identifier. Pattern:
          ^[0-9A-Za-z]@[Aa]dobe[Oo]rg$
      dataSetViewId:
        type: string
        description: The ID of the owning DataSetView.
      createdClient:
        type: string
        description: The ID of the IMS client that created this Batch.
      createdUser:
        type: string
        description: The ID of the user who created this object.
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
      records:
        type: integer
        format: int64
        description: >-
          The number of records/rows/transactions contained in file represented
          by this DataSetFile.
      size:
        type: integer
        format: int64
        description: Size for the file in bytes.
      isValid:
        type: boolean
        description: >-
          True if the file can still be used. False if the file was part of a
          batch that was mistakenly uploaded or incorrect, and should no longer
          be considered.
      availableDates:
        $ref: '#/definitions/availableDates'
      sampleParent:
        type: array
        description: >-
          If this is a sample then this field contains the ID's of the
          DataSetFiles that it was generated from
        items:
          type: string
  healthcheck:
    type: object
    properties:
      status:
        type: boolean
  health-detailed:
    type: object
    properties:
      status:
        type: boolean
      dependencies:
        type: array
        description: List of catalog dependencies and their health
        items:
          $ref: '#/definitions/health-dependencies'
  health-dependencies:
    type: object
    properties:
      service:
        type: string
      status:
        type: boolean
  serviceResources:
    type: object
    properties:
      connector:
        type: string
      dataSource:
        type: string
      dataSet:
        type: string
      transform:
        type: string
  resourceItem:
    type: object
    properties:
      id:
        type: string
      method:
        type: string
      resource:
        type: string
      body:
        type: object
  duleLabelResonse:
    type: object
    description: >-
      Structure of the DULE label response that includes all labels associated
      with a given dataset.
    properties:
      connection:
        type: object
        description: >-
          If the dataset has a parent connection, the connection labels are
          returned.
      dataset:
        type: object
        description: The DULE labels on the dataset itself.
      fields:
        type: array
        description: The DULE labels on the individual fields.
        items:
          type: object
  transform:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the Transform. Updated when the Transform is
          modified.
        readOnly: true
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      inputs:
        type: array
        description: Input array for dataSetIds
        items:
          type: object
          description: 'dataset:@/dataSet/dataSetId'
          properties:
            dataSet:
              type: string
      outputs:
        type: array
        description: Output array for dataSetIds
        items:
          type: object
          description: 'dataset:@/dataSet/dataSetId'
          properties:
            dataSet:
              type: string
      dataSetId:
        type: string
        description: The ID of the dataSet.
      created:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when this DataSetView was
          persisted.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this Batch.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      name:
        type: string
        description: The human-readable name or title for this Transform.
      body:
        type: string
        description: >-
          Lines of script that make up the transformation/mapping logic for this
          Transform.
      language:
        type: string
        description: The type of language this transform's body contains.
        enum:
          - application/vnd.apache.spark-sql
      codeUrl:
        type: string
        description: >-
          If the body of this transform is not used, it is expected that a URL
          pointing to the location of the code to be used for this transform is
          placed in this field.
      vehicleUrl:
        type: string
        description: >-
          The URL of the vehicle that will orchestrate or otherwise run the code
          in this transform.
      args:
        type: array
        description: >-
          Contains all arguments that are required to actually run Transform
          entity.
        items:
          type: string
          description: An argument which is required to run transform entity.
          pattern: '^[.a-zA-Z0-9\-_$={} ]+$'
    required:
      - imsOrg
  xdm:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the XDM object. Updated when the XDM is
          modified.
        readOnly: true
      created:
        type: integer
        description: >-
          The Unix timestamp (in milliseconds) when this XDM object was
          persisted.
        readOnly: true
      updated:
        type: integer
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this XDM object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      schemaId:
        type: string
        description: ''
      title:
        type: string
        description: ''
      type:
        type: string
        description: ''
      description:
        type: string
        description: ''
      key:
        type: array
        description: Primary keys for the custom XDM object
        items:
          type: string
          description: Primary key field for the custom XDM object
      properties:
        type: object
        description: ''
        properties: {}
      state:
        type: string
        description: ''
      xdmType:
        type: string
        description: The type of this xdm object.
        enum:
          - model
          - entity
    required:
      - type
      - description
      - properties
  xdmExtension:
    type: object
    properties:
      version:
        type: string
        description: >-
          The version of the xdm extension. Updated when the xdm extension is
          modified.
        readOnly: true
      created:
        type: integer
        description: >-
          The Unix timestamp (in milliseconds) when this xdm extension was
          persisted.
        readOnly: true
      updated:
        type: integer
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this xdm extension.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      schemaId:
        type: string
        description: ''
      title:
        type: string
        description: ''
      type:
        type: string
        description: ''
      description:
        type: string
        description: ''
      key:
        type: array
        description: Primary keys for the custom XDM object
        items:
          type: string
          description: Primary key field for the custom XDM object
      properties:
        type: object
        description: ''
        properties: {}
      xdmType:
        type: string
        description: The type of this xdm object.
        enum:
          - model
          - entity
    required:
      - type
      - description
      - properties
  errors:
    type: object
    properties:
      code:
        type: string
        description: >-
          An enumerated code that details the type of error encountered. This
          value should be understandable by the reader and writer and eventually
          allow for localized error message (and solution) descriptions.
      rows:
        type: array
        description: >-
          Indicates which rows exhibit this error. Could be a single number, or
          a hyphen-delimited range.
        items:
          type: string
          description: Row or range of rows this error was encountered on.
      description:
        type: string
        description: >-
          A human-readable description of the error. This message may be
          transmitted to clients, but isn't meant for customer-facing UIS.
  relatedObjects:
    type: object
    properties:
      type:
        type: string
        description: The type of object processed in this Batch.
        enum:
          - batch
          - connection
          - connector
          - dataSet
          - dataSetFile
          - dataSetView
          - transform
      id:
        type: string
        description: ''
      tag:
        type: string
        description: >-
          The name for the relation the specified object had with this Batch
          operation. Examples: input, output, trigger, etc.
      status:
        type: string
        description: The current (mutable) status of this dataset.
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
      errors:
        type: array
        description: ''
        items:
          $ref: '#/definitions/errors'
      metrics:
        type: object
        description: Contains metrics related to this dataset.
        additionalProperties:
          type: integer
          format: int64
  contacts:
    type: object
    properties:
      email:
        type: string
        format: email
      displayName:
        type: string
        description: Display name for this contact.
      isPrimary:
        type: boolean
        description: >-
          Indicates if this contact is (one of the) 'owners' or primary contacts
          for this connection.
  documents:
    type: object
    properties:
      name:
        type: string
        description: The display name for this reference document.
      type:
        type: string
        description: The format for this document.
        enum:
          - pdf
          - word
          - html
      link:
        type: string
        description: The full URI to this document.
  dependencies:
    type: object
    properties:
      dataSetId:
        type: string
        description: The ID of the dataset this view is dependent upon.
      dataSetViewId:
        type: string
        description: The ID of the view this view is dependent upon.
      type:
        type: string
        description: >-
          The type dependency. Activity for views that generate rows needed to
          be incorporated, and Lookup for views that provide metadata-like
          lookups/additional columns.
        enum:
          - lookup
          - activity
          - snapshot-lookup
          - snapshot-activity
  credentials:
    type: object
    description: Credentials.
    properties:
      clientKey:
        type: string
        description: Credentials client key.
      clientId:
        type: string
        description: Credentials client ID.
      tenantId:
        type: string
        description: Credentials tenant ID.
      resourceGroupName:
        type: string
        description: Credentials resource group.
      subscriptionId:
        type: string
        description: Credentials subscription ID.
  dataSetCredentials:
    type: object
    properties:
      dataSetId:
        type: string
        description: The ID of the dataset these credentials are for.
      path:
        type: string
        description: Base storage path for this dataset.
      stagePath:
        type: string
        description: Staging base path for ingest.
      credentials:
        $ref: '#/definitions/credentials'
