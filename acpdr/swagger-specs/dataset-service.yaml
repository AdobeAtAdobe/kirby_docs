swagger: '2.0'
info:
  version: '1.0'
  title: Dataset Service API
  description: >-
    - Service description:
        - The Dataset Service API provides several endpoints to help you manage data usage labels for existing datasets within the Data Lake. Data usage labels are part of Adobe Experience Platform Data Governance, which allows you to manage customer data and ensure compliance with regulations, restrictions, and policies applicable to data use. Dataset Service is separate from Catalog Service, which manages other dataset metadata.

    - Related documentation:
        - [Data Governance documentation](http://www.adobe.com/go/data-governance-overview-en)
        - [Catalog Service documentation](http://www.adobe.com/go/data-catalog-service-overview-en)

    - API paths:
        - PLATFORM Gateway URL: https://<span>platform.adobe.io/
        - Base path for this API: /data/foundation/dataset
        - Example of a complete path: https://<span>platform.adobe.io/data/foundation/dataset/datasets/5abd49645591445e1ba04f87/labels

    - Required headers:
        - All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        - All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
        - All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

basePath: /data/foundation/dataset
host: platform.adobe.io
tags:
  - name: Datasets
    description: A dataset is a storage and management construct for a collection of data, typically a table, that contains a schema (columns) and fields (rows). Data usage labels can be applied to entire datasets or individual fields within those datasets in order to enforce usage restrictions.
produces:
  - application/json
paths:
  '/datasets/{DATASET_ID}/labels':
    get:
      tags:
        - Datasets
      summary: Retrieve data usage labels for a specified dataset.
      operationId: getDatasetLabels
      parameters:
        - $ref: '#/parameters/DATASET_ID'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      produces:
        - application/json
      responses:
        '200':
          description: The data usage labels for the specified dataset were retrieved.
          schema:
            $ref: '#/definitions/getDULELabels'
        '404':
          description: The labels entity was not found. If the dataset indicated in the request path does not have any existing labels applied, this error will occur.
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      tags:
        - Datasets
      summary: Add data usage labels to a specified dataset, and/or specific fields within that dataset.
      operationId: postDatasetLabels
      produces: 
        - application/json
      parameters:
        - $ref: '#/parameters/DATASET_ID'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/json-header'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DULELabel'
      responses:
        '201':
          description: The data usage labels were successfully added.
          schema:
            $ref: '#/definitions/DULELabel'
        '403':
          description: "The labels entity already exists. Use a PUT request instead."
          schema:
            $ref: '#/definitions/DULEForbiddenError'
        '409':
            description: "A data usage policy violation has ocurred."
            schema:
              $ref: '#/definitions/DULEConflictError'
    put:
      tags:
        - Datasets
      summary: Update the data usage labels for a specified dataset, and/or specific fields within that dataset.
      operationId: putDatasetLabels
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/DATASET_ID'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/json-header'
        - $ref: '#/parameters/If-Match'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DULELabel'
      responses:
        '200':
            description: "The data usage labels were successfully updated."
            schema:
              $ref: '#/definitions/DULELabel'
        '404':
            description: "The labels entity was not found."
            schema:
              $ref: '#/definitions/NotFoundError'
        '409':
            description: "A data usage policy violation has ocurred."
            schema:
              $ref: '#/definitions/DULEConflictError'

    delete:
      tags:
        - Datasets
      summary: Remove all data usage labels for a specified dataset.
      description: The deletion is a 'non-strict' delete. That is, the entity, all labels for the entity, and any associated references to the dataset as a child entity will be removed.
      operationId: deleteDatasetLabels
      parameters:
        - $ref: '#/parameters/DATASET_ID'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/If-Match'
      produces:
        - application/json
      responses:
        '200':
          description: "The data usage labels were successfully removed."
        '403':
          description: "The data usage labels cannot be deleted."
parameters:
  x-sandbox-name:
    name: x-sandbox-name
    description: >-
      The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information.
    required: true
    type: string
    in: header
  authorization:
    name: Authorization
    description: >-
      The access token which can be copied from your Experience Platform integration, prefixed with "Bearer". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: >-
      The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  x-api-key:
    name: x-api-key
    description: >-
      The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  json-header:
    name: Content-Type
    description: 'The media type being sent in the request payload. The required value for calls to the Dataset Service API is "application/json".'
    required: true
    type: string
    in: header
  DATASET_ID:
    name: DATASET_ID
    in: path
    type: string
    required: true
    description: >-
      The ID of an existing dataset. Dataset IDs can be retrieved using the [Catalog Service API](https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/catalog.yaml).
  If-Match:
    name: If-Match
    in: header
    required: true
    description: >- 
      The version of the dataset entity to compare against. As a requirement for all PUT and DELETE requests for dataset labels, the call will only update the dataset entity if the "If-Match" string matches that of the "etag" header that is returned in all responses from the Dataset Service API.
    type: string
definitions:
  getDULELabels:
    allOf:
      - properties:
          imsOrg:
            type: string
      - $ref: '#/definitions/DULELabel'
  DULELabel:
      type: object
      properties:
        labels:
          type: array
          items:
            type: string
            example: ["C1", "C2"]
        optionalLabels:
          type: array
          items:
            type: object
            properties:
              option:
                type: object
                properties:
                  id: 
                    type: string
                    example: "https://ns.adobe.com/{TENANT_ID}/schemas/{SCHEMA_ID}"
                  contentType:
                    type: string
                    example: "application/vnd.adobe.xed-full+json;version=1"
                  schemaPath:
                    type: string
                    example: "/properties/repositoryCreatedBy"
              labels:
                type: array
                items:
                  type: string
                  example: ["S1", "S2"]
  DULEForbiddenError:
    type: object
    properties:
      timeStamp:
        type: string
        example: "2020-06-26T16:01:09.091Z"
      status:
        type: string
        example: "FORBIDDEN"
      code:
        type: string
        example: "PES-403"
      message:
        type: string
        example: "POST Forbidden. Entity already exists. Use PUT instead."
      path:
        type: string
        example: "/entities"
  NotFoundError:
    type: object
    properties:
      timestamp:
        type: string
        example: "2021-04-21T19:56:46.551Z"
      status:
        type: string
        example: "NOT_FOUND"
      code:
        type: string
        example: "PES-404"
      message:
        type: string
        example: "GET Entities Not Found"
      path:
        type: string
        example: "/entities/AEP:dataset:60105b5e1af43c18db857d69"
  DULEConflictError:
    type: object
    properties:
      code:
        type: string
        example: "PES-409"
      message:
        type: string
        example: "Policy conflict error"
      violations:
        type: array
        items:
          $ref: '#/definitions/policyViolation'
      count:
        type: number
        example: 1
  policyViolation:
    type: object
    properties:
      enforcementRef:
        type: string
        example: "/dulepolicy/marketingActions/core/g72cbgy644bsgc3becbba1e197fa25c1e/constraints"
      entities:
        type: array
        items: 
          $ref: '#/definitions/DULELabel'
      violatedPolicies:
        type: array
        items:
          $ref: '#/definitions/violatedPolicy'
  violatedPolicy:
    type: object
    properties:
      id:
        type: string
        example: "corepolicy_0001"
      name:
        type: string
        example: "3rd party export restriction"
      status:
        type: string
        example: "ENABLED"
      description:
        type: string
        example: "Policy for restricting data export to 3rd parties."
      deny:
        $ref: '#/definitions/policyDeny'
  policyDeny:
    type: object
    properties:
      label:
        type: string
        example: "C1"
      operator:
        type: string
        example: "AND"
      operands:
        type: array
        items: 
          type: string
          example: [{ "label": "C1" }, { "label": "C2"}]
      imsOrg:
        type: string
        example: "{IMS_ORG}"
      sandboxName:
        type: string
        example: "prod"
      created:
        type: number
        example: 1529696681413
      createdClient:
        type: string
        example: "{CLIENT_ID}"
      createdUser:
        type: string
        example: "{USER_ID}"
      updated:
        type: number
        example: 1529696681413
      updatedClient:
        type: string
        example: "{CLIENT_ID}"
      updatedUser:
        type: string
        example: "{USER_ID}"
      marketingActionRefs:
        type: array
        items:
          type: string
          example: ["https://platform.adobe.io/data/foundation/dulepolicy/marketingActions/core/exportToThirdParty"]
      _links:
        $ref: '#/definitions/_links'
  _links:
    type: object
    properties:
      self:
        type: object
        properties:
          href:
            type: string
            example: "https://platform.adobe.io/data/foundation/dulepolicy/policies/custom/5db3393907d49f198b8f0e6a"
