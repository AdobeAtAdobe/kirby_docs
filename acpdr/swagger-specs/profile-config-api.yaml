swagger: '2.0'
info:
  description: >-
    Use this API to control the manner by which Unified Profile merges XDM schema objects on Adobe Experience Platform. 


    For more information, see [Unified Profile Overview](https://www.adobe.io/apis/cloudplatform/dataservices/profile-identity-segmentation/profile-identity-segmentation-services.html#!api-specification/markdown/narrative/technical_overview/unified_profile_architectural_overview/unified_profile_architectural_overview.md).


    Notes:
      * PLATFORM Gateway URL: https://platform.adobe.io/
      * Base path for this API: /data/core/ups/config
      * All requests with a payload in the request body (i.e., POST, PUT, and PATCH calls) must include the header 'Content-Type: application/json'.

  version: 18.10.1
  title: Unified Profile Configuration API
  termsOfService: 'https://www.adobe.com/legal/terms.html'
host: platform.adobe.io
basePath: /data/core/ups/config
tags:
  - name: mergePolicies
  - name: health
paths:
  /mergePolicies:
    get:
      tags:
        - mergePolicies
      summary: Returns a list of Profile Merge Policies.
      description: ''
      operationId: getMergePoliciesRoute
      produces:
        - application/json
      parameters:
        - name: x-api-key
          in: header
          description: API Key
          required: true
          type: string
          x-example: "<replace with your api key>"
        - name: Authorization
          in: header
          description: Authorization token
          required: true
          type: string
          x-example: "Bearer <replace with your token>"
        - name: "x-gw-ims-org-id"
          in: "header"
          description: "IMS Organization ID"
          required: true
          type: "string"
          x-example: "1BD@Adobe.com"
        - name: start
          in: query
          description: Page Offset - As per created Time of resource
          required: false
          type: integer
          format: int64
          x-example: 109103839
        - name: limit
          in: query
          description: Page Size
          required: false
          type: integer
          x-example: 10
        - name: order
          in: query
          description: Page Order - Asc/Desc
          required: false
          type: string
          x-example: Asc
        - name: id
          in: query
          description: Id of the merge policy
          required: false
          type: string
          x-example: 0e530929-0054-45b9-ac35-97140863db54
      responses:
        '200':
          description: List of Profile mergepolicy returned
          schema:
            $ref: '#/definitions/MergePoliciesResponse'
        '403':
          description: Forbidden
        '500':
          description: ''
        '503':
          description: Service Unavailable
    post:
      tags:
        - mergePolicies
      summary: Creates a new Profile MergePolicy
      description: ''
      operationId: postMergePolicyRoute
      produces:
        - application/json
      parameters:
        - name: x-api-key
          in: header
          description: API Key
          required: true
          type: string
          x-example: "<replace with your api key>"
        - name: Authorization
          in: header
          description: Authorization token
          required: true
          type: string
          x-example: "Bearer <replace with your token>"
        - name: "x-gw-ims-org-id"
          in: "header"
          description: "IMS Organization ID"
          required: true
          type: "string"
          x-example: "1BD@Adobe.com"
        - in: body
          name: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/MergePolicyEntityRequest'
      responses:
        '200':
          description: Profile MergePolicy successfully Posted
          schema:
            $ref: '#/definitions/MergePolicyEntity'
          headers:
            X-Location:
              type: string
              description: HRef to the Profile MergePolicy
        '400':
          description: ''
        '403':
          description: Forbidden
        '500':
          description: ''
        '503':
          description: Service Unavailable
    patch:
      tags:
        - mergePolicies
      summary: 'Patches a merge policy when provided with merge policy id as query param. Primary use is to make a merge policy default for a (schema,imsOrg) pair'
      description: ''
      operationId: patchMergePoliciesByIdRoute
      produces:
        - application/json
      parameters:
        - name: x-api-key
          in: header
          description: API Key
          required: true
          type: string
          x-example: "<replace with your api key>"
        - name: Authorization
          in: header
          description: Authorization token
          required: true
          type: string
          x-example: "Bearer <replace with your token>"
        - name: "x-gw-ims-org-id"
          in: "header"
          description: "IMS Organization ID"
          required: true
          type: "string"
          x-example: "1BD@Adobe.com"
        - name: id
          in: path
          description: Id of the merge policy
          required: true
          type: string
          x-example: 0e530929-0054-45b9-ac35-97140863db54
        - in: body
          name: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/MergePolicyEntityUpdate'
      responses:
        '200':
          description: Profile MergePolicy successfully Patched
          schema:
            $ref: '#/definitions/MergePolicyEntity'
        '403':
          description: Forbidden
        '404':
          description: Profile MergePolicy not found
        '500':
          description: ''
        '503':
          description: Service Unavailable
  '/mergePolicies/{internalId}':
    get:
      tags:
        - mergePolicies
      summary: Returns the Profile MergePolicy
      description: ''
      operationId: getMergePolicyRoute
      produces:
        - application/json
      parameters:
        - name: internalId
          in: path
          description: ID of the Merge Policy
          required: true
          type: string
          x-example: "MDoyOjRhNDVlODUzLWFjOTEtNGJiNy1hNDI2LTE1MDkzN2I2YWY1Yzo0Mg=="
        - name: x-api-key
          in: header
          description: API Key
          required: true
          type: string
          x-example: "<replace with your api key>"
        - name: Authorization
          in: header
          description: Authorization token
          required: true
          type: string
          x-example: "Bearer <replace with your token>"
        - name: "x-gw-ims-org-id"
          in: "header"
          description: "IMS Organization ID"
          required: true
          type: "string"
          x-example: "1BD@Adobe.com"
      responses:
        '200':
          description: Profile MergePolicy successfully Returned
          schema:
            $ref: '#/definitions/MergePolicyEntity'
        '403':
          description: Forbidden
        '404':
          description: Profile MergePolicy not found
        '500':
          description: ''
        '503':
          description: Service Unavailable
    delete:
      tags:
        - mergePolicies
      summary: Deletes the mergepolicy given it's internal id
      description: ''
      operationId: deleteMergePolicyRoute
      produces:
        - application/json
      parameters:
        - name: internalId
          in: path
          description: ID of the Merge Policy
          required: true
          type: string
          x-example: "MDoyOjRhNDVlODUzLWFjOTEtNGJiNy1hNDI2LTE1MDkzN2I2YWY1Yzo0Mg=="
        - name: x-api-key
          in: header
          description: API Key
          required: true
          type: string
          x-example: "<replace with your api key>"
        - name: Authorization
          in: header
          description: Authorization token
          required: true
          type: string
          x-example: "Bearer <replace with your token>"
        - name: "x-gw-ims-org-id"
          in: "header"
          description: "IMS Organization ID"
          required: true
          type: "string"
          x-example: "1BD@Adobe.com"
      responses:
        '200':
          description: Profile MergePolicy deleted successfully
          schema:
            $ref: '#/definitions/MessageResponse'
        '403':
          description: Forbidden
        '500':
          description: ''
        '503':
          description: Service Unavailable
    patch:
      tags:
        - mergePolicies
      summary: 'Patches a merge policy given it''s internal id. Primary use is to make a merge policy default for a (schema,imsOrg) pair.'
      description: ''
      operationId: patchMergePoliciesByInternalIdRoute
      produces:
        - application/json
      parameters:
        - name: x-api-key
          in: header
          description: API Key
          required: true
          type: string
          x-example: "<replace with your api key>"
        - name: Authorization
          in: header
          description: Authorization token
          required: true
          type: string
          x-example: "Bearer <replace with your token>"
        - name: "x-gw-ims-org-id"
          in: "header"
          description: "IMS Organization ID"
          required: true
          type: "string"
          x-example: "1BD@Adobe.com"
        - name: internalId
          in: path
          description: MergePolicy Id
          required: true
          type: string
          x-example: '12345678'
        - in: body
          name: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/MergePolicyEntityUpdate'
      responses:
        '200':
          description: Profile MergePolicy successfully Patched
          schema:
            $ref: '#/definitions/MergePolicyEntity'
        '403':
          description: Forbidden
        '404':
          description: Profile MergePolicy not found
        '500':
          description: ''
        '503':
          description: Service Unavailable
securityDefinitions: {}
definitions:
  MergePolicyEntity:
    type: object
    required:
      - attributeMerge
      - creationTime
      - current
      - default
      - id
      - identityGraph
      - imsOrgId
      - schemaId
      - schemaName
      - updateTime
      - version
    properties:
      internalId:
        type: number
      imsOrgId:
        type: string
      schemaId:
        type: string
      schemaName:
        type: string
      id:
        type: string
      identityGraph:
        type: string
      attributeMerge:
        type: string
      default:
        type: boolean
      version:
        type: integer
        format: int32
      current:
        type: boolean
      creationTime:
        type: integer
        format: int64
      updateTime:
        type: integer
        format: int64
  MergePolicyEntityRequest:
    type: object
    required:
      - concatenatedMssg$default$2
      - default
    properties:
      imsOrgId:
        type: string
      schema:
        type: object
        additionalProperties:
          type: number
      id:
        type: string
      identityGraph:
        type: object
        additionalProperties:
          type: number
      attributeMerge:
        type: object
        additionalProperties:
          type: number
      default:
        type: boolean
      concatenatedMssg$default$2:
        type: string
  MergePoliciesResponse:
    type: object
    required:
      - mergePolicies
    properties:
      mergePolicies:
        type: array
        items:
          $ref: '#/definitions/MergePolicyEntity'
  MergePolicyEntityUpdate:
    type: object
    properties:
      identityGraph:
        type: object
        additionalProperties:
          type: number
      attributeMerge:
        type: object
        additionalProperties:
          type: number
      default:
        type: number
      version:
        type: number
      current:
        type: number
      creationTime:
        type: number
      updateTime:
        type: number
  MessageResponse:
    type: object
    required:
      - message
      - status
    properties:
      status:
        type: boolean
      message:
        type: string