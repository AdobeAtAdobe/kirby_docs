swagger: '2.0'
info:
  version: 1.0.0
  title: Catalog Service API
  description: >-
    Catalog Service is the system of record for data location, lineage, schema definition, 
    and usage labeling for Adobe Experience Platform.


    Related documentation:
      * [Catalog Service Overview](https://www.adobe.io/apis/experienceplatform/home/services/allservices.html#!api-specification/markdown/narrative/technical_overview/catalog_architectural_overview/catalog_architectural_overview.md)
      * [Creating and Populating a Dataset and Ingesting Data From a File](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/creating_a_dataset_tutorial/creating_a_dataset_tutorial.md)


    Notes:
      * PLATFORM Gateway URL: https://platform.adobe.io/
      * Base path for this API: /data/foundation/catalog
      * All service calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these, please see the <a href='https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/authenticate_to_acp_tutorial/authenticate_to_acp_tutorial.md'>authentication tutorial</a>.
  termsOfService: 'https://www.adobe.com/legal/terms.html'
basePath: /data/foundation/catalog
host: platform.adobe.io
tags:
  - name: Accounts
  - name: Batches
  - name: Batched Requests
  - name: Connections
  - name: Connectors
  - name: Datasets
  - name: DataSetFiles
  - name: DataSetViews
  - name: Large Documents
  - name: Tags
  - name: Transforms
  - name: Health
  
produces:
  - application/json
paths:
  /accounts:
    get:
      tags:
        - Accounts
      operationId: get_accounts
      summary: Fetches a list of Accounts.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-id'
        - name: connector
          description: The ID for the Connector this Account params was created from.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/accept-encoding'
        - $ref: '#/parameters/description'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: account response.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/accountResponse'
          examples:
            application/json:
              {
                  "597650bf4b358a650c6127bb": {
                      "connector": "salesforce",
                      "version": "1.0.0",
                      "created": 1500926143359,
                      "updated": 1500926143359,
                      "createdClient": "MCDPCatalogServiceStage",
                      "createdUser": "MCDPCatalogServiceStage@AdobeID",
                      "updatedUser": "MCDPCatalogServiceStage@AdobeID",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "params": {
                          "username": "foo",
                          "password": {
                              "value": "XXXXXXX",
                              "isSecret": true
                         } ,
                          "securityToken": {
                              "value": "XXXXXXX",
                              "isSecret": true
                          }
                      }
                  }
               }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Accounts
      summary: Saves a new account.
      operationId: post_account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-id'
        - $ref: '#/parameters/accept-encoding'
        - name: account
          description: Account to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/accountRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/accounts/{id}':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Accounts
      operationId: get_account_by_id
      summary: Fetches Accounts by ID.
      produces:
        - application/json
      responses:
        '200':
          description: account response.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/accountResponse'
          examples:
              application/json:
                          {
                              "597650bf4b358a650c6127bb": {
                                  "connector": "salesforce",
                                  "version": "1.0.0",
                                  "created": 1500926143359,
                                  "updated": 1500926143359,
                                  "createdClient": "MCDPCatalogServiceStage",
                                  "createdUser": "MCDPCatalogServiceStage@AdobeID",
                                  "updatedUser": "MCDPCatalogServiceStage@AdobeID",
                                  "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                                  "params": {
                                      "username": "foo",
                                      "password": {
                                          "value": "XXXXXXX",
                                          "isSecret": true
                                     } ,
                                      "securityToken": {
                                          "value": "XXXXXXX",
                                          "isSecret": true
                                      }
                                  }
                              }
                           }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Accounts
      summary: Saves a new Account with a specified ID.
      operationId: post_account_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: account
          description: Account to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/accountRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - Accounts
      summary: Updates an existing Account by ID.
      operationId: update_account_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: account
          description: Account field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/accountRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Accounts
      summary: Updates specified attributes of an existing Account.
      operationId: patch_account_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - name: account
          description: Account field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/accountPatchRequest'
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/json-header'
        - $ref: '#/parameters/if-none-match'
      responses:
        '200':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Accounts
      summary: Deletes an Account by ID.
      operationId: delete_account_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /batches:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Batches
      operationId: get_batch
      summary: Fetches a list of Batches.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/tags'
        - name: status
          description: Filter by the current (mutable) status of this Batch.
          required: false
          type: string
          in: query
        - name: recordCount
          description: >-
            Filter by the total number of data records (rows/documents) processed in this
            Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: failedRecordCount
          description: Filter by the number of records that could not be processed in this Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: Number of bytes processed in this Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: started
          description: >-
            Filter by the Unix timestamp (in milliseconds) when the Batch processing
            action was started.
          required: false
          type: integer
          format: int64
          in: query
        - name: completed
          description: >-
            Filter by the Unix timestamp (in milliseconds) when the Batch processing
            action was completed. Completed - Started should yield the total
            processing time.
          required: false
          type: integer
          format: int64
          in: query
        - name: startAfter
          description: >-
            Query only batches with availability dates that start after the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: startBefore
          description: >-
            Query only batches with availability dates that start before the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endAfter
          description: >-
            Query only batches with availability dates that end after the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endBefore
          description: >-
            Query only batches with availability dates that end before the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: batch
          description: 'Used to filter on the related object: &batch=batchId.'
          required: false
          type: string
          in: query
        - name: externalId
          description: 'Used to filter on the related object: &externalId=externalId.'
          required: false
          type: string
          in: query
        - name: connection
          description: 'Used to filter on the related object: &connection=connectionId.'
          required: false
          type: string
          in: query
        - name: connector
          description: 'Used to filter on the related object: &connector=connectorId.'
          required: false
          type: string
          in: query
        - name: dataSet
          description: 'Used to filter on the related object: &dataSet=dataSetId.'
          required: false
          type: string
          in: query
        - name: dataSetFile
          description: 'Used to filter on the related object: &dataSetFile=dataSetFileId.'
          required: false
          type: string
          in: query
        - name: dataSetView
          description: 'Used to filter on the related object: &dataSetView=dataSetViewId.'
          required: false
          type: string
          in: query
        - name: transform
          description: 'Used to filter on the related object: &transform=transformId.'
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: batch response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/batchResponse'
          examples:
            application/json:
              {
                  "5911f88ae2f4bf657c5a8cb5": {
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "created": 1494349962314,
                      "createdClient": "MCDPCatalogServiceStage",
                      "createdUser": "MCDPCatalogServiceStage@AdobeID",
                      "updatedUser": "MCDPCatalogServiceStage@AdobeID",
                      "updated": 1494349963467,
                      "externalId": "/adobe/bulkingest/5af9ee67e4045c1b4945c209",
                      "status": "success",
                      "errors": [
                          {
                              "code": "err-1494349963436"
                          }
                      ],
                      "version": "1.0.3",
                      "availableDates": {
                          "startDate": 1337,
                          "endDate": 4000
                      },
                      "relatedObjects": [
                          {
                              "type": "batch",
                              "id": "foo_batch"
                          },
                          {
                              "type": "connection",
                              "id": "foo_connection"
                          },
                          {
                              "type": "connector",
                              "id": "foo_connector"
                          },
                          {
                              "type": "dataSet",
                              "id": "foo_dataSet"
                          },
                          {
                              "type": "dataSetView",
                              "id": "foo_dataSetView"
                          },
                          {
                              "type": "dataSetFile",
                              "id": "foo_dataSetFile"
                          },
                          {
                              "type": "expressionBlock",
                              "id": "foo_expressionBlock"
                          },
                          {
                              "type": "service",
                              "id": "foo_service"
                          },
                          {
                              "type": "serviceDefinition",
                              "id": "foo_serviceDefinition"
                          }
                      ],
                      "metrics": {
                          "foo": 1337
                      },
                      "tags": {
                          "foo_bar": [
                              "stuff"
                          ],
                          "bar_foo": [
                              "woo",
                              "baz"
                          ],
                          "foo/bar/foo-bar": [
                              "weehaw",
                              "wee:haw"
                          ]
                      },
                      "inputFormat": {
                        "format": "parquet",
                        "delimiter": ".",
                        "quote": "`",
                        "escape": "\\",
                        "nullMarker": "",
                        "header": "true",
                        "charset": "UTF-8"
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Batches
      summary: Saves a new Batch.
      operationId: post_batch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch
          description: Batch to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/batches/uniques/{field}':
    parameters:
      - name: field
        description: Field to get unique values for
        required: true
        type: string
        in: path
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Batches
      operationId: get_unique_batch_values
      summary: Fetches the unique values stored in the requested field, standard filtering applies before gathering the uniques. Supported fields are [id]
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - $ref: '#/parameters/version'
        - name: status
          description: Filter by the current (mutable) status of this Batch.
          required: false
          type: string
          in: query
        - name: recordCount
          description: >-
            Filter by the total number of data records (rows/documents) processed in this
            Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: failedRecordCount
          description: Filter by the number of records that could not be processed in this Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: Number of bytes processed in this Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: started
          description: >-
            Filter by the Unix timestamp (in milliseconds) when the Batch processing
            action was started.
          required: false
          type: integer
          format: int64
          in: query
        - name: completed
          description: >-
            Filter by the Unix timestamp (in milliseconds) when the Batch processing
            action was completed. Completed - Started should yield the total
            processing time.
          required: false
          type: integer
          format: int64
          in: query
        - name: startAfter
          description: >-
            Query only batches with availability dates that start after the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: startBefore
          description: >-
            Query only batches with availability dates that start before the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endAfter
          description: >-
            Query only batches with availability dates that end after the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endBefore
          description: >-
            Query only batches with availability dates that end before the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: batch
          description: 'Used to filter on the related object: &batch=batchId.'
          required: false
          type: string
          in: query
        - name: externalId
          description: 'Used to filter on the related object: &externalId=externalId.'
          required: false
          type: string
          in: query
        - name: connection
          description: 'Used to filter on the related object: &connection=connectionId.'
          required: false
          type: string
          in: query
        - name: connector
          description: 'Used to filter on the related object: &connector=connectorId.'
          required: false
          type: string
          in: query
        - name: dataSet
          description: 'Used to filter on the related object: &dataSet=dataSetId.'
          required: false
          type: string
          in: query
        - name: dataSetFile
          description: 'Used to filter on the related object: &dataSetFile=dataSetFileId.'
          required: false
          type: string
          in: query
        - name: dataSetView
          description: 'Used to filter on the related object: &dataSetView=dataSetViewId.'
          required: false
          type: string
          in: query
        - name: transform
          description: 'Used to filter on the related object: &transform=transformId.'
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: batch response
          schema:
            type: array
            items:
              type: string
          examples:
            application/json:
              ["5911f88ae2f4bf657c5a8cb5", "5911f88ae2f4bf657c5a8cb4", "5911f88ae2f4bf657c5a8cb3"]
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/batches/{id}':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Batches
      operationId: get_batch_by_id
      description: Fetches Batches by ID.
      produces:
        - application/json
      parameters:
        - name: aggregate
          description: >-
            If true, then return the aggregated status, metrics, and errors in
            the root level status, metrics, and errors (default is false).
          required: false
          type: boolean
          in: query
      responses:
        '200':
          description: Batch object for given batchId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/batchResponse'
          examples:
            application/json:
              {
                  "5911f88ae2f4bf657c5a8cb5": {
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "created": 1494349962314,
                      "createdClient": "MCDPCatalogServiceStage",
                      "createdUser": "MCDPCatalogServiceStage@AdobeID",
                      "updatedUser": "MCDPCatalogServiceStage@AdobeID",
                      "updated": 1494349963467,
                      "externalId": "/adobe/bulkingest/5af9ee67e4045c1b4945c209",
                      "status": "success",
                      "errors": [
                          {
                              "code": "err-1494349963436"
                          }
                      ],
                      "version": "1.0.3",
                      "availableDates": {
                          "startDate": 1337,
                          "endDate": 4000
                      },
                      "relatedObjects": [
                          {
                              "type": "batch",
                              "id": "foo_batch"
                          },
                          {
                              "type": "connection",
                              "id": "foo_connection"
                          },
                          {
                              "type": "connector",
                              "id": "foo_connector"
                          },
                          {
                              "type": "dataSet",
                              "id": "foo_dataSet"
                          },
                          {
                              "type": "dataSetView",
                              "id": "foo_dataSetView"
                          },
                          {
                              "type": "dataSetFile",
                              "id": "foo_dataSetFile"
                          },
                          {
                              "type": "expressionBlock",
                              "id": "foo_expressionBlock"
                          },
                          {
                              "type": "service",
                              "id": "foo_service"
                          },
                          {
                              "type": "serviceDefinition",
                              "id": "foo_serviceDefinition"
                          }
                      ],
                      "metrics": {
                          "foo": 1337
                      },
                      "tags": {
                          "foo_bar": [
                              "stuff"
                          ],
                          "bar_foo": [
                              "woo",
                              "baz"
                          ],
                          "foo/bar/foo-bar": [
                              "weehaw",
                              "wee:haw"
                          ]
                      },
                      "inputFormat": {
                        "format": "parquet",
                        "delimiter": ".",
                        "quote": "`",
                        "escape": "\\",
                        "nullMarker": "",
                        "header": "true",
                        "charset": "UTF-8"
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Batches
      summary: Creates a new Batch with a specified Id.
      operationId: post_batch_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch
          description: Batch to be created.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - Batches
      summary: Updates an existing Batch by ID.
      operationId: update_batch_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: batch
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Batches
      summary: Updates specified attributes of an existing Batch.
      operationId: patch_batch_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchPatchRequest'
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/json-header'
        - $ref: '#/parameters/if-none-match'
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Batches
      summary: Deletes a Batch by ID.
      operationId: delete_batch_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /health:
    get:
      tags:
        - Health
      summary: >-
        Catalog healthcheck report. Used by monitoring services and dashboards. On local
        the URI is /catalog/health.
      operationId: get_catalog_healthcheck
      produces:
        - application/json
      parameters:
        - name: x-api-key
          description: API key for request.
          required: true
          type: string
          in: header
      responses:
        '200':
          description: healthcheck response
          schema:
            $ref: '#/definitions/healthcheck'
        '503':
          description: service unavailable
        default:
          description: Unexpected error
  /health-detailed:
    get:
      tags:
        - Health
      summary: >-
        Catalog healthcheck report with dependencies. Used by monitoring
        services and dashboards.On local the URI should be /catalog/health-detailed.
      operationId: get_catalog_detailed_healthcheck
      produces:
        - application/json
      parameters:
        - name: x-api-key
          description: API key for request.
          required: true
          type: string
          in: header
      responses:
        '200':
          description: healthcheck response
          schema:
            $ref: '#/definitions/health-detailed'
        '503':
          description: service unavailable
        default:
          description: Unexpected error
  '/largeDocuments/{id}':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Large Documents
      operationId: get_largeDocument_by_id
      summary: Fetches Large document by ID.
      produces:
        - application/json
      responses:
        '200':
          description: Large Document response. The response includes the large document.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/largeDocumentsResponse'
          examples:
            application/json:
              {
                  "56a1c00e9f8e2c53284add34": {
                      "created": 1453441038288,
                      "ttl": 1453441038288,
                      "objectType": "dataSet",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "jsonString": {
                            name: 'datasets functional tests',
                            description: "Functional test for data sets",
                            connectorId: 's3-push',
                            tags: {
                              'foo': ['bar', 'foos', 'ball'],
                              'adobe/touchpoint/appliedTransformations': ['CLUSTERED:FOO']
                            },
                            status: 'enabled',
                            aspect: 'production',
                            requestStartDate: '1992-10-10 10:10:10',
                            basePath: fakeBasePath,
                            codeUrl: 'foo://bar/baz/fuzz.git'
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Large Document not found.
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /connections:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Connections
      summary: Fetches a list of Connections.
      operationId: get_connections
      produces:
        - application/json
      parameters:
        - name: connector
          description: Filter by the ID for the Connector this Connection was created from.
          required: false
          type: string
          in: query
        - name: parentConnectionId
          description: >-
            Used in cases where global/shared data is managed by this
            connection. The parent connection performs the ETL/Mapping jobs, and
            this child connection represents a customer's membership and
            visibility into the parent. This query param will filter all connectors
            by the parentConnectorId value.
          required: false
          type: string
          in: query
        - name: name
          description: Filter by the user-facing name of this Connection.
          required: false
          type: string
          in: query
        - name: accountId
          description: >-
            Filter by the foreign key to the account where the credentials and related fields
            of the connector and connection combination is stored.
          required: false
          type: string
          in: query
        - name: description
          description: Filter by the user-provided description of the Connection.
          required: false
          type: string
          in: query
        - name: enabled
          description: >-
            Indicates the status of the Connection. Should be interpreted as
            disabled or suspended when set to false.
          required: false
          type: boolean
          in: query
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: ingestStart
          description: Filter by the suggested date/time to start ingesting.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: Connections response. The response also includes a reference to linked datasets.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connectionResponse'
          examples:
            application/json:
              {
                  "56a1c00e9f8e2c53284add34": {
                      "connector": "dfa",
                      "name": "connection_1",
                      "enabled": true,
                      "version": "1.0.0",
                      "created": 1453441038288,
                      "updated": 1453441038288,
                      "createdClient": "MCDPCatalogServiceStage",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSets": "@/connections/56a1c00e9f8e2c53284add34/dataSets",
                      "statsCache": {
                          "earliestAvailableData": null,
                          "latestAvailableData": null,
                          "lastSuccess": null,
                          "recentFailure": null
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Connections
      summary: Saves a new Connection.
      operationId: post_connection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: connection
          in: body
          description: Connection to be posted.
          required: true
          schema:
            $ref: '#/definitions/connectionRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/connections/{id}':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Connections
      operationId: get_connection_by_id
      summary: Fetches Connections by ID.
      produces:
        - application/json
      responses:
        '200':
          description: Connections response. The response also includes a reference to linked datasets.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connectionResponse'
          examples:
            application/json:
              {
                  "56a1c00e9f8e2c53284add34": {
                      "connector": "dfa",
                      "name": "connection_1",
                      "enabled": true,
                      "version": "1.0.0",
                      "created": 1453441038288,
                      "updated": 1453441038288,
                      "createdClient": "MCDPCatalogServiceStage",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSets": "@/connections/56a1c00e9f8e2c53284add34/dataSets",
                      "statsCache": {
                          "earliestAvailableData": null,
                          "latestAvailableData": null,
                          "lastSuccess": null,
                          "recentFailure": null
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Connections
      summary: Saves a new Connection with a specified ID.
      operationId: post_connection_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: connection
          in: body
          description: Connection to be posted.
          required: true
          schema:
            $ref: '#/definitions/connectionRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - Connections
      summary: Updates an existing Connection by ID.
      operationId: update_connection_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: connection
          description: Connection field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/connectionRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Connections
      summary: Updates specified attributes of an existing Connection.
      operationId: patch_connection_by_id
      consumes:
        - application/json
        - application/json-patch+json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: connection
          description: Connection field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/connectionPatchRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Connections
      summary: Deletes a Connection by ID.
      operationId: delete_connection_by_id
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/connections/{id}/dataSets':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Connections
      operationId: get_data_sets_by_connection_id
      summary: Fetches DataSets for the given Connection.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: Datasets associated with input connectionId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "contacts": [{
                      "email": "someEmailId@something.com",
                      "displayName": "dummyName",
                      "isPrimary": true
                      }],
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /connectors:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Connectors
      summary: Fetches the list of Connectors.
      operationId: get_connectors
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - name: type
          description: Filter by the ingest type for this Connector.
          required: false
          type: string
          in: query
        - name: name
          description: Filter by the name of this Connector.
          required: false
          type: string
          in: query
        - name: category
          description: >-
            Connectors currently have 2 categories: 1) standard: we are
            connecting to a known source with known data (ie. other companies
            data stores) or 2) custom: a generaic connector to FTP or S3 etc.
            This query param can be used to filter all connectors by their
            category.
          required: false
          type: string
          in: query
        - name: description
          description: >-
            Filter by the introductory text describing this connector, it's primary
            functionality, relevant data sets, etc.
          required: false
          type: string
          in: query
        - name: maxConnections
          description: >-
            Filter by the maximum number of connections a customer (IMS Org) can create of
            this type.
          required: false
          type: integer
          in: query
        - name: uiCreationAllowed
          description: >-
            When set to false, this connector should not be shown by the UI
            Connector Library. Essentially, the UI is not to create connectors
            of this type, but should show status related to this connector
            elsewhere.
          required: false
          type: boolean
          in: query
        - name: connectorOwnedDataSets
          description: >-
            Indicates whether or not the Connector 'owns' the datasets created 
            by this connector.  If so then there are certain things like GDPR that 
            are not controlled by Platform but instead are controlled by the 
            originating solution/vendor.  If not present or false then platform 'owns' 
            the dataset.
          required: false
          type: boolean
          in: query
        - name: internal
          description: >-
            Indicates if the connector is internal to Adobe, false indicates that 
            the connector is from a third-party
          required: false
          type: boolean
          in: query
        - name: ingestStart
          description: Filter by the suggested date/time to start ingesting.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of all connectors for given ims_org_id.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connectorResponse'
          examples:
            application/json:
              {
                  "dynamics-online": {
                      "name": "Microsoft Dynamics 365",
                      "category": "standard",
                      "version": "0.1",
                      "type": "batch",
                      "description": "",
                      "documents": [],
                      "ingestStart": "",
                      "frequency": {
                          "userEditable": "minute",
                          "minute": "30",
                          "hour": "2",
                          "month": "*",
                          "day": "*",
                          "dayOfWeek": "*",
                          "timezone": "",
                          "live": false
                      },
                      "uiCreationAllowed": true,
                      "paramsSchema": {
                          "properties": {
                              "organizationName": {
                                  "description": "The organization name of the Dynamics instance.",
                                  "type": "string"
                              },
                              "username": {
                                  "description": "The user's identification name associated with the credential.",
                                  "type": "string"
                              },
                              "password": {
                                  "description": "The Dynamics password.",
                                  "type": "string"
                              },
                              "organizationUri": {
                                  "description": "The Dynamics urganization URI",
                                  "type": "string"
                              },
                              "akvSecretPassword": {
                                  "description": "The Azure Key Vault secret identifier of the password for the user name associated with the credential.",
                                  "type": "string"
                              }
                          },
                          "required": [
                              "username",
                              "password",
                              "organizationUri"
                          ]
                      },
                      "stats": "@/connectors/dynamics-online/stats"
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/connectors/{id}':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Connectors
      summary: Fetches Connectors by ID.
      operationId: get_connector_by_id
      produces:
        - application/json
      responses:
        '200':
          description: Connector object for input connectorId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connectorResponse'
          examples:
            application/json:
              {
                  "dynamics-online": {
                      "name": "Microsoft Dynamics 365",
                      "category": "standard",
                      "version": "0.1",
                      "type": "batch",
                      "description": "",
                      "documents": [],
                      "ingestStart": "",
                      "frequency": {
                          "userEditable": "minute",
                          "minute": "30",
                          "hour": "2",
                          "month": "*",
                          "day": "*",
                          "dayOfWeek": "*",
                          "timezone": "",
                          "live": false
                      },
                      "uiCreationAllowed": true,
                      "paramsSchema": {
                          "properties": {
                              "organizationName": {
                                  "description": "The organization name of the Dynamics instance.",
                                  "type": "string"
                              },
                              "username": {
                                  "description": "The user's identification name associated with the credential.",
                                  "type": "string"
                              },
                              "password": {
                                  "description": "The Dynamics password.",
                                  "type": "string"
                              },
                              "organizationUri": {
                                  "description": "The Dynamics urganization URI",
                                  "type": "string"
                              },
                              "akvSecretPassword": {
                                  "description": "The Azure Key Vault secret identifier of the password for the user name associated with the credential.",
                                  "type": "string"
                              }
                          },
                          "required": [
                              "username",
                              "password",
                              "organizationUri"
                          ]
                      },
                      "stats": "@/connectors/dynamics-online/stats"
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/connectors/{id}/stats':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Connectors
      summary: Fetches statistics for a given Connector.
      operationId: get_stats_by_connector_id
      produces:
        - application/json
      responses:
        '200':
          description: Returns connection count for given connector id.
          schema:
            type: object
            properties:
              connectorId:
                type: integer
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /dataSets:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Fetches a list of DataSets.
      operationId: get_data_sets
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: connectorId
          description: >-
            Filter by the foreign key to the Connector this DataSet originates from. Template
            DataSets are tied to Connectors and not Connections.
          required: false
          type: string
          in: query
        - name: connectionId
          description: Filter by the foreign key to the Connection this DataSet originates from.
          required: false
          type: string
          in: query
        - name: name
          description: 'Filter by the a descriptive, human-readable name for this DataSet.'
          required: false
          type: string
          in: query
        - name: description
          description: Filter by the longer text description of the DataSet.
          required: false
          type: string
          in: query
        - name: type
          description: >-
            DataSet types reflect where the data is in the MCDP lifecycle. Raw
            datasets are created by ingest, Master datasets are created by the
            Harvester, and Model datasets are configured by users. App datasets
            can then be created by MCDP services. This query param allows
            filtering of datasets by their type.
          required: false
          type: string
          in: query
        - name: state
          description: The state related to a dataset.
          required: false
          type: string
          in: query
        - name: namespace
          description: One of the registered platform acronyms that identify the platform.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: All datasets for given imsOrg.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "editableClientIds":["acp_foundation_catalog"],
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "contacts": [{
                      "email": "someEmailId@something.com",
                      "displayName": "dummyName",
                      "isPrimary": true
                      }],
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Datasets
      summary: Saves a new DataSet.
      operationId: post_data_set
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: requestDataSource
          description: >-
            Set to true if you want Catalog to create a dataSource on your
            behalf; otherwise, pass a dataSourceId in the body.
          type: string
          in: query
        - name: dataSet
          description: Data set to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Fetches DataSets by ID.
      operationId: get_data_set_by_id
      produces:
        - application/json
      parameters:
        - name: properties
          description: >-
            A comma separated whitelist of top-level object properties to be returned in the response. Used
            to cut down the number of properties and amount of data returned in the response bodies.
          in: query
          type: string
          required: false
      responses:
        '200':
          description: DataSet object for input DataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "editableClientIds": ["acp_foundation_catalog"],
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "contacts": [{
                      "email": "someEmailId@something.com",
                      "displayName": "dummyName",
                      "isPrimary": true
                      }],
                      "state":"DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - Datasets
      summary: Updates an existing DataSet by ID.
      operationId: update_data_set_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: requestDataSource
          description: >-
            Set to true if you want Catalog to create a dataSource on your
            behalf; otherwise, pass a dataSourceId in the body.
          type: string
          in: query
        - name: dataSet
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Datasets
      summary: Updates specified attributes of an existing DataSet.
      operationId: patch_data_set_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: dataSet
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Datasets
      summary: Deletes a DataSet by ID.
      operationId: delete_data_set_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/credentials':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/x-user-token'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Fetches credentials for the given dataSet.
      operationId: get_credentials_by_data_set_id
      produces:
        - application/json
      parameters:
        - name: batchId
          description: >-
            If wishing to write, the batchId used during writing. Required for
            buliding a stage path.
          required: false
          in: query
          type: string
      responses:
        '200':
          description: Creadential object given dataSet.
          schema:
            $ref: '#/definitions/dataSetCredentials'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/views':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Lists DataSetViews for this DataSet.
      operationId: get_data_set_views_by_data_set_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of dataSetView objects associated with given dataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetViewResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Datasets
      summary: Creates a new DataSetView for this dataSet.
      operationId: post_data_set_view_by_data_set_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetView
          description: Datasetview to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetViewRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/dataSets/dataSetId/views/viewId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/views/{viewid}':
    parameters:
      - $ref: '#/parameters/id'
      - name: viewid
        description: datasetview id
        required: true
        in: path
        type: string
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Fetches a particular DataSetView for this DataSet.
      operationId: get_data_set_view_by_data_set_id_by_id
      produces:
        - application/json
      responses:
        '200':
          description: DataSetView associated with input dataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetViewResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/views/{viewId}/files':
    parameters:
      - $ref: '#/parameters/id'
      - name: viewId
        description: dataSetViewId
        required: true
        in: path
        type: string
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Lists the dataSetFiles for a particular dataSetView for this dataSet.
      operationId: get_data_set_files_by_data_set_id_and_data_set_view_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of dataSetFiles for given dataSetViewId and dataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFileResponse'
          examples:
            application/json:
              {
                  "5abd49645591445e1ba04f87": {
                      "version": "1.0.0",
                      "created": 1522354532905,
                      "updated": 1522354532905,
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetViewId": "5ab54170864cf0267448ead5",
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "availableDates": {
                          "startDate": 4444,
                          "endDate": 5555
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Datasets
      summary: Adds DataSetFile to a particular DataSetView for this DataSet.
      operationId: post_data_set_file_by_data_set_id_and_data_set_view_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - name: dataSetFile
          description: Data set file to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFileRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/dataSets/{datasetId}/views/{viewId}/files/{fileId} ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/views/{viewId}/files/{fileId}':
    parameters:
      - $ref: '#/parameters/id'
      - name: viewId
        description: dataSetView ID
        required: true
        in: path
        type: string
      - name: fileId
        description: file ID
        required: true
        in: path
        type: string
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Fetches a dataSetFile for a particular dataSetView for this dataSet.
      operationId: get_data_set_file_by_data_set_id_and_data_set_view_id_by_id
      produces:
        - application/json
      responses:
        '200':
          description: DataSetFile for given fileId, dataSetViewId and dataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFileResponse'
          examples:
            application/json:
              {
                  "5abd49645591445e1ba04f87": {
                      "version": "1.0.0",
                      "created": 1522354532905,
                      "updated": 1522354532905,
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetViewId": "5ab54170864cf0267448ead5",
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "availableDates": {
                          "startDate": 4444,
                          "endDate": 5555
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Datasets
      summary: Removes a DataSetFile for a particular DataSetView for this DataSet.
      operationId: delete_data_set_file_by_data_set_id_and_data_set_view_id_by_id
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/{datasetId?/views/{viewId}/files/{fileId} ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/ingestBatchSummary':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: >-
        Retrieves summarized stats for a DataSet's batches. Default time window:
        last seven days.
      operationId: get_data_set_batches_summary
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: Batch summary object for given dataSetId.
          schema:
            $ref: '#/definitions/batchResponse'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/dule':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Returns the DULE labels associated with a dataset.
      operationId: get_dule_labels
      produces:
        - application/json
      responses:
        '200':
          description: The DULE labels assocated with the dataset.
          schema:
            $ref: '#/definitions/duleLabelResponse'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /dataSetViews:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - DataSetViews
      summary: Fetches a list of DataSetViews.
      operationId: get_data_set_views
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: dataSetId
          description: Filter by the foreign key to the owning DataSet.
          required: false
          type: string
          in: query
        - name: name
          description: Filter by the name of this DataSetView.
          required: false
          type: string
          in: query
        - name: isDefault
          description: >-
            Marks this view as the default for it's DataSet. DataSets should
            only be associated to a single default view. This query param
            allows filtering of dataSetViews by their isDefault field value.
          required: false
          type: boolean
          in: query
        - name: status
          description: >-
            Describes the current state of the view.  If a view is not enabled,
            it should not be used by any process even when it is specified as a
            dependency. Only one view of a given aspect should be enabled at any
            time. For example, no DataSet should have more than one enabled
            production or sandbox view. This query param allows filtering all
            dataSetViews by their status field value.
          required: false
          type: string
          in: query
        - name: editable
          description: >-
            Determines whether or not this DataSetView definition should be
            editable by the user.  Some documents are 'locked' and not available
            for edit. This query param allows filtering all dataSetViews by
            their status editable value.
          required: false
          type: boolean
          in: query
        - name: sdsVersion
          description: >-
            Filter by the semantic version of the SDS this view (and it's transforms) are
            compatible with.
          required: false
          type: string
          in: query
        - name: basePath
          description: >-
            Filter by the fully qualified base path for all DataSetFiles associated with this
            view. For views cached in a database (HBase or Cassandra), supply a
            templatized DSN.
          required: false
          type: string
          in: query
        - name: saveStrategy
          description: Filter by the save strategy for this dataset.
          required: false
          type: string
          in: query
        - name: isCached
          description: >-
            Some DataSetViews are pre-cached in a high-speed lookup table for
            faster access, this flag indicates if that has been done. This query param
            allows filtering all dataSetViews by their isCached field value.
          required: false
          type: boolean
          in: query
        - name: aspect
          description: >-
            Aspect represents the particular perspective or target you're after
            when viewing a dataset. Sandbox views are a version of the dataset
            that's being used to iterate towards a final ETL job definition. The
            production aspect is then used (by default). This query param allows
            filtering all dataSetViews by their aspect field value.
          required: false
          type: string
          in: query
        - name: schema
          description: This is the uri for the XDM model.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of all dataSetViews associated with given ims_org_id.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetViewResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - DataSetViews
      summary: Saves a new dataSetView.
      operationId: post_data_set_view
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetView
          description: DataSetView to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetViewRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/dataSetViews/dataSetViewId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSetViews/{id}':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - DataSetViews
      summary: Fetches DataSetViews by ID.
      operationId: get_data_set_view_by_id
      produces:
        - application/json
      parameters:
        - name: properties
          description: >-
            A comma separated whitelist of top-level object properties to be returned in the response. Used
            to cut down the number of properties and amount of data returned in the response bodies.
          in: query
          type: string
          required: false
      responses:
        '200':
          description: DataSetView for given dataSetViewId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetViewResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - DataSetViews
      summary: Updates an existing DataSetView by ID.
      operationId: update_data_set_view_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: dataSetView
          description: DataSetViews to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetViewRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/dataSetViews/dataSetViewId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - DataSetViews
      summary: Updates specified attributes of an existing DataSetView.
      operationId: patch_data_set_view_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: dataSetView
          description: Data set view field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetViewPatchRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/dataSetViews/{dataSetViewId} ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - DataSetViews
      summary: Deletes a DataSetView by ID.
      operationId: delete_data_set_view_by_id
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/dataSetViews/dataSetViewId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /dataSetFiles:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - DataSetFiles
      summary: Fetches a list of DataSetFiles.
      operationId: get_data_set_files
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: folderName
          description: >-
            Filter by the name of the folder as it resides in the basePath (provided from
            the DataSetView).
          required: false
          type: string
          in: query
        - name: batchId
          description: Filter by the ID of the Batch operation that created this DataSetFile.
          required: false
          type: string
          in: query
        - name: dataSetViewId
          description: Filter by the ID of the owning DataSetView.
          required: false
          type: string
          in: query
        - name: records
          description: >-
            Filter by the number of records/rows/transactions contained in file
            represented by this DataSetFile.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: Filter by the size for the file in bytes.
          required: false
          type: integer
          format: int64
          in: query
        - name: isValid
          description: >-
            True if the file can still be used. False if the file was part of a
            batch that was mistakenly uploaded or incorrect, and should no
            longer be considered. This query param can be used to filter all
            files with isValid field value.
          required: false
          type: boolean
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of dataSetFiles associated with given ims_org_id.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFileResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - DataSetFiles
      summary: Saves a new DataSetFile.
      operationId: post_data_set_file
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetFile
          description: Data set file to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFileRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/dataSets/dataSetFileId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - DataSetFiles
      summary: Deletes a DataSetFile based on a search criteria.
      operationId: delete_data_set_file_by_search
      produces:
        - application/json
      parameters:
        - name: batchId
          description: >-
            ID of the batch object associated with the creation of a
            DataSetFile.
          required: false
          in: query
          type: string
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetFileId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSetFiles/{id}':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - DataSetFiles
      summary: Fetches DataSetFiles by ID.
      operationId: get_data_set_file_by_id
      produces:
        - application/json
      responses:
        '200':
          description: connections response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFileResponse'
          examples:
            application/json:
              {
                  "5abd49645591445e1ba04f87": {
                      "version": "1.0.0",
                      "created": 1522354532905,
                      "updated": 1522354532905,
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetViewId": "5ab54170864cf0267448ead5",
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "availableDates": {
                          "startDate": 4444,
                          "endDate": 5555
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - DataSetFiles
      summary: Updates an existing DataSetFile by ID.
      operationId: update_data_set_file_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetFile
          description: Data set file field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFileRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: ' @/dataSets/dataSetFileId '
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - DataSetFiles
      summary: Updates specified attributes of an existing DataSetFile.
      operationId: patch_data_set_file_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - name: dataSetFile
          description: DataSetFile field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFilePatchRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: '@/dataSets/dataSetFileId'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - DataSetFiles
      summary: Deletes a DataSetFile by ID.
      operationId: delete_data_set_file_by_id
      produces:
        - application/json
      responses:
        '200':
          description: '@/dataSetFiles/'
          schema:
            type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
    get:
      tags:
        - Batched Requests
      summary: Fetches resource links for the Catalog Service.
      operationId: get_service_resources
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: serviceResources
          schema:
            $ref: '#/definitions/serviceResources'
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Batched Requests
      summary: Allows for multiple and related Catalog API calls.
      operationId: post_service_resources
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: resources
          description: >-
            See:
            https://wiki.corp.adobe.com/pages/viewpage.action?spaceKey=DMSArchitecture&title=Catalog+Service#CatalogService-BatchingCatalogAPIRequests.
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/resourceItem'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/resource/resourceId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /transforms:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Transforms
      summary: Fetches a list of Transforms.
      operationId: get_transforms
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: name
          description: Filter by the human-readable name or title for this Transform.
          required: false
          type: string
          in: query
        - name: body
          description: >-
            Filter by the  lines of script that make up the transformation/mapping logic for
            this Transform.
          required: false
          type: string
          in: query
        - name: order
          description: >-
            For transforms execution order matters. The service does not enforce
            uniqueness an maintains determinism by using a sort of
            {order,created} to manage orders with the same value.
          required: false
          type: integer
          in: query
        - name: created
          description: >-
            Filter by the Unix timestamp (in milliseconds) when this DataSetView was
            persisted.
          required: false
          type: integer
          format: int64
          in: query
        - name: language
          description: Filter by the type of language this transform's body contains.
          required: false
          type: string
          in: query
        - name: codeUrl
          description: >-
            If the body of this transform is not used, it is expected that a URL
            pointing to the location of the code to be used for this transform
            is placed in this field.
          required: false
          type: string
          in: query
        - name: vehicleUrl
          description: >-
            The URL of the vehicle that will orchestrate or otherwise run the
            code in this transform.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of transforms associated with given ims_org_id.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/transformResponse'
          examples:
            application/json:
              {
                  "5abac7063998860540c7b848": {
                      "version": "1.0.5",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "created": 1522190086195,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "updated": 1522190612384,
                      "codeUrl": "git://example.com/foo/bar/something.git",
                      "args": [
                          "--context_param profile_dsv_in0.inputPath=${CATALOG.DSV.5ab540d0864cf0267448ead4.inputFiles}"
                      ],
                      "inputs": [],
                      "outputs": [
                          {
                              "dataSet": "@/dataSets/123456"
                          }
                      ]
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Transforms
      summary: Saves a new Transform.
      operationId: post_transform
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transform
          description: Transform to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/transformRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/transforms/{id}':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Transforms
      summary: Fetches Transforms by ID.
      operationId: get_transform_by_id
      produces:
        - application/json
      responses:
        '200':
          description: Transform object for given transformId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/transformResponse'
          examples:
            application/json:
              {
                  "5abac7063998860540c7b848": {
                      "version": "1.0.5",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "created": 1522190086195,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "updated": 1522190612384,
                      "codeUrl": "git://example.com/foo/bar/something.git",
                      "args": [
                          "--context_param profile_dsv_in0.inputPath=${CATALOG.DSV.5ab540d0864cf0267448ead4.inputFiles}"
                      ],
                      "inputs": [],
                      "outputs": [
                          {
                              "dataSet": "@/dataSets/123456"
                          }
                      ]
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - Transforms
      summary: Updates an existing Transform by ID.
      operationId: update_transform_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: transform
          description: Transform field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/transformRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Transforms
      summary: Updates specified attributes of an existing transform.
      operationId: patch_transform_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/json-header'
        - $ref: '#/parameters/if-none-match'
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Transforms
      summary: Deletes a Transform by ID.
      operationId: delete_transform_by_id
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/transforms/{id}/inputs':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Transforms
      summary: Fetches inputs for a specific Transform.
      operationId: get_inputs_by_transform_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: 'Array[ {dataset: @/dataSets/dataSetId }]'
          schema:
            type: array
            items:
              type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Transforms
      summary: Updates inputs attributes of an existing transform.
      operationId: patch_inputs_by_transform_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: inputs
          description: 'Array[ {"dataSet": "@/dataSets/dataSetId"}]'
          required: true
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                dataSet:
                  type: string
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/transforms/{id}/outputs':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Transforms
      summary: Fetches outputs for a specific Transform.
      operationId: get_outputs_by_transform_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: 'Array[ {dataset: @/dataSets/dataSetId }]'
          schema:
            type: array
            items:
              type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Transforms
      summary: Updates outputs attributes of an existing transform.
      operationId: patch_outputs_by_transform_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: outputs
          description: array of outputs for the transforms
          required: true
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                dataSet:
                  type: string
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/transforms/{id}/inputs/{dataSetId}':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Transforms
      summary: Fetches an input DataSet for the specified Transform.
      operationId: get_inputs_by_transform_id_and_data_set_id
      produces:
        - application/json
      parameters:
        - name: dataSetId
          description: The ID of the dataSet
          required: true
          in: path
          type: string
      responses:
        '200':
          description: Data Set Object
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Transforms
      summary: Deletes an input DataSet for the specified Transform.
      operationId: delete_inputs_by_transform_id_and_data_set_id
      produces:
        - application/json
      parameters:
        - name: dataSetId
          description: dataSetId
          required: true
          in: path
          type: string
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/transforms/{id}/outputs/{dataSetId}':
    parameters:
      - $ref: '#/parameters/id'
      - name: dataSetId
        description: dataSet Id
        required: true
        in: path
        type: string
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Transforms
      summary: Fetches an output DataSet for the specified Transform.
      operationId: get_outputs_by_transform_id_and_data_set_id
      produces:
        - application/json
      responses:
        '200':
          description: Data Set Object
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Transforms
      summary: Deletes an output DataSet for the specified Transform.
      operationId: delete_outputs_by_transform_id_and_data_set_id
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/tags/{tagNamespace}':
    parameters:
      - $ref: '#/parameters/tagNamespace'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Tags
      summary: This API allows retrieving aggregated values for all tags within an IMS org for given tagNamespace.
      operationId: get_tags
      produces:
        - application/json
      responses:
        '200':
          description: Returns aggregated tagValues for given namespace.
          schema:
            $ref: '#/definitions/tagsResponse'
          examples:
            application/json:
              {
                "objectType": {
                  "datasets": ["@/DataSet/5b20017aa492bbd30425e21b",
                               "@/DataSet/5b20451bf4c5e1f6fad006f9",
                               "@/DataSet/5b20451cf4c5e1f6fad006fb"]
                },
                "adobe/pqs/databases": ["baz", "bat", "foo", "bar"]
              }
        '400':
          description: Bad request
        '404':
          description: not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
parameters:
  schemaRef:
      name: id
      description: The schema in uri (https://ns.adobe.com/xdm/context/profile, https://ns.adobe.com/customer/imsOrg/extensionNS/objectName) or meta:altId (_xdm.context.profile, _customer.extensionNS.objectName) or original xdm id format (context/profile, _customer/extensionNS/objectName).
      required: false
      in: query
      type: string
  properties:
    name: properties
    description: >-
      A comma separated whitelist of top-level object properties to be returned in the response. Used
      to cut down the number of properties and amount of data returned in the response bodies.
    in: query
    type: string
    required: false
  orderBy:
    name: orderBy
    description: >-
      Sort parameter and direction for sorting the response. Ex.
      orderBy=asc:created,updated. This was previously called sort.
    in: query
    type: string
    required: false
  limit:
    name: limit
    description: Limit response to a specified positive number of objects. Ex. limit=10
    in: query
    type: integer
    required: false
  start:
    name: start
    description: >-
      Returns results from a specific offset of objects. This was previously
      called offset. Ex. start=3.
    in: query
    type: integer
    required: false
  property:
    name: property
    description: Regex used to filter objects in the response. Ex. property=name~^test.
    in: query
    type: string
    required: false
  tags:
    name: tags
    description: 'Filter response by the specified tags. Ex. tags=ns:tag,ns2:tag2'
    in: query
    type: string
    required: false
  description:
    name: description
    description: Filter by user-provided description of the account.
    required: false
    type: string
    in: query
  version:
    name: version
    description: Filter by Semantic version of the account. Updated when the object is modified.
    required: false
    type: string
    in: query
  created:
    name: created
    description: Filter by the Unix timestamp (in milliseconds) when this object was persisted.
    required: false
    type: integer
    format: int64
    in: query
  createdAfter:
    name: createdAfter
    description: Exclusively filter records created after this timestamp.
    required: false
    in: query
    type: integer
    format: int64
  createdBefore:
    name: createdBefore
    description: Exclusively filter records created before this timestamp.
    required: false
    in: query
    type: integer
    format: int64
  updated:
    name: updated
    description: Filter by the Unix timestamp (in milliseconds) for the time of last modification.
    required: false
    type: integer
    format: int64
    in: query
  createdClient:
    name: createdClient
    description: Filter by the ID of the IMS client that created this object.
    required: false
    type: string
    in: query
  createdUser:
    name: createdUser
    description: Filter by the  ID of the user who created this object.
    required: false
    type: string
    in: query
  updatedUser:
    name: updatedUser
    description: Filter by the  ID of the user who changed this object.
    required: false
    type: string
    in: query
  authorization:
    name: Authorization
    description: 'The access token which can be copied from your Experience Platform integration, prefixed with "Bearer". For more information on how to obtain this value, visit the <a href="https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/authenticate_to_acp_tutorial/authenticate_to_acp_tutorial.md">authentication tutorial</a>.'
    required: true
    type: string
    in: header
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: 'The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the <a href="https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/authenticate_to_acp_tutorial/authenticate_to_acp_tutorial.md">authentication tutorial</a>.'
    required: true
    type: string
    in: header
  x-sandbox-id:
    name: x-sandbox-id
    description: 'The URN string ID of the Sandbox virtual environment to be accessed.'
    required: false
    type: string
    in: header
  x-api-key:
    name: x-api-key
    description: 'The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the <a href="https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/authenticate_to_acp_tutorial/authenticate_to_acp_tutorial.md">authentication tutorial</a>.'
    required: true
    type: string
    in: header
  json-header:
    name: Content-Type
    description: 'application/json'
    required: true
    type: string
    in: header
  x-user-token:
    name: x-user-token
    description: For calls which are proxied by catalog, the access token for the user on whose behalf this call is made.
    required: false
    type: string
    in: header
  accept-encoding:
    name: accept-encoding
    description: 'Used to signal the intent to consume compressed response bodies. Supported encodings: gzip.'
    required: false
    type: string
    in: header
  descriptorId:
    name: descriptorId
    description: Descriptor ID of the descriptor object
    required: true
    type: string
    in: path
  id:
    name: id
    description: Object ID
    required: true
    in: path
    type: string
  if-match:
    name: if-match
    description: >-
      Set to verify the valid versions of document to be modified by matching the
      updated date.
    in: header
    type: string
  if-none-match:
    name: if-none-match
    description: >-
      Set to verify the invalid versions of document to be modified by matching the
      updated date.
    in: header
    type: string
  namespace:
    name: namespace
    description: Filter by the base namespace ("model" or "core").
    required: true
    in: path
    type: string
  excludeExtension:
    name: excludeExtension
    description: Set to true to exclude extensions.
    in: query
    type: boolean
  extensionNS:
    name: extensionNS
    description: The extension namespace.
    required: true
    in: path
    type: string
  objectName:
    name: objectName
    description: Name of custom object.
    required: true
    in: path
    type: string
  xdmExtensionPayload:
    name: xdmExtensionPayload
    description: The payload JSON that goes in the body of an XDM Extension POST request.
    required: true
    in: body
    schema:
      $ref: '#/definitions/xdmExtensionRequest'
  descriptorPayload:
    name: descriptorPayload
    description: The descriptor payload JSON that goes in the body of the request.
    required: true
    in: body
    schema:
      $ref: '#/definitions/xdmDescriptor'
  subSchemaPayload:
    name: payload
    description: The payload JSON that goes in the body of the request.
    required: true
    in: body
    schema:
      $ref: '#/definitions/subSchema'
  expansion:
    name: expansion
    description: Set to 'xdm' to expand XDM schema.
    in: query
    type: string
  xdmVersion:
    name: xdmVersion
    description: The version of the base XDM schemas that are being requested.
    in: query
    type: string
    required: false
  descriptorType:
    name: descriptorType
    description: Type of the descriptor objects (relationship, schema, identity) being requested.
    in: query
    type: string
    required: false
  sourceSchema:
    name: sourceSchema
    description: sourceSchema defined in the descriptor objects that are being requested.
    in: query
    type: string
    required: false
  destSchema:
    name: destSchema
    description: destSchema defined in the descriptor objects that are being requested.
    in: query
    type: string
    required: false
  tagNamespace:
    name: tagNamespace
    description: Tag namespace or key as defined within a tag inside dataSet, batch or transform.
    in: path
    type: string
    required: true
  objectType:
    name: objectType
    description: objectType or the Catalog collection name in which tags should be searched.
    in: query
    type: string
    enum:
      - dataset
      - connection
      - batch
    required: true
definitions:
  accountRequest:
    type: object
    properties:
      connector:
        type: string
        description: The ID for the Connector this Account params was created from.
      description:
        type: string
        description: The user-provided description of the account.
      params:
        type: object
        description: >-
          Keyed list of parameters used in account. The validation for these
          parameters is done based on settings in accountParams.
        properties: {}
    required:
      - connector
  accountPatchRequest:
      type: object
      properties:
        connector:
          type: string
          description: The ID for the Connector this Account params was created from.
        description:
          type: string
          description: The user-provided description of the account.
        params:
          type: object
          description: >-
            Keyed list of parameters used in account. The validation for these
            parameters is done based on settings in accountParams.
          properties: {}
  accountResponse:
    type: object
    properties:
      connector:
        type: string
        description: The ID for the Connector this Account params was created from.
      description:
        type: string
        description: The user-provided description of the account.
      version:
        type: string
        description: >-
          The Semantic version of the account. Updated when the Account is
          modified.
        readOnly: true
      created:
        type: integer
        format: int64
        description: The Unix timestamp (in milliseconds) when this Account was persisted.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this Account.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who last updated this object.
        readOnly: true
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      params:
        type: object
        description: >-
          Keyed list of parameters used in account. The validation for these
          parameters is done based on settings in accountParams.
        properties: {}
  availableDates:
    description: >-
      Describes what date range of data is available in the Batch. Null if dates
      aren't relevant for data related to this Batch.
    properties:
      startDate:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in seconds) for the oldest data available in this
          Batch.
      endDate:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in seconds) for the most recent data available in
          this Batch.
  batchRequest:
    type: object
    properties:
      externalId:
        type: string
        description: An externally generated identifier for this batch.
        readOnly: true
      started:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when the Batch processing action
          was started.
      completed:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when the Batch processing action
          was completed. Completed - Started should yield the total processing
          time.
      replay:
        type: object
        description: Indicates that a batch was replayed or restated.
        properties:
          predecessors:
            type: array
            items:
              type: string
              description: One or more Batch Identifiers that this replay is replacing.
          reason:
            type: string
            description: >-
              An optional commentary for the requester to describe the purpose for the replay
              (e.g. deletion of privacy data, fix, compaction, etc..).
      status:
        type: string
        description: The current (mutable) status of this Batch.
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
          - aborted
          - abandoned
          - inactive
          - failed
          - loading
          - loaded
          - staged
          - active
          - staging
          - deleted
      recordCount:
        type: integer
        format: int64
        description: >-
          The total number of data records (rows/documents) processed in this
          Batch.
      failedRecordCount:
        type: integer
        format: int64
        description: The number of records that could not be processed in this Batch.
      errors:
        type: array
        description: ''
        items:
          $ref: '#/definitions/errors'
      size:
        type: integer
        format: int64
        description: Number of bytes processed in this Batch.
      availableDates:
        type: object
        description: >-
          Describes what date range of data is available in the Batch. Null if
          dates aren't relevant for data related to this Batch.
        properties:
          startDate:
            type: integer
            format: int64
            description: >-
              The Unix timestamp (in seconds) for the oldest data available in
              this Batch.
          endDate:
            type: integer
            format: int64
            description: >-
              The Unix timestamp (in seconds) for the most recent data available
              in this Batch.
      relatedObjects:
        type: array
        description: List of associated objects for this Batch, such as dataSets, connections, dataSetView, dataSetFiles etc.
        items:
          $ref: '#/definitions/relatedObjects'
      metrics:
        type: object
        description: >-
          Contains metrics related to this Batch.  Metric names are determined
          by the producer of the object since each Batch may want to record
          metrics that are relevant to the process
        additionalProperties: true
      tags:
        type: object
        description: >-
          Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that
          it understands.  Normally tags are not used for internal Catalog
          business logic
        additionalProperties:
          type: array
          items:
            type: string
      inputFormat:
        $ref: '#/definitions/inputFormat'
    required:
      - status
  batchPatchRequest:
    type: object
    properties:
      externalId:
        type: string
        description: An externally generated identifier for this batch.
        readOnly: true
      started:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when the Batch processing action
          was started.
      completed:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when the Batch processing action
          was completed. Completed - Started should yield the total processing
          time.
      replay:
        type: object
        description: Indicates that a batch was replayed or restated.
        properties:
          predecessors:
            type: array
            items:
              type: string
              description: One or more Batch Identifiers that this replay is replacing.
          reason:
            type: string
            description: >-
              An optional commentary for the requester to describe the purpose for the replay
              (e.g. deletion of privacy data, fix, compaction, etc..).
      status:
        type: string
        description: The current (mutable) status of this Batch.
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
          - aborted
          - abandoned
          - inactive
          - failed
          - loading
          - loaded
          - staged
          - active
          - staging
          - deleted
      recordCount:
        type: integer
        format: int64
        description: >-
          The total number of data records (rows/documents) processed in this
          Batch.
      failedRecordCount:
        type: integer
        format: int64
        description: The number of records that could not be processed in this Batch.
      errors:
        type: array
        description: ''
        items:
          $ref: '#/definitions/errors'
      size:
        type: integer
        format: int64
        description: Number of bytes processed in this Batch.
      availableDates:
        type: object
        description: >-
          Describes what date range of data is available in the Batch. Null if
          dates aren't relevant for data related to this Batch.
        properties:
          startDate:
            type: integer
            format: int64
            description: >-
              The Unix timestamp (in seconds) for the oldest data available in
              this Batch.
          endDate:
            type: integer
            format: int64
            description: >-
              The Unix timestamp (in seconds) for the most recent data available
              in this Batch.
      relatedObjects:
        type: array
        description: List of associated objects for this Batch, such as dataSets, connections, dataSetView, dataSetFiles etc.
        items:
          $ref: '#/definitions/relatedObjects'
      metrics:
        type: object
        description: >-
          Contains metrics related to this Batch.  Metric names are determined
          by the producer of the object since each Batch may want to record
          metrics that are relevant to the process
        additionalProperties: true
      tags:
        type: object
        description: >-
          Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that
          it understands.  Normally tags are not used for internal Catalog
          business logic
        additionalProperties:
          type: array
          items:
            type: string
      inputFormat:
        $ref: '#/definitions/inputFormat'
  inputFormat:
    type: object
    description: >-
      Metadata describing the INGEST format of the data being loaded (e.g. Parquet, CSV, JSON).
    properties:
      format:
        description: "The file format for data being submitted in the Batch."
        enum:
          - "csv"
          - "parquet"
          - "json"
      isMultiLineJson:
        description: "If the format is JSON and this is true then the JSON records are separated by a newline"
        type: boolean
      delimiter:
        description: "Character used to separate fields."
        type: string
      quote:
        description: "Character used to quote fields that contains spaces, tabs, and/or delimiter characters."
        type: string
      escape:
        description: "Character used to escape other meta-characters."
        type: string
      nullMarker:
        description: "Character/string used to indicate a null value. Any value matching this string will be set as nulls in Data Lake."
        type: string
      header:
        description: "True if input files are expected to have a header row."
        type: string
      charset:
        description: "The character encoding of the input files."
        enum:
          - "US-ASCII"
          - "UTF-8"
          - "ISO-8859-1"
  batchResponse:
    type: object
    properties:
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      created:
        type: integer
        format: int64
        description: The Unix timestamp (in milliseconds) when this Batch was persisted.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this Batch.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: The Unix timestamp (in milliseconds) of last modification.
        readOnly: true
      externalId:
        type: string
        description: An externally generated identifier for this batch.
        readOnly: true
      started:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when the Batch processing action
          was started.
      completed:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when the Batch processing action
          was completed. Completed - Started should yield the total processing
          time.
      replay:
        type: object
        description: Indicates that a batch was replayed or restated.
        properties:
          predecessors:
            type: array
            items:
              type: string
              description: One or more Batch Identifiers that this replay is replacing.
          predecessorsByExternalId:
            type: array
            items:
              type: string
              description: One or more external identifiers that this replay is replacing.
          predecessorListingType:
            type: string
            description: >-
              Whether the list of predecessors represent only immediate predecessors, or both
              immediate and indirect predecessors.
              The predecessor type is set to immediate by default.
            enum:
              - ALL
              - IMMEDIATE
          reason:
            type: string
            description: >-
              An optional commentary for the requester to describe the purpose for the replay
              (e.g. deletion of privacy data, fix, compaction, etc..).
      status:
        type: string
        description: The current (mutable) status of this Batch.
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
          - aborted
          - abandoned
          - inactive
          - failed
          - loading
          - loaded
          - staged
          - active
          - staging
          - deleted
      failedBatchLocation:
        type: string
        description: When a batch status is failed, the URI at which to retrieve the batch
      recordCount:
        type: integer
        format: int64
        description: >-
          The total number of data records (rows/documents) processed in this
          Batch.
      failedRecordCount:
        type: integer
        format: int64
        description: The number of records that could not be processed in this Batch.
      errors:
        type: array
        description: ''
        items:
          $ref: '#/definitions/errors'
      size:
        type: integer
        format: int64
        description: Number of bytes processed in this Batch.
      version:
        type: string
        description: The Semantic version of the Batch. Updated when the Batch is modified.
        readOnly: true
      availableDates:
        type: object
        description: >-
          Describes what date range of data is available in the Batch. Null if
          dates aren't relevant for data related to this Batch.
        properties:
          startDate:
            type: integer
            format: int64
            description: >-
              The Unix timestamp (in seconds) for the oldest data available in
              this Batch.
          endDate:
            type: integer
            format: int64
            description: >-
              The Unix timestamp (in seconds) for the most recent data available
              in this Batch.
      relatedObjects:
        type: array
        description: List of associated objects for this Batch, such as dataSets, connections, dataSetView, dataSetFiles etc.
        items:
          $ref: '#/definitions/relatedObjects'
      metrics:
        type: object
        description: >-
          Contains metrics related to this Batch.  Metric names are determined
          by the producer of the object since each Batch may want to record
          metrics that are relevant to the process
        additionalProperties: true
      tags:
        type: object
        description: >-
          Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that
          it understands.  Normally tags are not used for internal Catalog
          business logic
        additionalProperties:
          type: array
          items:
            type: string
      inputFormat:
        $ref: '#/definitions/inputFormat'
  connectionRequest:
    type: object
    properties:
      connector:
        type: string
        description: The ID for the Connector this Connection was created from.
      parentConnectionId:
        type: string
        description: >-
          Used in cases where global/shared data is managed by this connection.
          The parent connection performs the ETL/Mapping jobs, and this child
          connection represents a customer's membership and visibility into the
          parent.
      name:
        type: string
        description: The user-facing name of this Connection.
      description:
        type: string
        description: The user-provided description of the Connection.
      enabled:
        type: boolean
        description: >-
          Indicates the status of the Connection. Should be interpreted as
          disabled or suspended when set to false.
      attributes:
        type: object
        description: These are arbitrary key/value pairs related to this Connection.
        properties: {}
      dependencies:
        type: array
        items:
          type: string
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      contacts:
        type: array
        description: >-
          A list of persons to be contacts for this connection. One should be
          flagged as the primary contact/owner. This list is not meant to
          reflect roles or permissions, but a communication channel for
          operations related to this connection.
        items:
          $ref: '#/definitions/contacts'
      ingestStart:
        type: string
        description: Suggested date/time to start ingesting.
      frequency:
        type: object
        description: >-
          The frequency in which the data should be gathered into the platform.
          Specified either in CRONTAB format for recurring jobs or live=true for
          streaming data sources. The userEditable field is inherited from the
          parent connector.
        properties:
          userEditable:
            type: string
            description: >-
              If set to never, the user should not be allowed to adjust the
              frequency for connections created of this connection.
            enum:
              - minute
              - hour
              - day
              - month
              - week
              - never
          month:
            type: string
            description: Crontab month entry.
          day:
            type: string
            description: Crontab day entry.
          dayOfWeek:
            type: string
            description: Crontab weekday entry.
          hour:
            type: string
            description: Crontab hour entry.
          minute:
            type: string
            description: Crontab minute entry.
          timezone:
            type: string
            description: 'The timezone (ie: Europe/London).'
          live:
            type: boolean
            description: Set to true if the incoming data streams in live.
      accountId:
        type: string
        description: >-
          Foreign key to the account where the credentials and related fields of
          the connector and connection combination is stored.
      ingestParams:
        type: object
        description: >-
          Keyed list of parameters used in this connection to connect to a
          related ingest job. These params are typically persisted after the
          connection's ingest mechanism has been created, and they hold
          identifiers and configuration information related to tying this
          connection to objects in the foreign ingest systems.
        properties: {}
      statsCache:
        type: object
        description: >-
          Cached statistics for this connection. Not to be used for
          transactionally sensitive workflows, as this may be outdated or
          incorrect at times. These values cannot be submitted to Catalog.
        properties:
          earliestAvailableData:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the earliest start date of the oldest
              DataSetFile related to this connection.
          latestAvailableData:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the latest end date of the newest
              DataSetFile related to this connection.
          lastSuccess:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the updated date of the latest
              successful batch related to this connection.
          recentFailure:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the updated date of the last failed
              batch within the last week.
      tags:
        type: object
        description: >-
          Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that
          it understands.  Normally tags are not used for internal Catalog
          business logic
        additionalProperties:
          type: array
          items:
            type: string
      dule:
        type: object
        description: DULE labels.
        properties:
          contracts:
            type: array
            description: 'What Contractual Considerations, if any, apply to this data?'
            items:
              enum:
                - C1
                - C2
                - C3
                - C4
                - C5
                - C6
                - C7
                - C8
                - C9
                - None
              type: string
          contract:
            type: array
            description: 'What Contractual Considerations, if any, apply to this data?'
            items:
              enum:
                - C1
                - C2
                - C3
                - C4
                - C5
                - C6
                - C7
                - C8
                - C9
                - None
              type: string
          identifiability:
            type: array
            description: >-
              Should this data be treated as Indirectly Identifiable Data or
              Directly Identifiable Data? (What is the level of
              Identifiability?)
            items:
              enum:
                - I1
                - I2
              type: string
          identity:
            type: array
            description: >-
              Should this data be treated as Indirectly Identifiable Data or
              Directly Identifiable Data? (What is the level of
              Identifiability?)
            items:
              enum:
                - I1
                - I2
              type: string
          loginState:
            type: array
            description: What is the Log-in State?
            items:
              enum:
                - Identified
                - Incognito
                - Ambiguous
                - Not Provided
              type: string
          specialTypes:
            type: array
            description: >-
              Is this a special data type? (Relative to a regulated industry, or
              distinct regulatory rules, e.g. GDPR Special data, health data, or
              Financial data)
            items:
              enum:
                - S1
                - S2
              type: string
          sensitive:
            type: array
            description: >-
              Is this a special data type? (Relative to a regulated industry, or
              distinct regulatory rules, e.g. GDPR Special data, health data, or
              Financial data)
            items:
              enum:
                - S1
                - S2
              type: string
          other:
            type: string
            description: Other information that may govern the use of this data.
    required:
      - connector
      - name
      - enabled
  connectionPatchRequest:
      type: object
      properties:
        connector:
          type: string
          description: The ID for the Connector this Connection was created from.
        parentConnectionId:
          type: string
          description: >-
            Used in cases where global/shared data is managed by this connection.
            The parent connection performs the ETL/Mapping jobs, and this child
            connection represents a customer's membership and visibility into the
            parent.
        name:
          type: string
          description: The user-facing name of this Connection.
        description:
          type: string
          description: The user-provided description of the Connection.
        enabled:
          type: boolean
          description: >-
            Indicates the status of the Connection. Should be interpreted as
            disabled or suspended when set to false.
        attributes:
          type: object
          description: These are arbitrary key/value pairs related to this Connection.
          properties: {}
        dependencies:
          type: array
          items:
            type: string
        imsOrg:
          type: string
          description: The owning IMS organization identifier.
        contacts:
          type: array
          description: >-
            A list of persons to be contacts for this connection. One should be
            flagged as the primary contact/owner. This list is not meant to
            reflect roles or permissions, but a communication channel for
            operations related to this connection.
          items:
            $ref: '#/definitions/contacts'
        ingestStart:
          type: string
          description: Suggested date/time to start ingesting.
        frequency:
          type: object
          description: >-
            The frequency in which the data should be gathered into the platform.
            Specified either in CRONTAB format for recurring jobs or live=true for
            streaming data sources. The userEditable field is inherited from the
            parent connector.
          properties:
            userEditable:
              type: string
              description: >-
                If set to never, the user should not be allowed to adjust the
                frequency for connections created of this connection.
              enum:
                - minute
                - hour
                - day
                - month
                - week
                - never
            month:
              type: string
              description: Crontab month entry.
            day:
              type: string
              description: Crontab day entry.
            dayOfWeek:
              type: string
              description: Crontab weekday entry.
            hour:
              type: string
              description: Crontab hour entry.
            minute:
              type: string
              description: Crontab minute entry.
            timezone:
              type: string
              description: 'The timezone (ie: Europe/London).'
            live:
              type: boolean
              description: Set to true if the incoming data streams in live.
        accountId:
          type: string
          description: >-
            Foreign key to the account where the credentials and related fields of
            the connector and connection combination is stored.
        ingestParams:
          type: object
          description: >-
            Keyed list of parameters used in this connection to connect to a
            related ingest job. These params are typically persisted after the
            connection's ingest mechanism has been created, and they hold
            identifiers and configuration information related to tying this
            connection to objects in the foreign ingest systems.
          properties: {}
        statsCache:
          type: object
          description: >-
            Cached statistics for this connection. Not to be used for
            transactionally sensitive workflows, as this may be outdated or
            incorrect at times. These values cannot be submitted to Catalog.
          properties:
            earliestAvailableData:
              type: integer
              format: int64
              description: >-
                Unix timestamp indicating the earliest start date of the oldest
                DataSetFile related to this connection.
            latestAvailableData:
              type: integer
              format: int64
              description: >-
                Unix timestamp indicating the latest end date of the newest
                DataSetFile related to this connection.
            lastSuccess:
              type: integer
              format: int64
              description: >-
                Unix timestamp indicating the updated date of the latest
                successful batch related to this connection.
            recentFailure:
              type: integer
              format: int64
              description: >-
                Unix timestamp indicating the updated date of the last failed
                batch within the last week.
        tags:
          type: object
          description: >-
            Tags are values associated with a particular object,  these are
            generally used by external systems for marking an object in a way that
            it understands.  Normally tags are not used for internal Catalog
            business logic
          additionalProperties:
            type: array
            items:
              type: string
        dule:
          type: object
          description: DULE labels.
          properties:
            contracts:
              type: array
              description: 'What Contractual Considerations, if any, apply to this data?'
              items:
                enum:
                  - C1
                  - C2
                  - C3
                  - C4
                  - C5
                  - C6
                  - C7
                  - C8
                  - C9
                  - None
                type: string
            contract:
              type: array
              description: 'What Contractual Considerations, if any, apply to this data?'
              items:
                enum:
                  - C1
                  - C2
                  - C3
                  - C4
                  - C5
                  - C6
                  - C7
                  - C8
                  - C9
                  - None
                type: string
            identifiability:
              type: array
              description: >-
                Should this data be treated as Indirectly Identifiable Data or
                Directly Identifiable Data? (What is the level of
                Identifiability?)
              items:
                enum:
                  - I1
                  - I2
                type: string
            identity:
              type: array
              description: >-
                Should this data be treated as Indirectly Identifiable Data or
                Directly Identifiable Data? (What is the level of
                Identifiability?)
              items:
                enum:
                  - I1
                  - I2
                type: string
            loginState:
              type: array
              description: What is the Log-in State?
              items:
                enum:
                  - Identified
                  - Incognito
                  - Ambiguous
                  - Not Provided
                type: string
            specialTypes:
              type: array
              description: >-
                Is this a special data type? (Relative to a regulated industry, or
                distinct regulatory rules, e.g. GDPR Special data, health data, or
                Financial data)
              items:
                enum:
                  - S1
                  - S2
                type: string
            sensitive:
              type: array
              description: >-
                Is this a special data type? (Relative to a regulated industry, or
                distinct regulatory rules, e.g. GDPR Special data, health data, or
                Financial data)
              items:
                enum:
                  - S1
                  - S2
                type: string
            other:
              type: string
              description: Other information that may govern the use of this data.
  largeDocumentsResponse:
    type: object
    properties:
      created:
        type: string
        description: The Unix timestamp (in milliseconds) when the largeDocument was persisted.
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      ttl:
        type: string
        description: The time to live associated with this object.
      objectType:
        type: string
        description: The type of object.
      jsonString:
        type: string
        description: The large object persisted.
  connectionResponse:
    type: object
    properties:
      connector:
        type: string
        description: The ID for the Connector this Connection was created from.
      parentConnectionId:
        type: string
        description: >-
          Used in cases where global/shared data is managed by this connection.
          The parent connection performs the ETL/Mapping jobs, and this child
          connection represents a customer's membership and visibility into the
          parent.
      name:
        type: string
        description: The user-facing name of this Connection.
      description:
        type: string
        description: The user-provided description of the Connection.
      enabled:
        type: boolean
        description: >-
          Indicates the status of the Connection. Should be interpreted as
          disabled or suspended when set to false.
      version:
        type: string
        description: >-
          The Semantic version of the batch. Updated when the Connection is
          modified.
        readOnly: true
      created:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when this Connection was
          persisted.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this Connection.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      attributes:
        type: object
        description: These are arbitrary key/value pairs related to this Connection.
        properties: {}
      dependencies:
        type: array
        description: ''
        items:
          type: string
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      contacts:
        type: array
        description: >-
          A list of persons to be contacts for this connection. One should be
          flagged as the primary contact/owner. This list is not meant to
          reflect roles or permissions, but a communication channel for
          operations related to this connection.
        items:
          $ref: '#/definitions/contacts'
      ingestStart:
        type: string
        description: Suggested date/time to start ingesting.
      frequency:
        type: object
        description: >-
          The frequency in which the data should be gathered into the platform.
          Specified either in CRONTAB format for recurring jobs or live=true for
          streaming data sources. The userEditable field is inherited from the
          parent connector.
        properties:
          userEditable:
            type: string
            description: >-
              If set to never, the user should not be allowed to adjust the
              frequency for connections created of this connection.
            enum:
              - minute
              - hour
              - day
              - month
              - week
              - never
          month:
            type: string
            description: Crontab month entry.
          day:
            type: string
            description: Crontab day entry.
          dayOfWeek:
            type: string
            description: Crontab weekday entry.
          hour:
            type: string
            description: Crontab hour entry.
          minute:
            type: string
            description: Crontab minute entry.
          timezone:
            type: string
            description: 'The timezone (ie: Europe/London).'
          live:
            type: boolean
            description: Set to true if the incoming data streams in live.
      accountId:
        type: string
        description: >-
          Foreign key to the account where the credentials and related fields of
          the connector and connection combination is stored.
      ingestParams:
        type: object
        description: >-
          Keyed list of parameters used in this connection to connect to a
          related ingest job. These params are typically persisted after the
          connection's ingest mechanism has been created, and they hold
          identifiers and configuration information related to tying this
          connection to objects in the foreign ingest systems.
        properties: {}
      dataSets:
        type: string
        description: >-
          @/connections/connectionId/dataSets
      statsCache:
        type: object
        description: >-
          Cached statistics for this connection. Not to be used for
          transactionally sensitive workflows, as this may be outdated or
          incorrect at times. These values cannot be submitted to Catalog.
        properties:
          earliestAvailableData:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the earliest start date of the oldest
              DataSetFile related to this connection.
          latestAvailableData:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the latest end date of the newest
              DataSetFile related to this connection.
          lastSuccess:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the updated date of the latest
              successful batch related to this connection.
          recentFailure:
            type: integer
            format: int64
            description: >-
              Unix timestamp indicating the updated date of the last failed
              batch within the last week.
      tags:
        type: object
        description: >-
          Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that
          it understands.  Normally tags are not used for internal Catalog
          business logic
        additionalProperties:
          type: array
          items:
            type: string
      dule:
        type: object
        description: DULE labels.
        properties:
          contracts:
            type: array
            description: 'What Contractual Considerations, if any, apply to this data?'
            items:
              enum:
                - C1
                - C2
                - C3
                - C4
                - C5
                - C6
                - C7
                - C8
                - C9
                - None
              type: string
          contract:
            type: array
            description: 'What Contractual Considerations, if any, apply to this data?'
            items:
              enum:
                - C1
                - C2
                - C3
                - C4
                - C5
                - C6
                - C7
                - C8
                - C9
                - None
              type: string
          identifiability:
            type: array
            description: >-
              Should this data be treated as Indirectly Identifiable Data or
              Directly Identifiable Data? (What is the level of
              Identifiability?)
            items:
              enum:
                - I1
                - I2
              type: string
          identity:
            type: array
            description: >-
              Should this data be treated as Indirectly Identifiable Data or
              Directly Identifiable Data? (What is the level of
              Identifiability?)
            items:
              enum:
                - I1
                - I2
              type: string
          loginState:
            type: array
            description: What is the Log-in State?
            items:
              enum:
                - Identified
                - Incognito
                - Ambiguous
                - Not Provided
              type: string
          specialTypes:
            type: array
            description: >-
              Is this a special data type? (Relative to a regulated industry, or
              distinct regulatory rules, e.g. GDPR Special data, health data, or
              Financial data)
            items:
              enum:
                - S1
                - S2
              type: string
          sensitive:
            type: array
            description: >-
              Is this a special data type? (Relative to a regulated industry, or
              distinct regulatory rules, e.g. GDPR Special data, health data, or
              Financial data)
            items:
              enum:
                - S1
                - S2
              type: string
          other:
            type: string
            description: Other information that may govern the use of this data.
  connectorResponse:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the batch. Updated when the Connector is
          modified.
      type:
        type: string
        description: The ingest type for this Connector.
        enum:
          - batch
          - stream
      name:
        type: string
        description: Name of this Connector.
      category:
        type: string
        description: >-
          Connectors currently have 2 categories: 1) standard: we are connecting
          to a known source with known data (ie. other companies data stores) or
          2) custom: a generaic connector to FTP or S3 etc.
        enum:
          - standard
          - custom
      description:
        type: string
        description: >-
          Introductory text describing this connector, it's primary
          functionality, relevant data sets, etc.
      ingestStart:
        type: string
        description: Suggested date/time to start ingesting.
      frequency:
        type: object
        description: >-
          Suggested ingest frequency for Connections created from this
          Connector.
        properties:
          userEditable:
            type: string
            description: >-
              Signifies the granularity to which a user can configure the
              frequency settings. Settings representing the current granularity
              and smaller are allowed.
            enum:
              - minute
              - hour
              - day
              - month
              - week
              - never
          month:
            type: string
            description: Crontab month entry.
          day:
            type: string
            description: Crontab day entry.
          dayOfWeek:
            type: string
            description: Crontab weekday entry.
          hour:
            type: string
            description: Crontab hour entry.
          minute:
            type: string
            description: Crontab minute entry.
          timezone:
            type: string
            description: 'The timezone (ie: Europe/London).'
          live:
            type: boolean
            description: Set to true if the incoming data streams in live.
      uiCreationAllowed:
        type: boolean
        description: >-
          When set to false, this connector should not be shown by the UI
          Connector Library. Essentially, the UI is not to create connectors of
          this type, but should show status related to this connector elsewhere.
      maxConnections:
        type: integer
        description: >-
          The maximum number of connections a customer (IMS Org) can create of
          this type.
      documents:
        type: array
        description: >-
          URLs pointing to supporting documentation for using and gaining value
          from this connector.
        items:
          $ref: '#/definitions/documents'
      paramsSchema:
        type: object
        description: JSON Schema used to validation service params.
        properties: {}
  dataSetRequest:
    type: object
    properties:
      connectorId:
        type: string
        description: >-
          Foreign key to the Connector this DataSet originates from. Template
          DataSets are tied to Connectors and not Connections. This is an
          immutable attribute and once created, it cannot be updated through
          PUT or PATCH requests.
      connectionId:
        type: string
        description: >-
          Foreign key to the Connection this DataSet originates from. This is
          an immutable attribute and once created, it cannot be updated through
          PUT or PATCH requests.
      name:
        type: string
        description: 'A descriptive, human-readable name for this DataSet.'
      description:
        type: string
        description: A longer text description of the DataSet.
      contacts:
        type: array
        description: >-
          A list of persons to be contacts for this dataset. One should be
          flagged as the primary contact/owner. This list is not meant to
          reflect roles or permissions, but a communication channel for
          operations related to this dataset.
        items:
          $ref: '#/definitions/contacts'
      namespace:
        type: string
        description: >-
          One of the registered platform acronyms that identify the platform.
          This is an immutable attribute and once created, it cannot be updated
          through PUT or PATCH requests.
        enum:
          - AA
          - AAM
          - AEM
          - AC
          - AT
          - AMO
          - PT
          - AS
          - AMC
          - ACP
      state:
        type: string
        description: >-
          The state related to a dataset. Must be one of the enumerated values.
        enum:
          - DRAFT
          - ACTIVE
          - DEPRECATED
      tags:
        type: object
        description: >-
          Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that
          it understands.  Normally tags are not used for internal Catalog
          business logic
        additionalProperties:
          type: array
          items:
            type: string
      dataContributors:
        type: array
        description: Describes the processes that have contributed data to this dataset
        items:
          $ref: '#/definitions/contributors'
      statsCache:
        type: object
        description: >-
          Cached statistics for this data set. These values cannot be submitted
          to Catalog.
        properties:
          failedRowCount:
            type: integer
            format: int64
            description: Rows that failed processing.
          rowCount:
            type: integer
            format: int64
            description: Total number of rows processed in the data set.
          startDate:
            type: integer
            format: int64
            description: Unix timestamp indicating the start date of the data set.
          endDate:
            type: integer
            format: int64
            description: Unix timestamp indicating the end date of the data set.
      lastBatchId:
        type: string
        description: ID of the last batch that modified the data set (only modified by Siphon batch ingest).
      lastBatchStatus:
        type: string
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
          - aborted
          - abandoned
          - deleted
        description: status of the last batch that modified the data set (only modified by Siphon batch ingest).
      lastSuccessfulBatch:
        type: string
        description: The ID of the last successful batch that has modified this data set (only modified by Siphon batch ingest).
      lastFailedBatch:
        type: string
        description: The ID of the last failed batch that has modified this data set (only modified by Siphon batch ingest).
      aspect:
        type: string
        description: >-
          Aspect represents the particular perspective or target you're after
          when viewing a dataset. Sandbox views are a version of the dataset
          that's being used to iterate towards a final ETL job definition. The
          production aspect is then used (by default).
        enum:
          - production
          - sandbox
      observableSchema:
        type: object
        description: >-
          observableSchema stores a JSON Schema object that is a valid subset (including the null case) of the XDM model specified by `schema`.
      editableClientIds:
        type: array
        description: >-
          Whitelisted client ids that can modify the restricted fields of this dataset.
        items:
          type: string
      status:
        type: string
        description: >-
          Describes the current state of the view.  If a view is not enabled, it
          should not be used by any process even when it is specified as a
          dependency. Only one view of a given aspect should be enabled at any
          time. For example, no DataSet should have more than one enabled
          production or sandbox view.
        enum:
          - enabled
          - disabled
      requestStartDate:
        type: string
        description: 'The oldest date and the time, when the data was last ingested'
      editable:
        type: boolean
        description: >-
          Determines whether or not this DataSetView definition should be
          editable by the user.  Some documents are 'locked' and not available
          for edit.
      streamingIngestionEnabled:
        type: string
        description: >-
          Determines whether or not this dataset is enabled for streaming ingestion.  This is
          an immutable attribute and once created, it cannot be updated through PUT or PATCH requests.
        enum:
          - true
          - false
      dependencies:
        type: array
        description: >-
          An array of dependency objects. If a DataSetView is referenced in a
          transform, data about that linkage should be found in this array.
        items:
          $ref: '#/definitions/dependencies'
      fields:
        type: array
        description: >-
          Ordered array of fields describing the resulting schema (output) for
          this view.
        items:
          $ref: '#/definitions/field'
      basePath:
        type: string
        description: >-
          Fully qualified base path for all DataSetFiles associated with this
          view. For views cached in a database (HBase or Cassandra), supply a
          templatized DSN.
        readOnly: true
      fileDescription:
        type: object
        description: Metadata describing the DataSetFiles associated with this DataSetView.
        properties:
          persisted:
            type: boolean
            description: >-
              Determines whether or not we are persisting the view to disk.  If
              this is false then the other fields in this object are redundant,
              but may be used for identifying old data that was persisted
              previously.
          containerFormat:
            type: string
            description: >-
              The Container format for all dataSetFiles associated with this
              view.
            enum:
              - text
              - sequence
              - parquet
          format:
            type: string
            description: The file format for all dataSetFiles associated with this view.
            enum:
              - ''
              - csv
              - text
              - parquet
              - json
              - sequencefile
          delimiters:
            type: array
            description: Characters used to separate fields.
            items:
              type: string
              maxLength: 1
          quotes:
            type: array
            description: ''
            items:
              type: string
          escapes:
            type: array
            description: ''
            items:
              type: string
          nullMarkers:
            type: array
            description: ''
            items:
              type: string
          header:
            type: boolean
            description: ''
          charset:
            type: string
            description: The character encoding of the files.
            enum:
              - US-ASCII
              - UTF-8
              - ISO-8859-1
              - ''
      partitions:
        type: array
        description: ''
        items:
          type: string
      saveStrategy:
        type: string
        description: Denotes save strategy for this dataset.
        enum:
          - append
          - overwrite
          - delta
      schema:
        type: string
        description: This is the uri for the XDM model
      schemaMetadata:
        $ref: '#/definitions/schemaMetadata'
      schemaRef:
        $ref: '#/definitions/schemaRef'
      dule:
        type: object
        description: DULE labels.
        properties:
          contracts:
            type: array
            description: 'What Contractual Considerations, if any, apply to this data?'
            items:
              enum:
                - C1
                - C2
                - C3
                - C4
                - C5
                - C6
                - C7
                - C8
                - C9
                - None
              type: string
          contract:
            type: array
            description: 'What Contractual Considerations, if any, apply to this data?'
            items:
              enum:
                - C1
                - C2
                - C3
                - C4
                - C5
                - C6
                - C7
                - C8
                - C9
                - None
              type: string
          identifiability:
            type: array
            description: >-
              Should this data be treated as Indirectly Identifiable Data or
              Directly Identifiable Data? (What is the level of
              Identifiability?)
            items:
              enum:
                - I1
                - I2
              type: string
          identity:
            type: array
            description: >-
              Should this data be treated as Indirectly Identifiable Data or
              Directly Identifiable Data? (What is the level of
              Identifiability?)
            items:
              enum:
                - I1
                - I2
              type: string
          loginState:
            type: array
            description: What is the Log-in State?
            items:
              enum:
                - Identified
                - Incognito
                - Ambiguous
                - Not Provided
              type: string
          specialTypes:
            type: array
            description: >-
              Is this a special data type? (Relative to a regulated industry, or
              distinct regulatory rules, e.g. GDPR Special data, health data, or
              Financial data)
            items:
              enum:
                - S1
                - S2
              type: string
          sensitive:
            type: array
            description: >-
              Is this a special data type? (Relative to a regulated industry, or
              distinct regulatory rules, e.g. GDPR Special data, health data, or
              Financial data)
            items:
              enum:
                - S1
                - S2
              type: string
          persistence:
                  $ref: '#/definitions/persistenceRequest'
          other:
            type: string
            description: Other information that may govern the use of this data.
      dataSourceId:
        type: integer
        description: The Id of the datasource. It must be unique, along with it''s name.
  dataSetResponse:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the DataSet. Updated when the DataSet is
          modified.
        readOnly: true
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      connectorId:
        type: string
        description: >-
          Foreign key to the Connector this DataSet originates from. Template
          DataSets are tied to Connectors and not Connections.
      connectionId:
        type: string
        description: Foreign key to the Connection this DataSet originates from.
      name:
        type: string
        description: A descriptive, human-readable name for this DataSet.
      description:
        type: string
        description: A longer text description of the DataSet.
      contacts:
        type: array
        description: >-
          A list of persons to be contacts for this dataset. One should be
          flagged as the primary contact/owner. This list is not meant to
          reflect roles or permissions, but a communication channel for
          operations related to this dataset.
        items:
          $ref: '#/definitions/contacts'
      created:
        type: integer
        format: int64
        description: The Unix timestamp (in milliseconds) when this DataSet was persisted.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this Batch.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      editableClientIds:
            type: array
            description: Whitelisted client ids that can modify the restricted fields of this dataset..
            items:
              type: string
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      namespace:
        type: string
        description: One of the registered platform acronyms that identify the platform.
        enum:
          - AA
          - AAM
          - AEM
          - AC
          - AT
          - AMO
          - PT
          - AS
          - AMC
          - ACP
      state:
        type: string
        description: >-
          The state related to a dataset. Must be one of the enumerated values.
        enum:
          - DRAFT
          - ACTIVE
          - DEPRECATED
      viewId:
        type: string
        description: The ID for associated DataSet view.
      aspect:
        type: string
        description: >-
          Aspect represents the particular perspective or target you're after
          when viewing a dataset. Sandbox views are a version of the dataset
          that's being used to iterate towards a final ETL job definition. The
          production aspect is then used (by default).
        enum:
          - production
          - sandbox
      observableSchema:
        type: object
        description: >-
          observableSchema stores a JSON Schema object that is a valid subset (including the null case) of the XDM model specified by `schema`.
      status:
        type: string
        description: >-
          Describes the current state of the view.  If a view is not enabled, it
          should not be used by any process even when it is specified as a
          dependency. Only one view of a given aspect should be enabled at any
          time. For example, no DataSet should have more than one enabled
          production or sandbox view.
        enum:
          - enabled
          - disabled
      requestStartDate:
        type: string
        description: 'The oldest date and the time, when the data was last ingested'
      editable:
        type: boolean
        description: >-
          Determines whether or not this DataSetView definition should be
          editable by the user.  Some documents are 'locked' and not available
          for edit.
      dependencies:
        type: array
        description: >-
          An array of dependency objects. If a DataSetView is referenced in a
          transform, data about that linkage should be found in this array.
        items:
          $ref: '#/definitions/dependencies'
      fields:
        type: array
        description: >-
          Ordered array of fields describing the resulting schema (output) for
          this view.
        items:
          $ref: '#/definitions/field'
      basePath:
        type: string
        description: >-
          Fully qualified base path for all DataSetFiles associated with this
          view. For views cached in a database (HBase or Cassandra), supply a
          templatized DSN.
        readOnly: true
      fileDescription:
        type: object
        description: Metadata describing the DataSetFiles associated with this DataSetView.
        properties:
          persisted:
            type: boolean
            description: >-
              Determines whether or not we are persisting the view to disk.  If
              this is false then the other fields in this object are redundant,
              but may be used for identifying old data that was persisted
              previously.
          containerFormat:
            type: string
            description: >-
              The Container format for all dataSetFiles associated with this
              view.
            enum:
              - text
              - sequence
              - parquet
          format:
            type: string
            description: The file format for all dataSetFiles associated with this view.
            enum:
              - ''
              - csv
              - text
              - parquet
              - json
              - sequencefile
          delimiters:
            type: array
            description: Characters used to separate fields.
            items:
              type: string
              maxLength: 1
          quotes:
            type: array
            description: ''
            items:
              type: string
          escapes:
            type: array
            description: ''
            items:
              type: string
          nullMarkers:
            type: array
            description: ''
            items:
              type: string
          header:
            type: boolean
            description: ''
          charset:
            type: string
            description: The character encoding of the files.
            enum:
              - US-ASCII
              - UTF-8
              - ISO-8859-1
              - ''
      partitions:
        type: array
        description: ''
        items:
          type: string
      saveStrategy:
        type: string
        description: Denotes save strategy for this dataset.
        enum:
          - append
          - overwrite
          - delta
      createdXdmSchemaVersion:
        type: string
        description: The XDM version used when the dataSet was created using schemaRef.
      schema:
        type: string
        description: This is the uri for the XDM model
      schemaMetadata:
        $ref: '#/definitions/schemaMetadata'
      schemaRef:
        $ref: '#/definitions/schemaRef'
      files:
        type: string
        description: >-
          Associated files for given dataset in following string format
          dataSets/{dataSetId}/views/{dataSetViewId}/files
          By using query param 'expansion=files', this object can be requested
          as part of response.
      tags:
        type: object
        description: >-
          Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that
          it understands.  Normally tags are not used for internal Catalog
          business logic
        additionalProperties:
          type: array
          items:
            type: string
      dataContributors:
        type: array
        description: Describes the processes that have contributed data to this dataset
        items:
          $ref: '#/definitions/contributors'
      statsCache:
        type: object
        description: >-
          Cached statistics for this data set. These values cannot be submitted
          to Catalog.
        properties:
          failedRowCount:
            type: integer
            format: int64
            description: Rows that failed processing.
          rowCount:
            type: integer
            format: int64
            description: Total number of rows processed in the data set.
          startDate:
            type: integer
            format: int64
            description: Unix timestamp indicating the start date of the data set.
          endDate:
            type: integer
            format: int64
            description: Unix timestamp indicating the end date of the data set.
      lastBatchId:
        type: string
        description: ID of the last batch that modified the data set (only modified by Siphon batch ingest).
      lastBatchStatus:
        type: string
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
          - aborted
          - abandoned
          - deleted
        description: status of the last batch that modified the data set (only modified by Siphon batch ingest).
      lastSuccessfulBatch:
        type: string
        description: The ID of the last successful batch that has modified this data set (only modified by Siphon batch ingest).
      lastFailedBatch:
        type: string
        description: The ID of the last failed batch that has modified this data set (only modified by Siphon batch ingest).
      dule:
        type: object
        description: DULE labels.
        properties:
          contracts:
            type: array
            description: 'What Contractual Considerations, if any, apply to this data?'
            items:
              enum:
                - C1
                - C2
                - C3
                - C4
                - C5
                - C6
                - C7
                - C8
                - C9
                - None
              type: string
          contract:
            type: array
            description: 'What Contractual Considerations, if any, apply to this data?'
            items:
              enum:
                - C1
                - C2
                - C3
                - C4
                - C5
                - C6
                - C7
                - C8
                - C9
                - None
              type: string
          identifiability:
            type: array
            description: >-
              Should this data be treated as Indirectly Identifiable Data or
              Directly Identifiable Data? (What is the level of
              Identifiability?)
            items:
              enum:
                - I1
                - I2
              type: string
          identity:
            type: array
            description: >-
              Should this data be treated as Indirectly Identifiable Data or
              Directly Identifiable Data? (What is the level of
              Identifiability?)
            items:
              enum:
                - I1
                - I2
              type: string
          loginState:
            type: array
            description: What is the Log-in State?
            items:
              enum:
                - Identified
                - Incognito
                - Ambiguous
                - Not Provided
              type: string
          specialTypes:
            type: array
            description: >-
              Is this a special data type? (Relative to a regulated industry, or
              distinct regulatory rules, e.g. GDPR Special data, health data, or
              Financial data)
            items:
              enum:
                - S1
                - S2
              type: string
          sensitive:
            type: array
            description: >-
              Is this a special data type? (Relative to a regulated industry, or
              distinct regulatory rules, e.g. GDPR Special data, health data, or
              Financial data)
            items:
              enum:
                - S1
                - S2
              type: string
          other:
            type: string
            description: Other information that may govern the use of this data.
      dataSourceId:
        type: integer
        description: 'The Id of the datasource. It must be unique, along with it''s name.'
      persistence:
        $ref: '#/definitions/persistenceResponse'
  dataSetViewRequest:
    type: object
    properties:
      dataSetId:
        type: string
        description: >-
          Foreign key to the owning DataSet. This attribute is immutable and
          cannot be updated using PUT or PATCH requests.
      aspect:
        type: string
        description: >-
          Aspect represents the particular perspective or target you're after
          when viewing a dataset. Sandbox views are a version of the dataset
          that's being used to iterate towards a final ETL job definition. The
          production aspect is then used (by default). This attribute is
          immutable and cannot be updated using PUT or PATCH requests.
        enum:
          - production
          - sandbox
      observableSchema:
        type: object
        description: >-
          observableSchema stores a JSON Schema object that is a valid subset (including the null case) of the XDM model specified by `schema`.
      schemaMetadata:
        $ref: '#/definitions/schemaMetadata'
      status:
        type: string
        description: >-
          Describes the current state of the view.  If a view is not enabled, it
          should not be used by any process even when it is specified as a
          dependency. Only one view of a given aspect should be enabled at any
          time. For example, no DataSet should have more than one enabled
          production or sandbox view.
        enum:
          - enabled
          - disabled
      requestStartDate:
        type: string
        description: 'The oldest date and the time, when the data was last ingested'
      editable:
        type: boolean
        description: >-
          Determines whether or not this DataSetView definition should be
          editable by the user.  Some documents are 'locked' and not available
          for edit.
      dependencies:
        type: array
        description: >-
          An array of dependency objects. If a DataSetView is referenced in a
          transform, data about that linkage should be found in this array.
        items:
          $ref: '#/definitions/dependencies'
      sdsVersion:
        type: string
        description: >-
          The semantic version of the SDS this view (and it's transforms) are
          compatible with.
      fields:
        type: array
        description: >-
          Ordered array of fields describing the resulting schema (output) for
          this view. This attribute is immutable and cannot be updated using
          PUT or PATCH requests.
        items:
          $ref: '#/definitions/field'
      storageType:
        type: string
        description: >-
          Specifies the type of storage that applies to basePath. It is required
          only when basePath is not empty.
        enum:
          - s3
          - hdfs
          - azure-blob
      basePath:
        type: string
        description: >-
          Fully qualified base path for all DataSetFiles associated with this
          view. For views cached in a database (HBase or Cassandra), supply a
          templatized DSN.
        readOnly: true
      isCached:
        type: boolean
        description: >-
          Some DataSetViews are pre-cached in a high-speed lookup table for
          faster access, this flag indicates if that has been done.
      files:
        type: string
        description: >-
          Link to associated files in following string format
          /dataSets/{dataSetId}/views/{dataSetViewId}/files
      fileDescription:
        type: object
        description: >-
          Metadata describing the DataSetFiles associated with this DataSetView.
          This attribute is immutable and cannot be updated using PUT or PATCH requests.
        properties:
          persisted:
            type: boolean
            description: >-
              Determines whether or not we are persisting the view to disk.  If
              this is false then the other fields in this object are redundant,
              but may be used for identifying old data that was persisted
              previously.
          containerFormat:
            type: string
            description: >-
              The Container format for all dataSetFiles associated with this
              view.
            enum:
              - text
              - sequence
              - parquet
          format:
            type: string
            description: The file format for all dataSetFiles associated with this view.
            enum:
              - ''
              - csv
              - text
              - parquet
              - json
              - sequencefile
          delimiters:
            type: array
            description: Characters used to separate fields.
            items:
              type: string
              maxLength: 1
          quotes:
            type: array
            description: ''
            items:
              type: string
          escapes:
            type: array
            description: ''
            items:
              type: string
          nullMarkers:
            type: array
            description: ''
            items:
              type: string
          header:
            type: boolean
            description: ''
          charset:
            type: string
            description: The character encoding of the files.
            enum:
              - US-ASCII
              - UTF-8
              - ISO-8859-1
              - ''
      partitions:
        type: array
        description: ''
        items:
          type: string
      saveStrategy:
        type: string
        description: >-
          Denotes save strategy for this dataset. This attribute is immutable
          and cannot be updated using PUT or PATCH requests.
        enum:
          - append
          - overwrite
          - delta
      schema:
        type: string
        description: >-
          This is the uri for the XDM model. This attribute is immutable
          and cannot be updated using PUT or PATCH requests.
      schemaRef:
        $ref: '#/definitions/schemaRef'
      persistence:
        $ref: '#/definitions/persistenceRequest'
    required:
      - dataSetId
      - aspect
      - status
  dataSetViewPatchRequest:
    type: object
    properties:
      dataSetId:
        type: string
        description: >-
          Foreign key to the owning DataSet. This attribute is immutable and
          cannot be updated using PUT or PATCH requests.
      aspect:
        type: string
        description: >-
          Aspect represents the particular perspective or target you're after
          when viewing a dataset. Sandbox views are a version of the dataset
          that's being used to iterate towards a final ETL job definition. The
          production aspect is then used (by default). This attribute is
          immutable and cannot be updated using PUT or PATCH requests.
        enum:
          - production
          - sandbox
      observableSchema:
        type: object
        description: >-
          observableSchema stores a JSON Schema object that is a valid subset (including the null case) of the XDM model specified by `schema`.
      schemaMetadata:
        $ref: '#/definitions/schemaMetadata'
      status:
        type: string
        description: >-
          Describes the current state of the view.  If a view is not enabled, it
          should not be used by any process even when it is specified as a
          dependency. Only one view of a given aspect should be enabled at any
          time. For example, no DataSet should have more than one enabled
          production or sandbox view.
        enum:
          - enabled
          - disabled
      requestStartDate:
        type: string
        description: 'The oldest date and the time, when the data was last ingested'
      editable:
        type: boolean
        description: >-
          Determines whether or not this DataSetView definition should be
          editable by the user.  Some documents are 'locked' and not available
          for edit.
      dependencies:
        type: array
        description: >-
          An array of dependency objects. If a DataSetView is referenced in a
          transform, data about that linkage should be found in this array.
        items:
          $ref: '#/definitions/dependencies'
      sdsVersion:
        type: string
        description: >-
          The semantic version of the SDS this view (and it's transforms) are
          compatible with.
      fields:
        type: array
        description: >-
          Ordered array of fields describing the resulting schema (output) for
          this view. This attribute is immutable and cannot be updated using
          PUT or PATCH requests.
        items:
          $ref: '#/definitions/field'
      storageType:
        type: string
        description: >-
          Specifies the type of storage that applies to basePath. It is required
          only when basePath is not empty.
        enum:
          - s3
          - hdfs
          - azure-blob
      basePath:
        type: string
        description: >-
          Fully qualified base path for all DataSetFiles associated with this
          view. For views cached in a database (HBase or Cassandra), supply a
          templatized DSN.
        readOnly: true
      isCached:
        type: boolean
        description: >-
          Some DataSetViews are pre-cached in a high-speed lookup table for
          faster access, this flag indicates if that has been done.
      files:
        type: string
        description: >-
          Link to associated files in following string format
          /dataSets/{dataSetId}/views/{dataSetViewId}/files
      fileDescription:
        type: object
        description: >-
          Metadata describing the DataSetFiles associated with this DataSetView.
          This attribute is immutable and cannot be updated using PUT or PATCH requests.
        properties:
          persisted:
            type: boolean
            description: >-
              Determines whether or not we are persisting the view to disk.  If
              this is false then the other fields in this object are redundant,
              but may be used for identifying old data that was persisted
              previously.
          containerFormat:
            type: string
            description: >-
              The Container format for all dataSetFiles associated with this
              view.
            enum:
              - text
              - sequence
              - parquet
          format:
            type: string
            description: The file format for all dataSetFiles associated with this view.
            enum:
              - ''
              - csv
              - text
              - parquet
              - json
              - sequencefile
          delimiters:
            type: array
            description: Characters used to separate fields.
            items:
              type: string
              maxLength: 1
          quotes:
            type: array
            description: ''
            items:
              type: string
          escapes:
            type: array
            description: ''
            items:
              type: string
          nullMarkers:
            type: array
            description: ''
            items:
              type: string
          header:
            type: boolean
            description: ''
          charset:
            type: string
            description: The character encoding of the files.
            enum:
              - US-ASCII
              - UTF-8
              - ISO-8859-1
              - ''
      partitions:
        type: array
        description: ''
        items:
          type: string
      saveStrategy:
        type: string
        description: >-
          Denotes save strategy for this dataset.This attribute is immutable
          and cannot be updated using PUT or PATCH requests.
        enum:
          - append
          - overwrite
          - delta
      schema:
        type: string
        description: >-
          This is the uri for the XDM model. This attribute is
          immutable and cannot be updated using PUT or PATCH requests.
      schemaRef:
        $ref: '#/definitions/schemaRef'
      persistence:
        $ref: '#/definitions/persistenceRequest'
  dataSetViewResponse:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the DataSetView. Updated when the DataSetView
          is modified.
        readOnly: true
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      dataSetId:
        type: string
        description: Foreign key to the owning DataSet.
      aspect:
        type: string
        description: >-
          Aspect represents the particular perspective or target you're after
          when viewing a dataset. Sandbox views are a version of the dataset
          that's being used to iterate towards a final ETL job definition. The
          production aspect is then used (by default).
        enum:
          - production
          - sandbox
      observableSchema:
        type: object
        description: >-
          observableSchema stores a JSON Schema object that is a valid subset (including the null case) of the XDM model specified by `schema`.
      status:
        type: string
        description: >-
          Describes the current state of the view.  If a view is not enabled, it
          should not be used by any process even when it is specified as a
          dependency. Only one view of a given aspect should be enabled at any
          time. For example, no DataSet should have more than one enabled
          production or sandbox view.
        enum:
          - enabled
          - disabled
      requestStartDate:
        type: string
        description: 'The oldest date and the time, when the data was last ingested'
      editable:
        type: boolean
        description: >-
          Determines whether or not this DataSetView definition should be
          editable by the user.  Some documents are 'locked' and not available
          for edit.
      dependencies:
        type: array
        description: >-
          An array of dependency objects. If a DataSetView is referenced in a
          transform, data about that linkage should be found in this array.
        items:
          $ref: '#/definitions/dependencies'
      sdsVersion:
        type: string
        description: >-
          The semantic version of the SDS this view (and it's transforms) are
          compatible with.
      fields:
        type: array
        description: >-
          Ordered array of fields describing the resulting schema (output) for
          this view.
        items:
          $ref: '#/definitions/field'
      storageType:
        type: string
        description: >-
          Specifies the type of storage that applies to basePath. It is required
          only when basePath is not empty.
        enum:
          - s3
          - hdfs
          - azure-blob
      basePath:
        type: string
        description: >-
          Fully qualified base path for all DataSetFiles associated with this
          view. For views cached in a database (HBase or Cassandra), supply a
          templatized DSN.
        readOnly: true
      persistence:
        $ref: '#/definitions/persistenceResponse'
      isCached:
        type: boolean
        description: >-
          Some DataSetViews are pre-cached in a high-speed lookup table for
          faster access, this flag indicates if that has been done.
      files:
        type: string
        description: >-
          Link to associated files in following string format
          /dataSets/{dataSetId}/views/{dataSetViewId}/files
      fileDescription:
        type: object
        description: Metadata describing the DataSetFiles associated with this DataSetView.
        properties:
          persisted:
            type: boolean
            description: >-
              Determines whether or not we are persisting the view to disk.  If
              this is false then the other fields in this object are redundant,
              but may be used for identifying old data that was persisted
              previously.
          containerFormat:
            type: string
            description: >-
              The Container format for all dataSetFiles associated with this
              view.
            enum:
              - text
              - sequence
              - parquet
          format:
            type: string
            description: The file format for all dataSetFiles associated with this view.
            enum:
              - ''
              - csv
              - text
              - parquet
              - json
              - sequencefile
          delimiters:
            type: array
            description: Characters used to separate fields.
            items:
              type: string
              maxLength: 1
          quotes:
            type: array
            description: ''
            items:
              type: string
          escapes:
            type: array
            description: ''
            items:
              type: string
          nullMarkers:
            type: array
            description: ''
            items:
              type: string
          header:
            type: boolean
            description: ''
          charset:
            type: string
            description: The character encoding of the files.
            enum:
              - US-ASCII
              - UTF-8
              - ISO-8859-1
              - ''
      partitions:
        type: array
        description: ''
        items:
          type: string
      saveStrategy:
        type: string
        description: Denotes save strategy for this dataset.
        enum:
          - append
          - overwrite
          - delta
      created:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when this DataSetView was
          persisted.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this DataSetView.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      createdXdmSchemaVersion:
        type: string
        description: The XDM version used when the dataSet was created using schemaRef.
      schema:
        type: string
        description: This is the uri for the XDM model
      schemaRef:
              $ref: '#/definitions/schemaRef'
  dataSetFileRequest:
    type: object
    properties:
      folderName:
        type: string
        description: >-
          The name of the folder as it resides in the basePath (provided from
          the DataSetView).
      batchId:
        type: string
        description: The ID of the Batch operation that created this DataSetFile.
      dataSetViewId:
        type: string
        description: The ID of the owning DataSetView.
      records:
        type: integer
        format: int64
        description: >-
          The number of records/rows/transactions contained in file represented
          by this DataSetFile.
      size:
        type: integer
        format: int64
        description: Size for the file in bytes.
      isValid:
        type: boolean
        description: >-
          True if the file can still be used. False if the file was part of a
          batch that was mistakenly uploaded or incorrect, and should no longer
          be considered.
      availableDates:
        $ref: '#/definitions/availableDates'
      sampleParent:
        type: array
        description: >-
          If this is a sample then this field contains the ID's of the
          DataSetFiles that it was generated from
        items:
          type: string
    required:
      - dataSetViewId
  dataSetFilePatchRequest:
      type: object
      properties:
        folderName:
          type: string
          description: >-
            The name of the folder as it resides in the basePath (provided from
            the DataSetView).
        batchId:
          type: string
          description: The ID of the Batch operation that created this DataSetFile.
        dataSetViewId:
          type: string
          description: The ID of the owning DataSetView.
        records:
          type: integer
          format: int64
          description: >-
            The number of records/rows/transactions contained in file represented
            by this DataSetFile.
        size:
          type: integer
          format: int64
          description: Size for the file in bytes.
        isValid:
          type: boolean
          description: >-
            True if the file can still be used. False if the file was part of a
            batch that was mistakenly uploaded or incorrect, and should no longer
            be considered.
        availableDates:
          $ref: '#/definitions/availableDates'
        sampleParent:
          type: array
          description: >-
            If this is a sample then this field contains the ID's of the
            DataSetFiles that it was generated from
          items:
            type: string
  dataSetFileResponse:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the DataSetFile. Updated when the DataSetFile
          is modified. Pattern: Pattern:
          ^[0-9]+\.[0-9]+\.[0-9]+((-[.0-9A-Za-z\-\+]+)|(\+[.0-9A-Za-z\-\+]+))*$
      folderName:
        type: string
        description: >-
          The name of the folder as it resides in the basePath (provided from
          the DataSetView).
      batchId:
        type: string
        description: The ID of the Batch operation that created this DataSetFile.
      created:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when this DataSetFile was
          persisted.
      updated:
        type: integer
        format: int64
        description: The Unix timestamp (in milliseconds) of last modification.
      imsOrg:
        type: string
        description: >-
          The owning IMS organization identifier. Pattern:
          ^[0-9A-Za-z]@[Aa]dobe[Oo]rg$
      dataSetViewId:
        type: string
        description: The ID of the owning DataSetView.
      createdClient:
        type: string
        description: The ID of the IMS client that created this Batch.
      createdUser:
        type: string
        description: The ID of the user who created this object.
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
      records:
        type: integer
        format: int64
        description: >-
          The number of records/rows/transactions contained in file represented
          by this DataSetFile.
      size:
        type: integer
        format: int64
        description: Size for the file in bytes.
      isValid:
        type: boolean
        description: >-
          True if the file can still be used. False if the file was part of a
          batch that was mistakenly uploaded or incorrect, and should no longer
          be considered.
      availableDates:
        $ref: '#/definitions/availableDates'
      sampleParent:
        type: array
        description: >-
          If this is a sample then this field contains the ID's of the
          DataSetFiles that it was generated from
        items:
          type: string
  healthcheck:
    type: object
    properties:
      status:
        type: boolean
  health-detailed:
    type: object
    properties:
      status:
        type: boolean
      dependencies:
        type: array
        description: List of catalog dependencies and their health
        items:
          $ref: '#/definitions/health-dependencies'
  health-dependencies:
    type: object
    properties:
      service:
        type: string
      status:
        type: boolean
      duration:
        type: integer
  serviceResources:
    type: object
    properties:
      connector:
        type: string
      dataSource:
        type: string
      dataSet:
        type: string
      transform:
        type: string
  resourceItem:
    type: object
    properties:
      id:
        type: string
      method:
        type: string
      headers:
        type: object
        description: 'Example: "headers": {"if-match": "1.0.6"}'
      resource:
        type: string
      body:
        type: object
  duleLabelResponse:
    type: object
    description: >-
      Structure of the DULE label response that includes all labels associated
      with a given dataset.
    properties:
      connection:
        type: object
        description: >-
          If the dataset has a parent connection, the connection labels are
          returned.
      dataset:
        type: object
        description: The DULE labels on the dataset itself.
      fields:
        type: array
        description: The DULE labels on the individual fields.
        items:
          type: object
      schemaFields:
        type: array
        description: The DULE labels from the schemaMetadata.
        items:
          type: object
  transformRequest:
    type: object
    properties:
      inputs:
        type: array
        description: Input array for dataSetIds
        items:
          type: object
          description: 'dataset:@/dataSet/dataSetId'
          properties:
            dataSet:
              type: string
      outputs:
        type: array
        description: Output array for dataSetIds
        items:
          type: object
          description: 'dataset:@/dataSet/dataSetId'
          properties:
            dataSet:
              type: string
      name:
        type: string
        description: The human-readable name or title for this Transform.
      body:
        type: string
        description: >-
          Lines of script that make up the transformation/mapping logic for this
          Transform.
      language:
        type: string
        description: The type of language this transform's body contains.
        enum:
          - application/vnd.apache.spark-sql
      codeUrl:
        type: string
        description: >-
          If the body of this transform is not used, it is expected that a URL
          pointing to the location of the code to be used for this transform is
          placed in this field.
      vehicleUrl:
        type: string
        description: >-
          The URL of the vehicle that will orchestrate or otherwise run the code
          in this transform.
      args:
        type: array
        description: >-
          Contains all arguments that are required to actually run Transform
          entity.
        items:
          type: string
          description: An argument which is required to run transform entity.
          pattern: '^[.a-zA-Z0-9\-_$={} ]+$'
  transformResponse:
    type: object
    properties:
      version:
        type: string
        description: >-
          The Semantic version of the Transform. Updated when the Transform is
          modified.
        readOnly: true
      imsOrg:
        type: string
        description: The owning IMS organization identifier.
      inputs:
        type: array
        description: Input array for dataSetIds
        items:
          type: object
          description: 'dataset:@/dataSet/dataSetId'
          properties:
            dataSet:
              type: string
      outputs:
        type: array
        description: Output array for dataSetIds
        items:
          type: object
          description: 'dataset:@/dataSet/dataSetId'
          properties:
            dataSet:
              type: string
      created:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) when this DataSetView was
          persisted.
        readOnly: true
      createdClient:
        type: string
        description: The ID of the IMS client that created this Batch.
        readOnly: true
      createdUser:
        type: string
        description: The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: The ID of the user who changed this object.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          The Unix timestamp (in milliseconds) for the time of last
          modification.
        readOnly: true
      name:
        type: string
        description: The human-readable name or title for this Transform.
      body:
        type: string
        description: >-
          Lines of script that make up the transformation/mapping logic for this
          Transform.
      language:
        type: string
        description: The type of language this transform's body contains.
        enum:
          - application/vnd.apache.spark-sql
      codeUrl:
        type: string
        description: >-
          If the body of this transform is not used, it is expected that a URL
          pointing to the location of the code to be used for this transform is
          placed in this field.
      vehicleUrl:
        type: string
        description: >-
          The URL of the vehicle that will orchestrate or otherwise run the code
          in this transform.
      args:
        type: array
        description: >-
          Contains all arguments that are required to actually run Transform
          entity.
        items:
          type: string
          description: An argument which is required to run transform entity.
          pattern: '^[.a-zA-Z0-9\-_$={} ]+$'
  subSchema:
        type: object
        properties:
          schema:
            type: object
            description: ''
            properties: {}
        required:
          - schema
  xdmExtensionRequest:
    type: object
    properties:
      title:
        type: string
        description: ''
      type:
        type: string
        description: ''
      description:
        type: string
        description: ''
      properties:
        description: A Map(String, JsonSchemaBaseType) representing the fields in this XDM extension.
        type: object
        properties: {}
    required:
      - type
      - description
      - properties
  xdmDescriptor:
    type: object
    properties:
      '@type':
        type: string
        enum:
          - xdm:descriptorOneToOne
          - xdm:descriptorOneToMany
          - xdm:descriptorManyToMany
          - xdm:descriptorIdentity
          - xdm:descriptorPrimaryKey
          - xdm:descriptorInstantiable
          - xdm:updatePolicy
        example: string
      'xdm:sourceSchema':
        type: string
        description: ''
      'xdm:sourceProperty':
        type: string
        description: ''
      'xdm:destSchema':
        type: string
        description: ''
      'xdm:destProperty':
        type: string
        description: ''
      'xdm:namespace':
        type: string
        description: ''
      'xdm:property':
        type: string
        description: ''
      'xdm:isPrimary':
        type: string
        description: ''
      'xdm:updatePolicy':
        type: string
        enum:
          - xdm:updateMerge
          - xdm:updateReplace
          - xdm:updateTimeSeries
        example: string
        description: ''
    required:
      - '@type'
      - 'xdm:sourceSchema'
  errors:
    type: object
    properties:
      code:
        type: string
        description: >-
          An enumerated code that details the type of error encountered. This
          value should be understandable by the reader and writer and eventually
          allow for localized error message (and solution) descriptions.
      rows:
        type: array
        description: >-
          Indicates which rows exhibit this error. Could be a single number, or
          a hyphen-delimited range.
        items:
          type: string
          description: Row or range of rows this error was encountered on.
      description:
        type: string
        description: >-
          A human-readable description of the error. This message may be
          transmitted to clients, but isn't meant for customer-facing UIS.
  relatedObjects:
    type: object
    properties:
      type:
        type: string
        description: The type of object processed in this Batch.
        enum:
          - batch
          - connection
          - connector
          - dataSet
          - dataSetFile
          - dataSetView
          - transform
      id:
        type: string
        description: ''
      tag:
        type: string
        description: >-
          The name for the relation the specified object had with this Batch
          operation. Examples: input, output, trigger, etc.
      status:
        type: string
        description: The current (mutable) status of this dataset.
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
      errors:
        type: array
        description: ''
        items:
          $ref: '#/definitions/errors'
      metrics:
        type: object
        description: Contains metrics related to this dataset.
        additionalProperties: true
  contributors:
    type: object
    properties:
      contributor:
        type: string
        description: The friendly name of the process contributing data to a dataset
      type:
        type: string
        description: >-
          The enumerated category the process belongs to (if you don't
          think  your process matches one of these types please contact
          the team)
        enum:
          - connector
          - bulk-ingest
          - stream
  contacts:
    type: object
    properties:
      email:
        type: string
        format: email
      displayName:
        type: string
        description: Display name for this contact.
      isPrimary:
        type: boolean
        description: >-
          Indicates if this contact is (one of the) 'owners' or primary contacts
          for this connection.
  documents:
    type: object
    properties:
      name:
        type: string
        description: The display name for this reference document.
      type:
        type: string
        description: The format for this document.
        enum:
          - pdf
          - word
          - html
      link:
        type: string
        description: The full URI to this document.
  dependencies:
    type: object
    properties:
      dataSetId:
        type: string
        description: The ID of the dataset this view is dependent upon.
      dataSetViewId:
        type: string
        description: The ID of the view this view is dependent upon.
      type:
        type: string
        description: >-
          The type dependency. Activity for views that generate rows needed to
          be incorporated, and Lookup for views that provide metadata-like
          lookups/additional columns.
        enum:
          - lookup
          - activity
          - snapshot-lookup
          - snapshot-activity
  field:
    allOf:
      - $ref: '#/definitions/dataType'
      - type: object
        properties:
          name:
            type: string
            description: Field name.
          title:
            type: string
            description: Field title.
          description:
            type: string
            description: Field description.
          definition:
            type: object
            description: >-
              Deprecated - this field is currently a hack to support
              non-csv data.  We need to natively support this type of data
          meta:
            type: object
            description: Metadata descriptions for each field.
            properties:
              isPrimary:
                type: boolean
                description: Marks this field as a join key into other datasets.
              delta:
                type: object
                description: >-
                  The presence of this attribute on a field indicates that
                  it is used in the origin system for retrieveing 'deltas'
                  of data
                properties:
                  format:
                    type: string
                    description: >-
                      If the origin field is a date field this describes
                      the format of that field in the style of Java
                      SimpleDateFormat
                  timezone:
                    type: string
                    description: >-
                      The timezone that the data uses in the origin
                      system, uses the format from IANA in the tz_database
          dule:
            type: object
            description: DULE labels.
            properties:
              contracts:
                description: >-
                  What Contractual Considerations, if any, apply to this
                  data?
                type: array
                items:
                  type: string
                  enum:
                    - C1
                    - C2
                    - C3
                    - C4
                    - C5
                    - C6
                    - C7
                    - C8
                    - C9
                    - None
              contract:
                description: >-
                  What Contractual Considerations, if any, apply to this
                  data?
                type: array
                items:
                  type: string
                  enum:
                    - C1
                    - C2
                    - C3
                    - C4
                    - C5
                    - C6
                    - C7
                    - C8
                    - C9
                    - None
              identifiability:
                description: >-
                  Should this data be treated as Indirectly Identifiable
                  Data or Directly Identifiable Data? (What is the level
                  of Identifiability?)
                type: array
                items:
                  type: string
                  enum:
                    - I1
                    - I2
              identity:
                description: >-
                  Should this data be treated as Indirectly Identifiable
                  Data or Directly Identifiable Data? (What is the level
                  of Identifiability?)
                type: array
                items:
                  type: string
                  enum:
                    - I1
                    - I2
              loginState:
                description: What is the Log-in State?
                type: array
                items:
                  type: string
                  enum:
                    - Identified
                    - Incognito
                    - Ambiguous
                    - Not Provided
              specialTypes:
                description: >-
                  Is this a special data type? (Relative to a regulated
                  industry, or distinct regulatory rules, e.g. GDPR
                  Special data, health data, or Financial data)
                type: array
                items:
                  type: string
                  enum:
                    - S1
                    - S2
              sensitive:
                description: >-
                  Is this a special data type? (Relative to a regulated
                  industry, or distinct regulatory rules, e.g. GDPR
                  Special data, health data, or Financial data)
                type: array
                items:
                  type: string
                  enum:
                    - S1
                    - S2
              other:
                description: Other information that may govern the use of this data.
                type: string
          gdpr:
            description: GDPR labels
            type: array
            items:
              type: object
              properties:
                namespace:
                  type: string
                  description: >-
                    The GDPR label for this column, indicating that this column may
                    contain information subject to GDPR rules
  schemaMetadata:
    type: object
    description: >-
      Metadata associated with observable schema.
    properties:
      identityNamespaces:
        description: Information about which portions of the schema and which identity namespaces they come from.
        type: array
        items:
          type: object
          properties:
            path:
              type: string
              description: >-
                A JSON path expression pointing to the field that the namespace is associated with.
            dataSourceId:
              type: string
              description: >-
                ID for the DataSource that models the identity space for this identifier.
      aliases:
        description: The alternate names for fields.
        type: array
        items:
          type: object
          properties:
            namespace:
              type: string
              description: The name for the set of aliases this applies to.
            sourcePath:
              type: string
              description: JSON Path for the field being aliased.
            targetPath:
              type: string
              description: JSON Path of the field's alias.
      dule:
        type: array
        description: DULE labels.
        items:
          type: object
          properties:
            path:
              type: string
              description: A JSON path expression pointing to the field that the dule labels are associated with.
            contracts:
              type: array
              description: 'What Contractual Considerations, if any, apply to this data?'
              items:
                enum:
                  - C1
                  - C2
                  - C3
                  - C4
                  - C5
                  - C6
                  - C7
                  - C8
                  - C9
                  - None
                type: string
            contract:
              type: array
              description: 'What Contractual Considerations, if any, apply to this data?'
              items:
                enum:
                  - C1
                  - C2
                  - C3
                  - C4
                  - C5
                  - C6
                  - C7
                  - C8
                  - C9
                  - None
                type: string
            identifiability:
              type: array
              description: >-
                Should this data be treated as Indirectly Identifiable Data or
                Directly Identifiable Data? (What is the level of
                Identifiability?)
              items:
                enum:
                  - I1
                  - I2
                type: string
            identity:
              type: array
              description: >-
                Should this data be treated as Indirectly Identifiable Data or
                Directly Identifiable Data? (What is the level of
                Identifiability?)
              items:
                enum:
                  - I1
                  - I2
                type: string
            loginState:
              type: array
              description: What is the Log-in State?
              items:
                enum:
                  - Identified
                  - Incognito
                  - Ambiguous
                  - Not Provided
                type: string
            specialTypes:
              type: array
              description: >-
                Is this a special data type? (Relative to a regulated industry, or
                distinct regulatory rules, e.g. GDPR Special data, health data, or
                Financial data)
              items:
                enum:
                  - S1
                  - S2
                type: string
            sensitive:
              type: array
              description: >-
                Is this a special data type? (Relative to a regulated industry, or
                distinct regulatory rules, e.g. GDPR Special data, health data, or
                Financial data)
              items:
                enum:
                  - S1
                  - S2
                type: string
            other:
              type: string
              description: Other information that may govern the use of this data.
      gdpr:
        description: GDPR labels
        type: array
        items:
          type: object
          properties:
            path:
              type: string
              description: A JSON path expression pointing to the field that contains the GDPR label.
            namespace:
              type: array
              description: >-
                The array of GDPR labels for this column, indicating that this column may
                contain information subject to GDPR rules
              items:
                type: string
                description: >-
                  GDPR labels for this column, indicating that this column may
                  contain information subject to GDPR rules
      primaryKey:
        type: array
        description: Marks this field as a join key into other datasets.
        items:
          type: object
          properties:
            path:
              type: string
              description: A JSON path expression pointing to the field that is the key.
            isPrimary:
              type: boolean
              description: Marks this field as a join key into other datasets.
      delta:
        type: array
        description: The presence of this attribute on a field indicates that it is used in the origin system for retrieveing 'deltas' of data.
        items:
          type: object
          properties:
            path:
              type: string
              description: A JSON path expression pointing to the field that the delta is associated with.
            format:
              type: string
              description: If the origin field is a date field this describes the format of that field in the style of Java SimpleDateFormat.
            timezone:
              type: string
              description: The timezone that the data uses in the origin system, uses the format from IANA in the tz_database.
      contentAttributes:
        type: array
        description: This attribute gives information the columns. For eg. if the field is hidden, temporarily empty etc.
        items:
          type: object
          properties:
            path:
              type: string
              description: A JSON path expression pointing to the field that the delta is associated with.
            descriptor:
              type: string
              description: This field stores the information about the specific column for eg.EMPTY_PERMANENT.
  credentials:
    type: object
    description: Credentials.
    properties:
      clientKey:
        type: string
        description: Credentials client key.
      clientId:
        type: string
        description: Credentials client ID.
      tenantId:
        type: string
        description: Credentials tenant ID.
      resourceGroupName:
        type: string
        description: Credentials resource group.
      subscriptionId:
        type: string
        description: Credentials subscription ID.
  dataSetCredentials:
    type: object
    properties:
      dataSetId:
        type: string
        description: The ID of the dataset these credentials are for.
      path:
        type: string
        description: Base storage path for this dataset.
      stagePath:
        type: string
        description: Staging base path for ingest.
      credentials:
        $ref: '#/definitions/credentials'
  dataType:
    type: object
    properties:
      type:
        type: string
        enum:
          - string
          - integer
          - long
          - double
          - boolean
          - date
          - byte
          - binary
          - float
          - number
          - array
          - object
          - map
      precision:
        description: "required for type 'number'"
        type: number
      scale:
        description: "required for type 'number'"
        type: number
      subType:
        $ref: '#/definitions/dataType'
      subFields:
        type: array
        items:
          $ref: '#/definitions/field'
      keyType:
        description: "required for type 'map'"
        type: string
        enum:
          - string
          - integer
          - long
          - double
          - boolean
          - date
          - byte
          - binary
          - float
      valueType:
        $ref: '#/definitions/dataType'
  schemaRef:
    type: object
    description: >-
      This is the full URL for XDM schema path. This field will be derived from schema field, if it is not present. This field will be used to annotate XDM schema version used in the dataSet or dataSetView.
    properties:
      id:
        type: string
        description: Id contains full URL path for XDM schema.
      contentType:
        type: string
        description: contentType rerpresents XDM schema version and type of schema.
  persistenceResponse:
    type: object
    description: >-
      Persistence object holds meta data of different persistence type supported by a dataset.
    properties:
      adls:
        type: object
        description: This object represents adls storage path for dataSets.
        readOnly: true
        properties:
          location:
            type: string
            description: >-
              Filter by the fully qualified base path for all DataSetFiles associated with this view.
              For views cached in a database (HBase or Cassandra), supply a templatized DSN.
              Its value is same as the basePath field.
          adlsType:
            description: ADLS generation type 1 or 2.
            readOnly: true
            enum:
              - GEN1
              - GEN2
          credentials:
            type: string
            description: >-
               This property represents the relative URI for persistence credentials of this dataset,
               for e.g. @/datasets/{id}/credentials.
      datastream:
        type: object
        description: This object represents stream persistence type for dataSets.
        properties:
          source:
            type: string
            description: This property represents the source of dataStream.
      
  persistenceRequest:
    type: object
    description: >-
      Persistence object holds meta data of different persistence type supported by a dataset.
    properties:
      datastream:
        type: object
        description: This object represents strean persistence type for dataSets
        properties:
          source:
            type: string
            description: This property represents the source of dataStream.
     

  tagsResponse:
    properties:
      objectType:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
          description: 'Array of relative path of collections with IDs, containing given namespace'
      additionalProperties:
        type: array
        items:
          type: string
        description: 'Array of aggregated values for input tagNamespace'