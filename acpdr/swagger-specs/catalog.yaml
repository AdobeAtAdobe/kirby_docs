swagger: '2.0'
info:
  version: 1.0.0
  title: Catalog Service API
  description: >-
    Catalog Service is the system of record for data location, lineage, schema definition, 
    and usage labeling for Adobe Experience Platform.


    Related documentation:
      * [Catalog Service Overview](https://www.adobe.io/apis/experienceplatform/home/services/allservices.html#!api-specification/markdown/narrative/technical_overview/catalog_architectural_overview/catalog_architectural_overview.md)
      * Tutorial - [Creating and Populating a Dataset and Ingesting Data From a File](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/creating_a_dataset_tutorial/creating_a_dataset_tutorial.md)


    Notes:
      * PLATFORM Gateway URL: https://platform.adobe.io/
      * Base path for this API: /data/foundation/catalog
      * All requests with a payload in the request body (i.e., POST, PUT, and PATCH calls) must include the header 'Content-Type: application/json'.
  termsOfService: 'https://www.adobe.com/legal/terms.html'
basePath: /data/foundation/catalog
host: platform.adobe.io
tags:
  - name: Accounts
  - name: Batches
  - name: Batched Requests
  - name: Connections
  - name: Connectors
  - name: Datasets
  - name: DataSetFiles
  - name: DataSetViews
  - name: Descriptors
    description: <strong>END OF LIFE:</strong> The Catalog /descriptors endpoint is no longer supported by Adobe Experience Platform. To continue working with schema descriptors, use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.
  - name: Large Documents
  - name: Tags
  - name: Transforms
  - name: XDM
    description: <strong>END OF LIFE:</strong> The Catalog /xdms endpoint and related calls are no longer supported by Adobe Experience Platform. To continue working with Experience Data Model (XDM) and schemas, use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.
  - name: Health
  
consumes:
  - application/json
produces:
  - application/json
paths:
  /accounts:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Accounts
      security:
        - Bearer: []
      operationId: get_accounts
      summary: Fetches a list of Accounts.
      produces:
        - application/json
      parameters:
        - name: connector
          description: The ID for the Connector this Account params was created from.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/description'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'

      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/accountResponse'
          examples:
            application/json:
              {
                  "597650bf4b358a650c6127bb": {
                      "connector": "salesforce",
                      "version": "1.0.0",
                      "created": 1500926143359,
                      "updated": 1500926143359,
                      "createdClient": "MCDPCatalogServiceStage",
                      "createdUser": "MCDPCatalogServiceStage@AdobeID",
                      "updatedUser": "MCDPCatalogServiceStage@AdobeID",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "params": {
                          "username": "foo",
                          "password": {
                              "value": "XXXXXXX",
                              "isSecret": true
                         } ,
                          "securityToken": {
                              "value": "XXXXXXX",
                              "isSecret": true
                          }
                      }
                  }
               }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Accounts
      security:
        - Bearer: []
      summary: Saves a new account.
      operationId: post_account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: account
          description: Account to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/accountRequest'
      responses:
        '201':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/accounts/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Accounts
      security:
        - Bearer: []
      operationId: get_account_by_id
      summary: Fetches Accounts by ID.
      produces:
        - application/json
      responses:
        '200':
          description: account response.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/accountResponse'
          examples:
              application/json:
                          {
                              "597650bf4b358a650c6127bb": {
                                  "connector": "salesforce",
                                  "version": "1.0.0",
                                  "created": 1500926143359,
                                  "updated": 1500926143359,
                                  "createdClient": "MCDPCatalogServiceStage",
                                  "createdUser": "MCDPCatalogServiceStage@AdobeID",
                                  "updatedUser": "MCDPCatalogServiceStage@AdobeID",
                                  "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                                  "params": {
                                      "username": "foo",
                                      "password": {
                                          "value": "XXXXXXX",
                                          "isSecret": true
                                     } ,
                                      "securityToken": {
                                          "value": "XXXXXXX",
                                          "isSecret": true
                                      }
                                  }
                              }
                           }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Accounts
      security:
        - Bearer: []
      summary: Saves a new Account with a specified ID.
      operationId: post_account_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: account
          description: Account to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/accountRequest'
      responses:
        '201':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - Accounts
      security:
        - Bearer: []
      summary: Updates an existing Account by ID.
      operationId: update_account_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - name: account
          description: Account field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/accountRequest'
      responses:
        '200':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Accounts
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing Account.
      operationId: patch_account_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - name: account
          description: Account field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/accountPatchRequest'
        - $ref: '#/parameters/if-match'
      responses:
        '200':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Accounts
      security:
        - Bearer: []
      summary: Deletes an Account by ID.
      operationId: delete_account_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/accounts/accountId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /batches:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - Batches
      security:
        - Bearer: []
      operationId: get_batch
      summary: Fetches a list of Batches.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - $ref: '#/parameters/version'
        - name: status
          description: Filter by the current (mutable) status of this Batch.
          required: false
          type: string
          in: query
        - name: recordCount
          description: >-
            Filter by the total number of data records (rows/documents) processed in this
            Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: failedRecordCount
          description: Filter by the number of records that could not be processed in this Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: Number of bytes processed in this Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: started
          description: >-
            Filter by the Unix timestamp (in milliseconds) when the Batch processing
            action was started.
          required: false
          type: integer
          format: int64
          in: query
        - name: completed
          description: >-
            Filter by the Unix timestamp (in milliseconds) when the Batch processing
            action was completed. Completed - Started should yield the total
            processing time.
          required: false
          type: integer
          format: int64
          in: query
        - name: startAfter
          description: >-
            Query only batches with availability dates that start after the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: startBefore
          description: >-
            Query only batches with availability dates that start before the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endAfter
          description: >-
            Query only batches with availability dates that end after the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endBefore
          description: >-
            Query only batches with availability dates that end before the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: batch
          description: 'Used to filter on the related object: &batch=batchId.'
          required: false
          type: string
          in: query
        - name: externalId
          description: 'Used to filter on the related object: &externalId=externalId.'
          required: false
          type: string
          in: query
        - name: connection
          description: 'Used to filter on the related object: &connection=connectionId.'
          required: false
          type: string
          in: query
        - name: connector
          description: 'Used to filter on the related object: &connector=connectorId.'
          required: false
          type: string
          in: query
        - name: dataSet
          description: 'Used to filter on the related object: &dataSet=dataSetId.'
          required: false
          type: string
          in: query
        - name: dataSetFile
          description: 'Used to filter on the related object: &dataSetFile=dataSetFileId.'
          required: false
          type: string
          in: query
        - name: dataSetView
          description: 'Used to filter on the related object: &dataSetView=dataSetViewId.'
          required: false
          type: string
          in: query
        - name: transform
          description: 'Used to filter on the related object: &transform=transformId.'
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: batch response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/batchResponse'
          examples:
            application/json:
              {
                  "5911f88ae2f4bf657c5a8cb5": {
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "created": 1494349962314,
                      "createdClient": "MCDPCatalogServiceStage",
                      "createdUser": "MCDPCatalogServiceStage@AdobeID",
                      "updatedUser": "MCDPCatalogServiceStage@AdobeID",
                      "updated": 1494349963467,
                      "externalId": "/adobe/bulkingest/5af9ee67e4045c1b4945c209",
                      "status": "success",
                      "errors": [
                          {
                              "code": "err-1494349963436"
                          }
                      ],
                      "version": "1.0.3",
                      "availableDates": {
                          "startDate": 1337,
                          "endDate": 4000
                      },
                      "relatedObjects": [
                          {
                              "type": "batch",
                              "id": "foo_batch"
                          },
                          {
                              "type": "connection",
                              "id": "foo_connection"
                          },
                          {
                              "type": "connector",
                              "id": "foo_connector"
                          },
                          {
                              "type": "dataSet",
                              "id": "foo_dataSet"
                          },
                          {
                              "type": "dataSetView",
                              "id": "foo_dataSetView"
                          },
                          {
                              "type": "dataSetFile",
                              "id": "foo_dataSetFile"
                          },
                          {
                              "type": "expressionBlock",
                              "id": "foo_expressionBlock"
                          },
                          {
                              "type": "service",
                              "id": "foo_service"
                          },
                          {
                              "type": "serviceDefinition",
                              "id": "foo_serviceDefinition"
                          }
                      ],
                      "metrics": {
                          "foo": 1337
                      },
                      "tags": {
                          "foo_bar": [
                              "stuff"
                          ],
                          "bar_foo": [
                              "woo",
                              "baz"
                          ],
                          "foo/bar/foo-bar": [
                              "weehaw",
                              "wee:haw"
                          ]
                      },
                      "inputFormat": {
                        "format": "parquet",
                        "delimiter": ".",
                        "quote": "`",
                        "escape": "\\",
                        "nullMarker": "",
                        "header": "true",
                        "charset": "UTF-8"
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Batches
      security:
        - Bearer: []
      summary: Saves a new Batch.
      operationId: post_batch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch
          description: Batch to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchRequest'
      responses:
        '201':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/batches/uniques/{field}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - name: field
        description: Field to get unique values for
        required: true
        type: string
        in: path
    get:
      tags:
        - Batches
      security:
        - Bearer: []
      operationId: get_unique_batch_values
      summary: Fetches the unique values stored in the requested field, standard filtering applies before gathering the uniques. Supported fields are [id]
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - $ref: '#/parameters/version'
        - name: status
          description: Filter by the current (mutable) status of this Batch.
          required: false
          type: string
          in: query
        - name: recordCount
          description: >-
            Filter by the total number of data records (rows/documents) processed in this
            Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: failedRecordCount
          description: Filter by the number of records that could not be processed in this Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: Number of bytes processed in this Batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: started
          description: >-
            Filter by the Unix timestamp (in milliseconds) when the Batch processing
            action was started.
          required: false
          type: integer
          format: int64
          in: query
        - name: completed
          description: >-
            Filter by the Unix timestamp (in milliseconds) when the Batch processing
            action was completed. Completed - Started should yield the total
            processing time.
          required: false
          type: integer
          format: int64
          in: query
        - name: startAfter
          description: >-
            Query only batches with availability dates that start after the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: startBefore
          description: >-
            Query only batches with availability dates that start before the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endAfter
          description: >-
            Query only batches with availability dates that end after the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endBefore
          description: >-
            Query only batches with availability dates that end before the
            specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: batch
          description: 'Used to filter on the related object: &batch=batchId.'
          required: false
          type: string
          in: query
        - name: externalId
          description: 'Used to filter on the related object: &externalId=externalId.'
          required: false
          type: string
          in: query
        - name: connection
          description: 'Used to filter on the related object: &connection=connectionId.'
          required: false
          type: string
          in: query
        - name: connector
          description: 'Used to filter on the related object: &connector=connectorId.'
          required: false
          type: string
          in: query
        - name: dataSet
          description: 'Used to filter on the related object: &dataSet=dataSetId.'
          required: false
          type: string
          in: query
        - name: dataSetFile
          description: 'Used to filter on the related object: &dataSetFile=dataSetFileId.'
          required: false
          type: string
          in: query
        - name: dataSetView
          description: 'Used to filter on the related object: &dataSetView=dataSetViewId.'
          required: false
          type: string
          in: query
        - name: transform
          description: 'Used to filter on the related object: &transform=transformId.'
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: batch response
          schema:
            type: array
            items:
              type: string
          examples:
            application/json:
              ["5911f88ae2f4bf657c5a8cb5", "5911f88ae2f4bf657c5a8cb4", "5911f88ae2f4bf657c5a8cb3"]
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/batches/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Batches
      security:
        - Bearer: []
      operationId: get_batch_by_id
      description: Fetches Batches by ID.
      produces:
        - application/json
      parameters:
        - name: aggregate
          description: >-
            If true, then return the aggregated status, metrics, and errors in
            the root level status, metrics, and errors (default is false).
          required: false
          type: boolean
          in: query
      responses:
        '200':
          description: Batch object for given batchId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/batchResponse'
          examples:
            application/json:
              {
                  "5911f88ae2f4bf657c5a8cb5": {
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "created": 1494349962314,
                      "createdClient": "MCDPCatalogServiceStage",
                      "createdUser": "MCDPCatalogServiceStage@AdobeID",
                      "updatedUser": "MCDPCatalogServiceStage@AdobeID",
                      "updated": 1494349963467,
                      "externalId": "/adobe/bulkingest/5af9ee67e4045c1b4945c209",
                      "status": "success",
                      "errors": [
                          {
                              "code": "err-1494349963436"
                          }
                      ],
                      "version": "1.0.3",
                      "availableDates": {
                          "startDate": 1337,
                          "endDate": 4000
                      },
                      "relatedObjects": [
                          {
                              "type": "batch",
                              "id": "foo_batch"
                          },
                          {
                              "type": "connection",
                              "id": "foo_connection"
                          },
                          {
                              "type": "connector",
                              "id": "foo_connector"
                          },
                          {
                              "type": "dataSet",
                              "id": "foo_dataSet"
                          },
                          {
                              "type": "dataSetView",
                              "id": "foo_dataSetView"
                          },
                          {
                              "type": "dataSetFile",
                              "id": "foo_dataSetFile"
                          },
                          {
                              "type": "expressionBlock",
                              "id": "foo_expressionBlock"
                          },
                          {
                              "type": "service",
                              "id": "foo_service"
                          },
                          {
                              "type": "serviceDefinition",
                              "id": "foo_serviceDefinition"
                          }
                      ],
                      "metrics": {
                          "foo": 1337
                      },
                      "tags": {
                          "foo_bar": [
                              "stuff"
                          ],
                          "bar_foo": [
                              "woo",
                              "baz"
                          ],
                          "foo/bar/foo-bar": [
                              "weehaw",
                              "wee:haw"
                          ]
                      },
                      "inputFormat": {
                        "format": "parquet",
                        "delimiter": ".",
                        "quote": "`",
                        "escape": "\\",
                        "nullMarker": "",
                        "header": "true",
                        "charset": "UTF-8"
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Batches
      security:
        - Bearer: []
      summary: Creates a new Batch with a specified Id.
      operationId: post_batch_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch
          description: Batch to be created.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchRequest'
      responses:
        '201':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - Batches
      security:
        - Bearer: []
      summary: Updates an existing Batch by ID.
      operationId: update_batch_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - name: batch
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchRequest'
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Batches
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing Batch.
      operationId: patch_batch_by_id
      consumes:
        - application/json
      parameters:
        - name: batch
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchPatchRequest'
        - $ref: '#/parameters/if-match'
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Batches
      security:
        - Bearer: []
      summary: Deletes a Batch by ID.
      operationId: delete_batch_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /health:
    get:
      tags:
        - Health
      summary: >-
        Catalog healthcheck report. Used by monitoring services and dashboards. On local
        the URI is /catalog/health.
      operationId: get_catalog_healthcheck
      produces:
        - application/json
      parameters:
        - name: api_key
          description: API key for request.
          required: true
          type: string
          in: query
      responses:
        '200':
          description: healthcheck response
          schema:
            $ref: '#/definitions/healthcheck'
        '503':
          description: service unavailable
        default:
          description: Unexpected error
  /health-detailed:
    get:
      tags:
        - Health
      security:
        - Bearer: []
      summary: >-
        Catalog healthcheck report with dependencies. Used by monitoring
        services and dashboards.On local the URI should be /catalog/health-detailed.
      operationId: get_catalog_detailed_healthcheck
      produces:
        - application/json
      parameters:
        - name: api_key
          description: API key for request.
          required: true
          type: string
          in: query
      responses:
        '200':
          description: healthcheck response
          schema:
            $ref: '#/definitions/health-detailed'
        '503':
          description: service unavailable
        default:
          description: Unexpected error
  '/largeDocuments/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Large Documents
      security:
        - Bearer: []
      operationId: get_largeDocument_by_id
      summary: Fetches Large document by ID.
      produces:
        - application/json
      responses:
        '200':
          description: Large Document response. The response includes the large document.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/largeDocumentsResponse'
          examples:
            application/json:
              {
                  "56a1c00e9f8e2c53284add34": {
                      "created": 1453441038288,
                      "ttl": 1453441038288,
                      "objectType": "dataSet",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "jsonString": {
                            name: 'datasets functional tests',
                            description: "Functional test for data sets",
                            connectorId: 's3-push',
                            tags: {
                              'foo': ['bar', 'foos', 'ball'],
                              'adobe/touchpoint/appliedTransformations': ['CLUSTERED:FOO']
                            },
                            status: 'enabled',
                            aspect: 'production',
                            requestStartDate: '1992-10-10 10:10:10',
                            basePath: fakeBasePath,
                            codeUrl: 'foo://bar/baz/fuzz.git' 
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Large Document not found.
        '500':
          description: Internal server error
        default:
          description: Unexpected error          
  /connections:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - Connections
      security:
        - Bearer: []
      summary: Fetches a list of Connections.
      operationId: get_connections
      produces:
        - application/json
      parameters:
        - name: connector
          description: Filter by the ID for the Connector this Connection was created from.
          required: false
          type: string
          in: query
        - name: parentConnectionId
          description: >-
            Used in cases where global/shared data is managed by this
            connection. The parent connection performs the ETL/Mapping jobs, and
            this child connection represents a customer's membership and
            visibility into the parent. This query param will filter all connectors
            by the parentConnectorId value.
          required: false
          type: string
          in: query
        - name: name
          description: Filter by the user-facing name of this Connection.
          required: false
          type: string
          in: query
        - name: accountId
          description: >-
            Filter by the foreign key to the account where the credentials and related fields
            of the connector and connection combination is stored.
          required: false
          type: string
          in: query
        - name: description
          description: Filter by the user-provided description of the Connection.
          required: false
          type: string
          in: query
        - name: enabled
          description: >-
            Indicates the status of the Connection. Should be interpreted as
            disabled or suspended when set to false.
          required: false
          type: boolean
          in: query
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: ingestStart
          description: Filter by the suggested date/time to start ingesting.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: Connections response. The response also includes a reference to linked datasets.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connectionResponse'
          examples:
            application/json:
              {
                  "56a1c00e9f8e2c53284add34": {
                      "connector": "dfa",
                      "name": "connection_1",
                      "enabled": true,
                      "version": "1.0.0",
                      "created": 1453441038288,
                      "updated": 1453441038288,
                      "createdClient": "MCDPCatalogServiceStage",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSets": "@/connections/56a1c00e9f8e2c53284add34/dataSets",
                      "statsCache": {
                          "earliestAvailableData": null,
                          "latestAvailableData": null,
                          "lastSuccess": null,
                          "recentFailure": null
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Connections
      security:
        - Bearer: []
      summary: Saves a new Connection.
      operationId: post_connection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: connection
          in: body
          description: Connection to be posted.
          required: true
          schema:
            $ref: '#/definitions/connectionRequest'
      responses:
        '201':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/connections/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Connections
      security:
        - Bearer: []
      operationId: get_connection_by_id
      summary: Fetches Connections by ID.
      produces:
        - application/json
      responses:
        '200':
          description: Connections response. The response also includes a reference to linked datasets.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connectionResponse'
          examples:
            application/json:
              {
                  "56a1c00e9f8e2c53284add34": {
                      "connector": "dfa",
                      "name": "connection_1",
                      "enabled": true,
                      "version": "1.0.0",
                      "created": 1453441038288,
                      "updated": 1453441038288,
                      "createdClient": "MCDPCatalogServiceStage",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSets": "@/connections/56a1c00e9f8e2c53284add34/dataSets",
                      "statsCache": {
                          "earliestAvailableData": null,
                          "latestAvailableData": null,
                          "lastSuccess": null,
                          "recentFailure": null
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Connections
      security:
        - Bearer: []
      summary: Saves a new Connection with a specified ID.
      operationId: post_connection_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: connection
          in: body
          description: Connection to be posted.
          required: true
          schema:
            $ref: '#/definitions/connectionRequest'
      responses:
        '201':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - Connections
      security:
        - Bearer: []
      summary: Updates an existing Connection by ID.
      operationId: update_connection_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - name: connection
          description: Connection field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/connectionRequest'
      responses:
        '200':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Connections
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing Connection.
      operationId: patch_connection_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - name: connection
          description: Connection field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/connectionPatchRequest'
      responses:
        '200':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Connections
      security:
        - Bearer: []
      summary: Deletes a Connection by ID.
      operationId: delete_connection_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/connections/connectionId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/connections/{id}/dataSets':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Connections
      security:
        - Bearer: []
      operationId: get_data_sets_by_connection_id
      summary: Fetches DataSets for the given Connection.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: Datasets associated with input connectionId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "contacts": [{
                      "email": "someEmailId@something.com",
                      "displayName": "dummyName",
                      "isPrimary": true
                      }],
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /connectors:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - Connectors
      security:
        - Bearer: []
      summary: Fetches the list of Connectors.
      operationId: get_connectors
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - name: type
          description: Filter by the ingest type for this Connector.
          required: false
          type: string
          in: query
        - name: name
          description: Filter by the name of this Connector.
          required: false
          type: string
          in: query
        - name: category
          description: >-
            Connectors currently have 2 categories: 1) standard: we are
            connecting to a known source with known data (ie. other companies
            data stores) or 2) custom: a generaic connector to FTP or S3 etc.
            This query param can be used to filter all connectors by their
            category.
          required: false
          type: string
          in: query
        - name: description
          description: >-
            Filter by the introductory text describing this connector, it's primary
            functionality, relevant data sets, etc.
          required: false
          type: string
          in: query
        - name: maxConnections
          description: >-
            Filter by the maximum number of connections a customer (IMS Org) can create of
            this type.
          required: false
          type: integer
          in: query
        - name: uiCreationAllowed
          description: >-
            When set to false, this connector should not be shown by the UI
            Connector Library. Essentially, the UI is not to create connectors
            of this type, but should show status related to this connector
            elsewhere.
          required: false
          type: boolean
          in: query
        - name: connectorOwnedDataSets
          description: >-
            Indicates whether or not the Connector 'owns' the datasets created 
            by this connector.  If so then there are certain things like GDPR that 
            are not controlled by Platform but instead are controlled by the 
            originating solution/vendor.  If not present or false then platform 'owns' 
            the dataset.
          required: false
          type: boolean
          in: query
        - name: internal
          description: >-
            Indicates if the connector is internal to Adobe, false indicates that 
            the connector is from a third-party
          required: false
          type: boolean
          in: query
        - name: ingestStart
          description: Filter by the suggested date/time to start ingesting.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of all connectors for given ims_org_id.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connectorResponse'
          examples:
            application/json:
              {
                  "dynamics-online": {
                      "name": "Microsoft Dynamics 365",
                      "category": "standard",
                      "version": "0.1",
                      "type": "batch",
                      "description": "",
                      "documents": [],
                      "ingestStart": "",
                      "frequency": {
                          "userEditable": "minute",
                          "minute": "30",
                          "hour": "2",
                          "month": "*",
                          "day": "*",
                          "dayOfWeek": "*",
                          "timezone": "",
                          "live": false
                      },
                      "uiCreationAllowed": true,
                      "paramsSchema": {
                          "properties": {
                              "organizationName": {
                                  "description": "The organization name of the Dynamics instance.",
                                  "type": "string"
                              },
                              "username": {
                                  "description": "The user's identification name associated with the credential.",
                                  "type": "string"
                              },
                              "password": {
                                  "description": "The Dynamics password.",
                                  "type": "string"
                              },
                              "organizationUri": {
                                  "description": "The Dynamics urganization URI",
                                  "type": "string"
                              },
                              "akvSecretPassword": {
                                  "description": "The Azure Key Vault secret identifier of the password for the user name associated with the credential.",
                                  "type": "string"
                              }
                          },
                          "required": [
                              "username",
                              "password",
                              "organizationUri"
                          ]
                      },
                      "stats": "@/connectors/dynamics-online/stats"
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/connectors/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Connectors
      security:
        - Bearer: []
      summary: Fetches Connectors by ID.
      operationId: get_connector_by_id
      produces:
        - application/json
      responses:
        '200':
          description: Connector object for input connectorId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/connectorResponse'
          examples:
            application/json:
              {
                  "dynamics-online": {
                      "name": "Microsoft Dynamics 365",
                      "category": "standard",
                      "version": "0.1",
                      "type": "batch",
                      "description": "",
                      "documents": [],
                      "ingestStart": "",
                      "frequency": {
                          "userEditable": "minute",
                          "minute": "30",
                          "hour": "2",
                          "month": "*",
                          "day": "*",
                          "dayOfWeek": "*",
                          "timezone": "",
                          "live": false
                      },
                      "uiCreationAllowed": true,
                      "paramsSchema": {
                          "properties": {
                              "organizationName": {
                                  "description": "The organization name of the Dynamics instance.",
                                  "type": "string"
                              },
                              "username": {
                                  "description": "The user's identification name associated with the credential.",
                                  "type": "string"
                              },
                              "password": {
                                  "description": "The Dynamics password.",
                                  "type": "string"
                              },
                              "organizationUri": {
                                  "description": "The Dynamics urganization URI",
                                  "type": "string"
                              },
                              "akvSecretPassword": {
                                  "description": "The Azure Key Vault secret identifier of the password for the user name associated with the credential.",
                                  "type": "string"
                              }
                          },
                          "required": [
                              "username",
                              "password",
                              "organizationUri"
                          ]
                      },
                      "stats": "@/connectors/dynamics-online/stats"
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/connectors/{id}/stats':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Connectors
      security:
        - Bearer: []
      summary: Fetches statistics for a given Connector.
      operationId: get_stats_by_connector_id
      produces:
        - application/json
      responses:
        '200':
          description: Returns connection count for given connector id.
          schema:
            type: object
            properties:
              connectorId:
                type: integer
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /dataSets:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Fetches a list of DataSets.
      operationId: get_data_sets
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: connectorId
          description: >-
            Filter by the foreign key to the Connector this DataSet originates from. Template
            DataSets are tied to Connectors and not Connections.
          required: false
          type: string
          in: query
        - name: connectionId
          description: Filter by the foreign key to the Connection this DataSet originates from.
          required: false
          type: string
          in: query
        - name: name
          description: 'Filter by the a descriptive, human-readable name for this DataSet.'
          required: false
          type: string
          in: query
        - name: description
          description: Filter by the longer text description of the DataSet.
          required: false
          type: string
          in: query
        - name: type
          description: >-
            DataSet types reflect where the data is in the MCDP lifecycle. Raw
            datasets are created by ingest, Master datasets are created by the
            Harvester, and Model datasets are configured by users. App datasets
            can then be created by MCDP services. This query param allows
            filtering of datasets by their type.
          required: false
          type: string
          in: query
        - name: state
          description: The state related to a dataset.
          required: false
          type: string
          in: query  
        - name: namespace
          description: One of the registered platform acronyms that identify the platform.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: All datasets for given imsOrg.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "editableClientIds":["acp_foundation_catalog"],
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "contacts": [{
                      "email": "someEmailId@something.com",
                      "displayName": "dummyName",
                      "isPrimary": true
                      }],
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Saves a new DataSet.
      operationId: post_data_set
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: requestDataSource
          description: >-
            Set to true if you want Catalog to create a dataSource on your
            behalf; otherwise, pass a dataSourceId in the body.
          type: string
          in: query
        - name: dataSet
          description: Data set to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetRequest'
      responses:
        '201':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Fetches DataSets by ID.
      operationId: get_data_set_by_id
      produces:
        - application/json
      responses:
        '200':
          description: DataSet object for input DataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "editableClientIds": ["acp_foundation_catalog"],
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "contacts": [{
                      "email": "someEmailId@something.com",
                      "displayName": "dummyName",
                      "isPrimary": true
                      }],
                      "state":"DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Updates an existing DataSet by ID.
      operationId: update_data_set_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - name: requestDataSource
          description: >-
            Set to true if you want Catalog to create a dataSource on your
            behalf; otherwise, pass a dataSourceId in the body.
          type: string
          in: query
        - name: dataSet
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetRequest'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing DataSet.
      operationId: patch_data_set_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - name: dataSet
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetRequest'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Deletes a DataSet by ID.
      operationId: delete_data_set_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/credentials':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-user-token'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Fetches credentials for the given dataSet.
      operationId: get_credentials_by_data_set_id
      consumes:
        - application/json
      parameters:
        - name: batchId
          description: >-
            If wishing to write, the batchId used during writing. Required for
            buliding a stage path.
          required: false
          in: query
          type: string
      responses:
        '200':
          description: Creadential object given dataSet.
          schema:
            $ref: '#/definitions/dataSetCredentials'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/views':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Lists DataSetViews for this DataSet.
      operationId: get_data_set_views_by_data_set_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of dataSetView objects associated with given dataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetViewResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Creates a new DataSetView for this dataSet.
      operationId: post_data_set_view_by_data_set_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetView
          description: Datasetview to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetViewRequest'
      responses:
        '201':
          description: 'Array[ @/dataSets/dataSetId/views/viewId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/views/{viewid}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Fetches a particular DataSetView for this DataSet.
      operationId: get_data_set_view_by_data_set_id_by_id
      produces:
        - application/json
      parameters:
        - name: viewid
          description: datasetview id
          required: true
          in: path
          type: string
      responses:
        '200':
          description: DataSetView associated with input dataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetViewResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/views/{viewId}/transforms':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Lists the Transforms for a particular dataSetView for this dataSet.
      operationId: get_transforms_by_data_set_id_and_data_set_view_id
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID.
          required: true
          in: path
          type: string
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of transforms associated with given dataSetViewId and dataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/transformResponse'
          examples:
            application/json:
              {
                  "5abac7063998860540c7b848": {
                      "version": "1.0.5",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "created": 1522190086195,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "updated": 1522190612384,
                      "codeUrl": "git://example.com/foo/bar/something.git",
                      "args": [
                          "--context_param profile_dsv_in0.inputPath=${CATALOG.DSV.5ab540d0864cf0267448ead4.inputFiles}"
                      ],
                      "inputs": [],
                      "outputs": [
                          {
                              "dataSet": "@/dataSets/123456"
                          }
                      ]
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/views/{viewId}/files':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Lists the dataSetFiles for a particular dataSetView for this dataSet.
      operationId: get_data_set_files_by_data_set_id_and_data_set_view_id
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetViewId
          required: true
          in: path
          type: string
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of dataSetFiles for given dataSetViewId and dataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFileResponse'
          examples:
            application/json:
              {
                  "5abd49645591445e1ba04f87": {
                      "version": "1.0.0",
                      "created": 1522354532905,
                      "updated": 1522354532905,
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetViewId": "5ab54170864cf0267448ead5",
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "availableDates": {
                          "startDate": 4444,
                          "endDate": 5555
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Adds DataSetFile to a particular DataSetView for this DataSet.
      operationId: post_data_set_file_by_data_set_id_and_data_set_view_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - name: dataSetFile
          description: Data set file to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFileRequest'
      responses:
        '201':
          description: 'Array[ @/dataSets/{datasetId}/views/{viewId}/files/{fileId} ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/views/{viewId}/files/{fileId}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Fetches a dataSetFile for a particular dataSetView for this dataSet.
      operationId: get_data_set_file_by_data_set_id_and_data_set_view_id_by_id
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - name: fileId
          description: file ID
          required: true
          in: path
          type: string
      responses:
        '200':
          description: DataSetFile for given fileId, dataSetViewId and dataSetId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFileResponse'
          examples:
            application/json:
              {
                  "5abd49645591445e1ba04f87": {
                      "version": "1.0.0",
                      "created": 1522354532905,
                      "updated": 1522354532905,
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetViewId": "5ab54170864cf0267448ead5",
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "availableDates": {
                          "startDate": 4444,
                          "endDate": 5555
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Removes a DataSetFile for a particular DataSetView for this DataSet.
      operationId: delete_data_set_file_by_data_set_id_and_data_set_view_id_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: viewId
          description: dataSetView ID
          required: true
          in: path
          type: string
        - name: fileId
          description: dataSetView ID
          required: true
          in: path
          type: string
      responses:
        '200':
          description: 'Array[ @/{datasetId?/views/{viewId}/files/{fileId} ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/ingestBatchSummary':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: >-
        Retrieves summarized stats for a DataSet's batches. Default time window:
        last seven days.
      operationId: get_data_set_batches_summary
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: Batch summary object for given dataSetId.
          schema:
            $ref: '#/definitions/batchResponse'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSets/{id}/dule':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Datasets
      security:
        - Bearer: []
      summary: Returns the DULE labels associated with a dataset.
      operationId: get_dule_labels
      produces:
        - application/json
      responses:
        '200':
          description: The DULE labels assocated with the dataset.
          schema:
            $ref: '#/definitions/duleLabelResponse'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /dataSetViews:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - DataSetViews
      security:
        - Bearer: []
      summary: Fetches a list of DataSetViews.
      operationId: get_data_set_views
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: dataSetId
          description: Filter by the foreign key to the owning DataSet.
          required: false
          type: string
          in: query
        - name: name
          description: Filter by the name of this DataSetView.
          required: false
          type: string
          in: query
        - name: isDefault
          description: >-
            Marks this view as the default for it's DataSet. DataSets should
            only be associated to a single default view. This query param
            allows filtering of dataSetViews by their isDefault field value.
          required: false
          type: boolean
          in: query
        - name: status
          description: >-
            Describes the current state of the view.  If a view is not enabled,
            it should not be used by any process even when it is specified as a
            dependency. Only one view of a given aspect should be enabled at any
            time. For example, no DataSet should have more than one enabled
            production or sandbox view. This query param allows filtering all
            dataSetViews by their status field value.
          required: false
          type: string
          in: query
        - name: editable
          description: >-
            Determines whether or not this DataSetView definition should be
            editable by the user.  Some documents are 'locked' and not available
            for edit. This query param allows filtering all dataSetViews by
            their status editable value.
          required: false
          type: boolean
          in: query
        - name: sdsVersion
          description: >-
            Filter by the semantic version of the SDS this view (and it's transforms) are
            compatible with.
          required: false
          type: string
          in: query
        - name: basePath
          description: >-
            Filter by the fully qualified base path for all DataSetFiles associated with this
            view. For views cached in a database (HBase or Cassandra), supply a
            templatized DSN.
          required: false
          type: string
          in: query
        - name: saveStrategy
          description: Filter by the save strategy for this dataset.
          required: false
          type: string
          in: query
        - name: isCached
          description: >-
            Some DataSetViews are pre-cached in a high-speed lookup table for
            faster access, this flag indicates if that has been done. This query param
            allows filtering all dataSetViews by their isCached field value.
          required: false
          type: boolean
          in: query
        - name: aspect
          description: >-
            Aspect represents the particular perspective or target you're after
            when viewing a dataset. Sandbox views are a version of the dataset
            that's being used to iterate towards a final ETL job definition. The
            production aspect is then used (by default). This query param allows
            filtering all dataSetViews by their aspect field value.
          required: false
          type: string
          in: query
        - name: schema
          description: This is the uri for the XDM model.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of all dataSetViews associated with given ims_org_id.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetViewResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - DataSetViews
      security:
        - Bearer: []
      summary: Saves a new dataSetView.
      operationId: post_data_set_view
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetView
          description: DataSetView to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetViewRequest'
      responses:
        '201':
          description: 'Array[ @/dataSetViews/dataSetViewId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSetViews/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - DataSetViews
      security:
        - Bearer: []
      summary: Fetches DataSetViews by ID.
      operationId: get_data_set_view_by_id
      produces:
        - application/json
      responses:
        '200':
          description: DataSetView for given dataSetViewId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetViewResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - DataSetViews
      security:
        - Bearer: []
      summary: Updates an existing DataSetView by ID.
      operationId: update_data_set_view_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - name: dataSetView
          description: DataSetViews to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetViewRequest'
      responses:
        '201':
          description: 'Array[ @/dataSetViews/dataSetViewId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - DataSetViews
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing DataSetView.
      operationId: patch_data_set_view_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - name: dataSetView
          description: Data set view field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetViewPatchRequest'
      responses:
        '200':
          description: 'Array[ @/dataSetViews/{dataSetViewId} ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - DataSetViews
      security:
        - Bearer: []
      summary: Deletes a DataSetView by ID.
      operationId: delete_data_set_view_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/dataSetViews/dataSetViewId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSetViews/{id}/children':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - DataSetViews
      security:
        - Bearer: []
      summary: Lists DataSetViews dependent on the current DataSetView.
      operationId: get_children_by_data_set_view_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: dataSetId
          description: Foreign key to the owning DataSet.
          required: false
          type: string
          in: query
        - name: name
          description: The name of this DataSetView.
          required: false
          type: string
          in: query
        - name: isDefault
          description: >-
            Marks this view as the default for it's DataSet. DataSets should
            only be associated to a single default view.
          required: false
          type: boolean
          in: query
        - name: editable
          description: >-
            Determines whether or not this DataSetView definition should be
            editable by the user.  Some documents are 'locked' and not available
            for edit.
          required: false
          type: boolean
          in: query
        - name: sdsVersion
          description: >-
            The semantic version of the SDS this view (and it's transforms) are
            compatible with.
          required: false
          type: string
          in: query
        - name: basePath
          description: >-
            Fully qualified base path for all DataSetFiles associated with this
            view. For views cached in a database (HBase or Cassandra), supply a
            templatized DSN.
          required: false
          type: string
          in: query
        - name: isCached
          description: >-
            Some DataSetViews are pre-cached in a high-speed lookup table for
            faster access, this flag indicates if that has been done.
          required: false
          type: boolean
          in: query
        - name: status
          description: >-
            Describes the current state of the view.  If a view is not enabled,
            it should not be used by any process even when it is specified as a
            dependency. Only one view of a given aspect should be enabled at any
            time. For example, no DataSet should have more than one enabled
            production or sandbox view.
          required: false
          type: string
          in: query
        - name: saveStrategy
          description: Denotes save strategy for this dataset.
          required: false
          type: string
          in: query
        - name: aspect
          description: >-
            Aspect represents the particular perspective or target you're after
            when viewing a dataset. Sandbox views are a version of the dataset
            that's being used to iterate towards a final ETL job definition. The
            production aspect is then used (by default).
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of dependent dataSetViews.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetViewResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /dataSetFiles:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - DataSetFiles
      security:
        - Bearer: []
      summary: Fetches a list of DataSetFiles.
      operationId: get_data_set_files
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: folderName
          description: >-
            Filter by the name of the folder as it resides in the basePath (provided from
            the DataSetView).
          required: false
          type: string
          in: query
        - name: batchId
          description: Filter by the ID of the Batch operation that created this DataSetFile.
          required: false
          type: string
          in: query
        - name: dataSetViewId
          description: Filter by the ID of the owning DataSetView.
          required: false
          type: string
          in: query
        - name: records
          description: >-
            Filter by the number of records/rows/transactions contained in file
            represented by this DataSetFile.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: Filter by the size for the file in bytes.
          required: false
          type: integer
          format: int64
          in: query
        - name: isValid
          description: >-
            True if the file can still be used. False if the file was part of a
            batch that was mistakenly uploaded or incorrect, and should no
            longer be considered. This query param can be used to filter all
            files with isValid field value.
          required: false
          type: boolean
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of dataSetFiles associated with given ims_org_id.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFileResponse'
          examples:
            application/json:
              {
                  "5ab54170864cf0267448ead5": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetId": "5ab540d0864cf0267448ead4",
                      "aspect": "production",
                      "status": "enabled",
                      "editable": false,
                      "fields": [],
                      "storageType": "s3",
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "created": 1521828208046,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "observableSchema": {},
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "isLookup": false,
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - DataSetFiles
      security:
        - Bearer: []
      summary: Saves a new DataSetFile.
      operationId: post_data_set_file
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetFile
          description: Data set file to be posted.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFileRequest'
      responses:
        '201':
          description: 'Array[ @/dataSets/dataSetFileId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - DataSetFiles
      security:
        - Bearer: []
      summary: Deletes a DataSetFile based on a search criteria.
      operationId: delete_data_set_file_by_search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batchId
          description: >-
            ID of the batch object associated with the creation of a
            DataSetFile.
          required: false
          in: query
          type: string
        - $ref: '#/parameters/property'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetFileId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/dataSetFiles/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - DataSetFiles
      security:
        - Bearer: []
      summary: Fetches DataSetFiles by ID.
      operationId: get_data_set_file_by_id
      produces:
        - application/json
      responses:
        '200':
          description: connections response
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetFileResponse'
          examples:
            application/json:
              {
                  "5abd49645591445e1ba04f87": {
                      "version": "1.0.0",
                      "created": 1522354532905,
                      "updated": 1522354532905,
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "dataSetViewId": "5ab54170864cf0267448ead5",
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "availableDates": {
                          "startDate": 4444,
                          "endDate": 5555
                      }
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - DataSetFiles
      security:
        - Bearer: []
      summary: Updates an existing DataSetFile by ID.
      operationId: update_data_set_file_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetFile
          description: Data set file field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFileRequest'
      responses:
        '200':
          description: ' @/dataSets/dataSetFileId '
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - DataSetFiles
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing DataSetFile.
      operationId: patch_data_set_file_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - name: dataSetFile
          description: DataSetFile field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetFilePatchRequest'
      responses:
        '200':
          description: '@/dataSets/dataSetFileId'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - DataSetFiles
      security:
        - Bearer: []
      summary: Deletes a DataSetFile by ID.
      operationId: delete_data_set_file_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: '@/dataSetFiles/'
          schema:
            type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - Batched Requests
      security:
        - Bearer: []
      summary: Fetches resource links for the Catalog Service.
      operationId: get_service_resources
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: serviceResources
          schema:
            $ref: '#/definitions/serviceResources'
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Batched Requests
      security:
        - Bearer: []
      summary: Allows for multiple and related Catalog API calls.
      operationId: post_service_resources
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: resources
          description: >-
            See:
            https://www.adobe.io/apis/cloudplatform/dataservices/services/allservices.html#!api-specification/markdown/narrative/technical_overview/catalog_architectural_overview/catalog_architectural_overview.md#24-batching-data-catalog-requests---transactional-api
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/resourceItem'
      responses:
        '201':
          description: 'Array[ @/resource/resourceId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  /transforms:
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Fetches a list of Transforms.
      operationId: get_transforms
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: name
          description: Filter by the human-readable name or title for this Transform.
          required: false
          type: string
          in: query
        - name: body
          description: >-
            Filter by the  lines of script that make up the transformation/mapping logic for
            this Transform.
          required: false
          type: string
          in: query
        - name: order
          description: >-
            For transforms execution order matters. The service does not enforce
            uniqueness an maintains determinism by using a sort of
            {order,created} to manage orders with the same value.
          required: false
          type: integer
          in: query
        - name: created
          description: >-
            Filter by the Unix timestamp (in milliseconds) when this DataSetView was
            persisted.
          required: false
          type: integer
          format: int64
          in: query
        - name: language
          description: Filter by the type of language this transform's body contains.
          required: false
          type: string
          in: query
        - name: codeUrl
          description: >-
            If the body of this transform is not used, it is expected that a URL
            pointing to the location of the code to be used for this transform
            is placed in this field.
          required: false
          type: string
          in: query
        - name: vehicleUrl
          description: >-
            The URL of the vehicle that will orchestrate or otherwise run the
            code in this transform.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: List of transforms associated with given ims_org_id.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/transformResponse'
          examples:
            application/json:
              {
                  "5abac7063998860540c7b848": {
                      "version": "1.0.5",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "created": 1522190086195,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "updated": 1522190612384,
                      "codeUrl": "git://example.com/foo/bar/something.git",
                      "args": [
                          "--context_param profile_dsv_in0.inputPath=${CATALOG.DSV.5ab540d0864cf0267448ead4.inputFiles}"
                      ],
                      "inputs": [],
                      "outputs": [
                          {
                              "dataSet": "@/dataSets/123456"
                          }
                      ]
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    post:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Saves a new Transform.
      operationId: post_transform
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transform
          description: Transform to be posted
          required: true
          in: body
          schema:
            $ref: '#/definitions/transformRequest'
      responses:
        '201':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/transforms/{id}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Fetches Transforms by ID.
      operationId: get_transform_by_id
      produces:
        - application/json
      responses:
        '200':
          description: Transform object for given transformId.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/transformResponse'
          examples:
            application/json:
              {
                  "5abac7063998860540c7b848": {
                      "version": "1.0.5",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "created": 1522190086195,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "updated": 1522190612384,
                      "codeUrl": "git://example.com/foo/bar/something.git",
                      "args": [
                          "--context_param profile_dsv_in0.inputPath=${CATALOG.DSV.5ab540d0864cf0267448ead4.inputFiles}"
                      ],
                      "inputs": [],
                      "outputs": [
                          {
                              "dataSet": "@/dataSets/123456"
                          }
                      ]
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    put:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Updates an existing Transform by ID.
      operationId: update_transform_by_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - name: transform
          description: Transform field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/transformRequest'
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Updates specified attributes of an existing transform.
      operationId: patch_transform_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Deletes a Transform by ID.
      operationId: delete_transform_by_id
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/transforms/{id}/inputs':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Fetches inputs for a specific Transform.
      operationId: get_inputs_by_transform_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: 'Array[ {dataset: @/dataSets/dataSetId }]'
          schema:
            type: array
            items:
              type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Updates inputs attributes of an existing transform.
      operationId: patch_inputs_by_transform_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - name: inputs
          description: 'Array[ {"dataSet": "@/dataSets/dataSetId"}]'
          required: true
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                dataSet:
                  type: string
        - name: if-match
          description: >-
            Set to verify the right version of document to be modified by
            matching the updated date.
          in: header
          type: string
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/transforms/{id}/outputs':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Fetches outputs for a specific Transform.
      operationId: get_outputs_by_transform_id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: 'Array[ {dataset: @/dataSets/dataSetId }]'
          schema:
            type: array
            items:
              type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    patch:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Updates outputs attributes of an existing transform.
      operationId: patch_outputs_by_transform_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - name: outputs
          description: array of outputs for the transforms
          required: true
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                dataSet:
                  type: string
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/transforms/{id}/inputs/{dataSetId}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Fetches an input DataSet for the specified Transform.
      operationId: get_inputs_by_transform_id_and_data_set_id
      produces:
        - application/json
      parameters:
        - name: dataSetId
          description: The ID of the dataSet
          required: true
          in: path
          type: string
      responses:
        '200':
          description: Data Set Object
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Deletes an input DataSet for the specified Transform.
      operationId: delete_inputs_by_transform_id_and_data_set_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetId
          description: dataSetId
          required: true
          in: path
          type: string
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/transforms/{id}/outputs/{dataSetId}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/id'
    get:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Fetches an output DataSet for the specified Transform.
      operationId: get_outputs_by_transform_id_and_data_set_id
      produces:
        - application/json
      parameters:
        - name: dataSetId
          description: dataSet Id
          required: true
          in: path
          type: string
      responses:
        '200':
          description: Data Set Object
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "aspect": "production",
                      "status": "enabled",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "transforms": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/transforms",
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
    delete:
      tags:
        - Transforms
      security:
        - Bearer: []
      summary: Deletes an output DataSet for the specified Transform.
      operationId: delete_outputs_by_transform_id_and_data_set_id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSetId
          description: dataSetId
          required: true
          in: path
          type: string
      responses:
        '200':
          description: 'Array[ @/transforms/transformId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
  '/xdms':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Return a list of all XDM schema.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: get_all_objects_in_org
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/xdmVersion'
      responses:
        '200':
          description: Returns a list of all XDM schemas or details of a specific schema by its {id}.
          schema:
            $ref: '#/definitions/xdmListAllSchema'
          examples:
            application/json:
              - namespace: channels
                type: standard
                paths:
                  - '@/xdms/channels/adm'
                  - '@/xdms/channels/agency'
                  - '@/xdms/channels/apns'
                  - '@/xdms/channels/application'
                  - '@/xdms/channels/baidu'
                  - '@/xdms/channels/channel'
                  - '@/xdms/channels/direct-mail'
                  - '@/xdms/channels/email'
                  - '@/xdms/channels/facebook-feed'
              - namespace: common
                type: standard
                paths:
                  - '@/xdms/common/auditable'
                  - '@/xdms/common/geo'
                  - '@/xdms/common/geounit'
                  - '@/xdms/common/organization'
                  - '@/xdms/common/orgunit'
              - namespace: content
                type: standard
                paths:
                  - '@/xdms/content/productlistitem'
              - namespace: context
                type: standard
                paths:
                  - '@/xdms/context/advertising'
                  - '@/xdms/context/advertising-break'
                  - '@/xdms/context/advertising-timed-asset-reference'
                  - '@/xdms/context/advertising-timed-asset-view-details'
                  - '@/xdms/context/adviewability'
                  - '@/xdms/context/application'
                  - '@/xdms/context/subscription'
                  - '@/xdms/context/webinfo'
                  - '@/xdms/context/webinteraction'
                  - '@/xdms/context/webpagedetails'
                  - '@/xdms/context/webreferrer'
              - namespace: data
                type: standard
                paths:
                  - '@/xdms/data/application-closes'
                  - '@/xdms/data/bitrate-average'
                  - '@/xdms/data/clicks'
                  - '@/xdms/data/metrics/advertising/impressions'
                  - '@/xdms/data/viewablethirdquartiles'
              - namespace: external
                type: standard
                paths:
                  - '@/xdms/external/iptc/creator'
                  - '@/xdms/external/iptc/episode'
                  - '@/xdms/external/iptc/rating'
                  - '@/xdms/external/iptc/season'
                  - '@/xdms/external/iptc/series'
                  - '@/xdms/external/schema/geocircle'
                  - '@/xdms/external/schema/geocoordinates'
                  - '@/xdms/external/schema/geoshape'
              - namespace: _customer
                type: non-standard
                paths:
                  - '@/xdms/_customer/retail/customer'
                  - '@/xdms/_customer/web/user'
              - namespace: extension
                type: non-standard
                paths:
                  - '@/xdms/context/profile/_customer/retail'
                  - '@/xdms/context/person/_customer/web'
        '401':
          description: Unauthorized
          schema:
            type: object
          examples:
            application/json:
              error_code: '401013'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403010'
              message: Description of error.
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected error
  '/xdms/{namespace}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/namespace'
    get:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Return details for every schema in a specific {namespace}.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: get_obects_in_namespace
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/excludeExtension'
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/xdmVersion'
      responses:
        '200':
          description: Returns details for every schema in the {namespace} including fields and metadata.
          schema:
            $ref: '#/definitions/xdmNamespaceDetail'
          examples:
            application/json:
              schema1:
                title: Sample Schema 1
                type: object
                description: Description of this schema.
                properties:
                  field1:
                    title: Field 1
                    description: Description for this field.
                    type: string
                    enum:
                      - option1
                      - option2
                      - option3
                      - option4
                    meta:enum:
                      option1: Option 1
                      option2: Option 2
                      option3: Option 3
                      option4: Option 4
                    default: option1
                  field2:
                    title: Field 2
                    description: Description of this field.
                    type: number
              schema2:
                title: Sample Schema 2
                type: object
                description: Description of this schema.
                properties:
                  field1:
                    title: Field 1
                    type: string
                    format: date-time
                    description: Description for this field.
                  field2:
                    title: Field 2
                    type: number
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
  '/xdms/{namespace}/{objectName}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/namespace'
    get:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Return details for a specific schema.
      operationId: get_obect_in_namespace
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/expansion'
        - $ref: '#/parameters/excludeExtension'
        - $ref: '#/parameters/objectName'
        - $ref: '#/parameters/xdmVersion'
      responses:
        '200':
          description: Returns details for a specific schema.
          schema:
            $ref: '#/definitions/xdmSchema'
          examples:
            application/json:
              title: Sample Schema 1
              type: object
              description: Description of this schema.
              properties:
                field1:
                  title: Field 1
                  description: Description for this field.
                  type: string
                  enum:
                    - option1
                    - option2
                    - option3
                    - option4
                  meta:enum:
                    option1: Option 1
                    option2: Option 2
                    option3: Option 3
                    option4: Option 4
                  default: option1
                field2:
                  title: Field 2
                  description: Description of this field.
                  type: number
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
  '/xdms/_customer':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Return details for every schema defined by the IMS Org.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: get_all_custom_objects
      produces:
        - application/json
      responses:
        '200':
          description: Returns details for every customer-defined schema including fields and metadata.
          schema:
            $ref: '#/definitions/xdmNamespaceDetail'
          examples:
            application/json:
              web/visitor:
                title: Website Visitors
                type: object
                description: Description of this schema.
                properties:
                  field1:
                    title: Field 1
                    type: string
                    format: date-time
                    description: Description for this field.
                  field2:
                    title: Field 2
                    type: number
              retail/store:
                title: Retail Stores
                type: object
                description: Description of this schema.
                properties:
                  field1:
                    title: Field 1
                    description: Description for this field.
                    type: string
                    enum:
                      - option1
                      - option2
                      - option3
                      - option4
                    meta:enum:
                      option1: Option 1
                      option2: Option 2
                      option3: Option 3
                      option4: Option 4
                    default: option1
                  field2:
                    title: Field 2
                    description: Description of this field.
                    type: number
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
  '/xdms/_customer/{extensionNS}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/extensionNS'
    get:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Return a list of customer-defined schema. 
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: get_custom_objects
      produces:
        - application/json
      responses:
        '200':
          description: Returns a list of all schema in the specified namespace.
          schema:
            $ref: '#/definitions/xdmSchemaPath'
          examples:
            application/json:
              - '@/xdms/_customer/retail/loyaltyprogram'
              - '@/xdms/_customer/retail/store'
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
  '/xdms/_customer/{extensionNS}/{objectName}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/extensionNS'
      - $ref: '#/parameters/objectName'
    get:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Return details for custom schema.
      operationId: get_custom_object
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/expansion'
        - $ref: '#/parameters/excludeExtension'
        - $ref: '#/parameters/objectName'
        - $ref: '#/parameters/xdmVersion'
      responses:
        '200':
          description: Returns details for a specific customer-defined schema.
          schema:
            $ref: '#/definitions/xdmExtensionResponse'
          examples:
            application/json:
              title: Flights
              type: object
              description: Data for all available flights.
              properties:
                flightId:
                  title: Flight ID
                  type: string
                  description: The unique ID of the flight.
                  'meta:xdmType': string
                flightNumber:
                  title: Flight Number
                  type: string
                  description: Flight Number provided by the carrier.
                  'meta:xdmType': string
                carrier:
                  title: Carrier
                  type: string
                  description: Name of the flight carrier.
                  'meta:xdmType': string
                carrierAddress:
                  title: Carrier Address
                  description: Address of the flight carrier.
              extNamespace: web
              imsOrg: '{IMS_ORG}'
              createdClient: '{string}'
              updatedUser: '{string}@AdobeID'
              version: '1'
              created: 1536692957370
              updated: 1536692957370
              id: _customer/web/flights
              'meta:altId': _customer.web.flights
              $id: _customer/web/flights
              
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
    post:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Create a new custom schema.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: post_custom_object
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/payload'
      responses:
        '201':
          description: Returns the path to the newly created schema.
          schema:
            $ref: '#/definitions/xdmSchemaPath'
          examples:
            application/json:
              - '@/xdms/_customer/web/flights'
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
    put:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Create or update a custom schema.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: create_or_update_custom_object
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/payload'
      responses:
        '200':
          description: Returns the path to the updated schema.
          schema:
            $ref: '#/definitions/xdmSchemaPath'
          examples:
            application/json:
              - '@/xdms/_customer/web/flights'
        '201':
          description: Returns the path to the newly created schema.
          schema:
            $ref: '#/definitions/xdmSchemaPath'
          examples:
            application/json:
              - '@/xdms/_customer/web/flights'
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
    delete:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Remove customer-defined schema.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: remove_custom_object
      produces:
        - application/json
      responses:
        '200':
          description: Returns the path to the deleted schema.
          schema:
            $ref: '#/definitions/xdmSchemaPath'
          examples:
            application/json:
              - '@/xdms/_customer/web/flights'
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
  '/xdms/{namespace}/{objectName}/_customer':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/namespace'
      - $ref: '#/parameters/objectName'
      - $ref: '#/parameters/extensionNS'
    get:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Return a list of all customer-defined extensions for a specific schema.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: get_all_extensions_to_object
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/expansion'
      responses:
        '200':
          description: Returns a list of all customer-defined extensions for a specific schema.
          schema:
            $ref: '#/definitions/xdmSchemaPath'
          examples:
            application/json:
              - '@/xdms/context/person/_customer/retail'
              - '@/xdms/context/person/_customer/flights'
              - '@/xdms/context/person/_customer/web'
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error         
  '/xdms/{namespace}/{objectName}/_customer/{extensionNS}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/namespace'
      - $ref: '#/parameters/objectName'
      - $ref: '#/parameters/extensionNS'
    get:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Return the details for a specific extension to the specified schema.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: get_extension_to_object
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/expansion'
      responses:
        '200':
          description: Returns details for a specific extension to the specified schema.
          schema:
            $ref: '#/definitions/xdmExtensionResponse'
          examples:
            application/json:
              type: object
              title: Retail Fields
              description: Custom fields for retail division
              properties:
                homeStoreId:
                  title: Home Store ID
                  type: string
                  description: Unique ID of the individual's home store.
                  'meta:xdmType': string
                loyaltyMember:
                  title: Loyalty Program Member
                  type: boolean
                  default: false
                  description: Is this individual a member of the Loyalty Program?
                  'meta:xdmType': boolean
                loyaltyLevel:
                  title: Loyalty Program Membership Level
                  type: string
                  description: Current membership level within the Loyalty Program.
                  'meta:xdmType': string
                loyaltyJoinDate:
                  title: Loyalty Program Join Date
                  type: string
                  format: date
                  description: Date individual joined the Loyalty Program.
                  'meta:xdmType': string
              extNamespace: retail
              version: '1'
              created: 1536960928251
              updated: 1536961492965
              createdClient: '{API_KEY}'
              updatedUser: 'string@AdobeID'
              imsOrg: '{IMS_ORG}'
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
    post:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Create an extension to the specified schema.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: post_extension_to_object
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/payload'
      responses:
        '201':
          description: Returns the path to the newly created extension.
          schema:
            $ref: '#/definitions/xdmSchemaPath'
          examples:
            application/json:
              - '@/xdms/context/person/_customer/retail'
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
    put:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Create or update a specific extension to the specified schema.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: create_or_update_extension_to_object
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/payload'
      responses:
        '200':
          description: Returns the path to the updated extension.
          schema:
            $ref: '#/definitions/xdmSchemaPath'
          examples:
            application/json:
              - '@/xdms/context/person/_customer/customer/retail'
        '201':
          description: Returns the path to the newly created extension.
          schema:
            $ref: '#/definitions/xdmSchemaPath'
          examples:
            application/json:
              - '@/xdms/context/person/_customer/customer/retail'
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
    delete:
      tags:
        - XDM
      security:
        - Bearer: []
      summary: (No longer supported) Remove extension.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: remove_customer_extension
      produces:
        - application/json
      responses:
        '200':
          description: Returns the path to the deleted extension.
          schema:
            $ref: '#/definitions/xdmSchemaPath'
          examples:
            application/json:
              - '@/xdms/context/person/_customer/retail'
        '400':
          description: Bad Request
          schema:
            type: object
          examples:
            application/json:
              error_code: '400003'
              message: Description of error.
        '403':
          description: Forbidden
          schema:
            type: object
          examples:
            application/json:
              error_code: '403000'
              message: Description of error.    
        '404':
          description: Not Found
          schema:
            type: object
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Description of error.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
  '/descriptors':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
    get:
      tags:
        - Descriptors
      security:
        - Bearer: []
      summary: (No longer supported) Return a list of every {descriptorId} within the organization, organized by type.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: get_all_schema_descriptors

      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/descriptorType'
        - $ref: '#/parameters/sourceSchema'
        - $ref: '#/parameters/destSchema'
      responses:
        '200':
          description: Returns a list of all existing descriptors, separated by type.
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              - descriptorType: relationship
                descriptors:
                  - '@/descriptors/b5970193cb7050c1f381e02c0433c5525bf6b69d'
                  - '@/descriptors/b79fde8af13d60948e7be9197283f56e123c58de'
              - descriptorType: schema
                descriptors:
                  - '@/descriptors/061fc9ac5e2ac791bb664eb1ad1503bd50e96ad6'
                  - '@/descriptors/ecef7db8dc0034b9a53179ad41bca4e98d088388'
              - descriptorType: updatePolicy
                descriptors:
                  - '@/descriptors/3875cc1927e746e496cc2206f24e1567f46d7fb5'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Error detail here.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
    post:
      tags:
        - Descriptors
      security:
        - Bearer: []
      summary: (No longer supported) Create a new descriptor.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: post_schema_descriptor
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/descriptorPayload'
      responses:
        '201':
          description: Returns newly created {descriptorId} in the response body.
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              "@id": "061fc9ac5e2ac791bb664eb1ad1503bd50e96ad6"
        '400':
          description: Bad Request Error
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 400
              title: Error Title
              detail: A description of the error appears here.
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              errors:
                status: '403'
                code: error-code-here
                title: Error Title
                meta:
                  request_id: '8Z4eT23agFSKtKZlDEloDwUeYW2oAVwR'
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
  '/descriptors/{descriptorId}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/descriptorId'
    get:
      tags:
        - Descriptors
      security:
        - Bearer: []
      summary: (No longer supported) Return a specific descriptor.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: get_schema_descriptor
      produces:
        - application/json
      responses:
        '200':
          description: Returns individual descriptor details in JSON format.
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              '@type': 'xdm:descriptorPrimaryKey'
              'xdm:sourceSchema': _customer/web/flights
              'xdm:sourceProperty': /flightId
              descriptorType: schema
              descriptorId: 061fc9ac5e2ac791bb664eb1ad1503bd50e96ad6
              version: '1'
              created: 1537219107919
              updated: 1537220008646
              createdClient: '{API_KEY}'
              updatedUser: 'string@AdobeID'
              imsOrg: '{IMS_ORG}'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Descriptor object not found
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
    put:
      tags:
        - Descriptors
      security:
        - Bearer: []
      summary: (No longer supported) Update individual descriptor.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: put_schema_descriptor
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/descriptorPayload'
      responses:
        '201':
          description: 'Returns {descriptorId} in the response body'
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              "@id": "061fc9ac5e2ac791bb664eb1ad1503bd50e96ad6"
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 400
              title: BadRequestError
              detail: A description of the error appears here.
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              error_code: 403000
              message: A description of the error appears here.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
    delete:
      tags:
        - Descriptors
      security:
        - Bearer: []
      summary: (No longer supported) Remove descriptor using its {descriptorId}.
      description: <p><strong>END OF LIFE.</strong> This endpoint is no longer supported. Use the <a href="https://www.adobe.io/apis/experienceplatform/home/api-reference.html#!acpdr/swagger-specs/schema-registry.yaml">Schema Registry API</a>.</p>
      operationId: remove_xdm_descriptor
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              error_code: 403000
              message: A description of the error appears here.
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/xdmDescriptor'
          examples:
            application/json:
              type: /placeholder/type/uri
              status: 404
              title: NotFoundError
              detail: Descriptor object not found.
        '500':
          description: Internal Server Error
        default:
          description: Unexpected Error
  '/tags/{tagNamespace}':
    parameters:
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/accept-encoding'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/tagNamespace'
      - $ref: '#/parameters/tags'
      - $ref: '#/parameters/objectType'
    get:
      tags:
        - Tags
      security:
        - Bearer: []
      summary: This API allows retrieving aggregated values for all tags within an IMS org for given tagNameSpace.
      operationId: get_tags
      produces:
        - application/json
      responses:
        '200':
          description: Returns aggregated tagValues for given namespace.
          schema:
            $ref: '#/definitions/tagsResponse'
          examples:
            application/json:
              {
                "objectType": {
                  "datasets": ["@/DataSet/5b20017aa492bbd30425e21b",
                               "@/DataSet/5b20451bf4c5e1f6fad006f9",
                               "@/DataSet/5b20451cf4c5e1f6fad006fb"]
                },
                "adobe/pqs/databases": ["baz", "bat", "foo", "bar"]
              }
        '400':
          description: Bad request
        '404':
          description: not found
        '500':
          description: Internal server error
        default:
          description: Unexpected error
parameters:
  schemaRef:
      name: id
      description: The schema in uri (https://ns.adobe.com/xdm/context/profile, https://ns.adobe.com/customer/imsOrg/extensionNS/objectName) or meta:altId (_xdm.context.profile, _customer.extensionNS.objectName) or original xdm id format (context/profile, _customer/extensionNS/objectName).
      required: false
      in: query
      type: string
  properties:
    name: properties
    description: >-
      A comma separated whitelist of top-level object properties to be returned in the response. Used
      to cut down the number of properties and amount of data returned in the response bodies.
    in: query
    type: string
    required: false
  orderBy:
    name: orderBy
    description: >-
      Sort parameter and direction for sorting the response. Ex.
      orderBy=asc:created,updated. This was previously called sort.
    in: query
    type: string
    required: false
  limit:
    name: limit
    description: Limit response to a specified number of objects. Ex. limit=10
    in: query
    type: integer
    required: false
  start:
    name: start
    description: >-
      Returns results from a specific offset of objects. This was previously
      called offset. Ex. start=3.
    in: query
    type: integer
    required: false
  property:
    name: property
    description: Regex used to filter objects in the response. Ex. property=name~^test.
    in: query
    type: string
    required: false
  tags:
    name: tags
    description: 'Filter response by the specified tags. Ex. tags=ns:tag,ns2:tag2'
    in: query
    type: string
    required: false
  description:
    name: description
    description: Filter by user-provided description of the account.
    required: false
    type: string
    in: query
  version:
    name: version
    description: Filter by Semantic version of the account. Updated when the object is modified.
    required: false
    type: string
    in: query
  created:
    name: created
    description: Filter by the Unix timestamp (in milliseconds) when this object was persisted.
    required: false
    type: integer
    format: int64
    in: query
  createdAfter:
    name: createdAfter
    description: Exclusively filter records created after this timestamp.
    required: false
    in: query
    type: integer
    format: int64
  createdBefore:
    name: createdBefore
    description: Exclusively filter records created before this timestamp.
    required: false
    in: query
    type: integer
    format: int64
  updated:
    name: updated
    description: Filter by the Unix timestamp (in milliseconds) for the time of last modification.
    required: false
    type: integer
    format: int64
    in: query
  createdClient:
    name: createdClient
    description: Filter by the ID of the IMS client that created this object.
    required: false
    type: string
    in: query
  createdUser:
    name: createdUser
    description: Filter by the  ID of the user who created this object.
    required: false
    type: string
    in: query
  updatedUser:
    name: updatedUser
    description: Filter by the  ID of the user who changed this object.
    required: false
    type: string
    in: query
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: The owning IMS organization identifier.
    required: true
    type: string
    in: header
  x-api-key:
    name: x-api-key
    description: The API key belonging to the calling client.
    required: true
    type: string
    in: header
  x-user-token:
    name: x-user-token
    description: For calls which are proxied by catalog, the access token for the user on whose behalf this call is made.
    required: false
    type: string
    in: header
  accept-encoding:
    name: accept-encoding
    description: |
      "Used to signal the intent to consume compressed response bodies. Supported encodings: gzip."
    required: false
    type: string
    in: header
  descriptorId:
    name: descriptorId
    description: Descriptor ID of the descriptor object
    required: true
    type: string
    in: path
  id:
    name: id
    description: Object ID
    required: true
    in: path
    type: string
  if-match:
    name: if-match
    description: >-
      Set to verify the right version of document to be modified by matching the
      updated date.
    in: header
    type: string
  namespace:
    name: namespace
    description: Filter by the base namespace ("model" or "core").
    required: true
    in: path
    type: string
  excludeExtension:
    name: excludeExtension
    description: Set to true to exclude extensions.
    in: query
    type: boolean
  extensionNS:
    name: extensionNS
    description: The extension namespace.
    required: true
    in: path
    type: string
  objectName:
    name: objectName
    description: Name of custom object.
    required: true
    in: path
    type: string
  payload:
    name: payload
    description: The payload JSON that goes in the body of the request.
    required: true
    in: body
    schema:
      $ref: '#/definitions/xdmExtensionRequest'
  descriptorPayload:
    name: descriptorPayload
    description: The descriptor payload JSON that goes in the body of the request.
    required: true
    in: body
    schema:
      $ref: '#/definitions/xdmDescriptor'
  subSchemaPayload:
    name: payload
    description: The payload JSON that goes in the body of the request.
    required: true
    in: body
    schema:
      $ref: '#/definitions/subSchema'
  expansion:
    name: expansion
    description: Set to 'xdm' to expand XDM schema.
    in: query
    type: string
  xdmVersion:
    name: xdmVersion
    description: The version of the base XDM schemas that are being requested.
    in: query
    type: string
    required: false
  descriptorType:
    name: descriptorType
    description: Type of the descriptor objects (relationship, schema, identity) being requested.
    in: query
    type: string
    required: false
  sourceSchema:
    name: sourceSchema
    description: sourceSchema defined in the descriptor objects that are being requested.
    in: query
    type: string
    required: false
  destSchema:
    name: destSchema
    description: destSchema defined in the descriptor objects that are being requested.
    in: query
    type: string
    required: false
  tagNamespace:
    name: tagNamespace
    description: Tag namespace or key as defined within a tag inside dataSet, batch or transform.
    in: path
    type: string
    required: true
  objectType:
    name: objectType
    description: objectType or the Catalog collection name in which tags should be searched.
    in: query
    type: string
    enum:
      - dataset
      - connection
      - batch
    required: true
definitions:
