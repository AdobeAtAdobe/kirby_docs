swagger: '2.0'
info:
  version: '1.0'
  title: Catalog Service API
  description: >-
    - Service description:
        - Catalog is the system of record for data location and lineage within Adobe Experience Platform. Catalog Service does not contain the actual files or directories that contain the data. Instead, it holds the metadata and description of those files and directories.

        - Catalog acts as a metadata store or "catalog" where you can find information about your data within Experience Platform.

        - You can use Catalog to answer the following questions: Where is my data located? At what stage of processing is this data? What systems or processes have acted on my data? What errors occurred during processing? If successful, how much data was processed?


    - Related documentation:
        - [Catalog Service documentation](http://www.adobe.com/go/data-catalog-service-overview-en)

    - Visualize API calls with Postman (a free, third-party software):
        - [Catalog Service API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Catalog%20Service%20API.postman_collection.json)
        - [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
        - [Steps for importing environments and collections in Postman](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/)

    - API paths:
        - PLATFORM Gateway URL: https://<span>platform.adobe.io/
        - Base path for this API: /data/foundation/catalog
        - Example of a complete path: https://<span>platform.adobe.io/data/foundation/catalog/batches

    - Required headers:
        - All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
        - All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
        - All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

basePath: /data/foundation/catalog
host: platform.adobe.io
tags:
  - name: Batches
    description: Batches allow users to understand which operations and applications have been performed on objects tracked by the system.
  - name: Batched requests
    description: Batched requests allow users to supply an array of objects in the request payload, representing what would normally be individual requests.
  - name: Datasets
    description: Datasets are the building blocks for data transformation and tracking in Catalog Service.
  - name: Tags
    description: Tags are used to attach information to an object and then be used later to retrieve the object.

produces:
  - application/json
paths:
  /batches:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Batches
      operationId: getBatches
      summary: Retrieve a list of batches.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/tags'
        - name: status
          description: >-
            - Filter by the current (mutable) status of the batch.
          required: false
          type: string
          in: query
        - name: recordCount
          description: >-
            - Filter by the total number of data records (rows or documents) processed in the batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: failedRecordCount
          description: >-
            - Filter by the number of records that could **not** be processed in the batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: >-
            - The number of bytes processed in the batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: started
          description: >-
            - Filter by the Unix timestamp (in milliseconds) when the batch processing action was started. Subtracting "started" from "completed" will yield the total processing time.
          required: false
          type: integer
          format: int64
          in: query
        - name: completed
          description: >-
            - Filter by the Unix timestamp (in milliseconds) when the batch processing action was completed. Subtracting "started" from "completed" will yield the total processing time.
          required: false
          type: integer
          format: int64
          in: query
        - name: startAfter
          description: >-
            - Filter for batches with availability dates that start after the specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: startBefore
          description: >-
            - Filter for batches with availability dates that start before the specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endAfter
          description: >-
            - Filter for batches with availability dates that end after the specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endBefore
          description: >-
            - Filter for batches with availability dates that end before the specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: batch
          description: >-
            - Filter on the ID of the batch.
          required: false
          type: string
          in: query
        - name: externalId
          description: >-
            - Filter on the ID of the external object.
          required: false
          type: string
          in: query
        - name: connection
          description: >-
            - Filter on the ID of the connection.
          required: false
          type: string
          in: query
        - name: connector
          description: >-
            - Filter on the ID of the connector.
          required: false
          type: string
          in: query
        - name: dataSet
          description: >-
            - Filter on the ID of the dataset.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: A list of the batch responses is returned.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/batchResponse'
          examples:
            application/json:
              {
                  "5911f88ae2f4bf657c5a8cb5": {
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "created": 1494349962314,
                      "createdClient": "MCDPCatalogServiceStage",
                      "createdUser": "MCDPCatalogServiceStage@AdobeID",
                      "updatedUser": "MCDPCatalogServiceStage@AdobeID",
                      "updated": 1494349963467,
                      "externalId": "/adobe/bulkingest/5af9ee67e4045c1b4945c209",
                      "status": "success",
                      "errors": [
                          {
                              "code": "err-1494349963436"
                          }
                      ],
                      "version": "1.0.3",
                      "availableDates": {
                          "startDate": 1337,
                          "endDate": 4000
                      },
                      "relatedObjects": [
                          {
                              "type": "batch",
                              "id": "foo_batch"
                          },
                          {
                              "type": "connection",
                              "id": "foo_connection"
                          },
                          {
                              "type": "connector",
                              "id": "foo_connector"
                          },
                          {
                              "type": "dataSet",
                              "id": "foo_dataSet"
                          },
                          {
                              "type": "dataSetView",
                              "id": "foo_dataSetView"
                          },
                          {
                              "type": "dataSetFile",
                              "id": "foo_dataSetFile"
                          },
                          {
                              "type": "expressionBlock",
                              "id": "foo_expressionBlock"
                          },
                          {
                              "type": "service",
                              "id": "foo_service"
                          },
                          {
                              "type": "serviceDefinition",
                              "id": "foo_serviceDefinition"
                          }
                      ],
                      "metrics": {
                          "foo": 1337
                      },
                      "tags": {
                          "foo_bar": [
                              "stuff"
                          ],
                          "bar_foo": [
                              "woo",
                              "baz"
                          ],
                          "foo/bar/foo-bar": [
                              "weehaw",
                              "wee:haw"
                          ]
                      },
                      "inputFormat": {
                        "format": "parquet",
                        "delimiter": ".",
                        "quote": "`",
                        "escape": "\\",
                        "nullMarker": "",
                        "header": "true",
                        "charset": "UTF-8"
                      }
                  }
              }
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '404':
          description: The batch responses were not found.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
    post:
      tags:
        - Batches
      summary: Create a new batch.
      operationId: postBatch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch
          description: >-
            - The batch that will be created.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created batch.
        '400':
          description: The batch is invalid.
        '403':
          description: Access is forbidden.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
  '/batches/uniques/{FIELD}':
    parameters:
      - name: FIELD
        description: >-
          - Field to get unique values for. **Note:** This endpoint will be deprecated soon.
        required: true
        type: string
        in: path
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Batches
      operationId: getUniqueBatchValues
      summary: Retrieve the unique values stored in a field specified by ID.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/createdAfter'
        - $ref: '#/parameters/createdBefore'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - $ref: '#/parameters/version'
        - name: status
          description: >-
            - Filter by the current (mutable) status of the batch.
          required: false
          type: string
          in: query
        - name: recordCount
          description: >-
            - Filter by the total number of data records (rows or documents) processed in the batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: failedRecordCount
          description: >-
            - Filter by the number of records that could **not** be processed in the batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: size
          description: >-
            - The number of bytes processed in the batch.
          required: false
          type: integer
          format: int64
          in: query
        - name: started
          description: >-
            - Filter by the Unix timestamp (in milliseconds) when the batch processing action was started. Subtracting "started" from "completed" will yield the total processing time.
          required: false
          type: integer
          format: int64
          in: query
        - name: completed
          description: >-
            - Filter by the Unix timestamp (in milliseconds) when the batch processing action was completed. Subtracting "started" from "completed" will yield the total processing time.
          required: false
          type: integer
          format: int64
          in: query
        - name: startAfter
          description: >-
            - Filter for batches with availability dates that start after the specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: startBefore
          description: >-
            - Filter for batches with availability dates that start before the specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endAfter
          description: >-
            - Filter for batches with availability dates that end after the specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: endBefore
          description: >-
            - Filter for batches with availability dates that end before the specified timestamp.
          required: false
          type: integer
          format: int64
          in: query
        - name: batch
          description: >-
            - Filter on the ID of the batch.
          required: false
          type: string
          in: query
        - name: externalId
          description: >-
            - Filter on the ID of the external object.
          required: false
          type: string
          in: query
        - name: connection
          description: >-
            - Filter on the ID of the connection.
          required: false
          type: string
          in: query
        - name: connector
          description: >-
            - Filter on the ID of the connector.
          required: false
          type: string
          in: query
        - name: dataSet
          description: >-
            - Filter on the ID of the dataset.
          required: false
          type: string
          in: query
        - name: transform
          description: >-
            - Filter on the ID of the transform.
          required: false
          type: string
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: A list of unique values for a batch.
          schema:
            type: array
            items:
              type: string
          examples:
            application/json:
              ["5911f88ae2f4bf657c5a8cb5", "5911f88ae2f4bf657c5a8cb4", "5911f88ae2f4bf657c5a8cb3"]
        '400':
          description: A bad request has been submitted.
        '403':
          description: Access is forbidden.
        '404':
          description: The batch is not found.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
  '/batches/{BATCH_ID}':
    parameters:
      - name: BATCH_ID
        description: >-
          - The ID of the batch you are performing the operation on.
        in: path
        required: true
        type: string
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Batches
      operationId: getBatchById
      summary: Look up a batch by ID.
      produces:
        - application/json
      parameters:
        - name: aggregate
          description: >-
            - If true, then return the aggregated status, metrics, and errors in the root level status, metrics, and errors (default is false).
          required: false
          type: boolean
          in: query
      responses:
        '200':
          description: The batch object for the specified batch ID is returned.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/batchResponse'
          examples:
            application/json:
              {
                  "5911f88ae2f4bf657c5a8cb5": {
                      "imsOrg": "{IMS_ORG}",
                      "created": 1494349962314,
                      "createdClient": "MCDPCatalogServiceStage",
                      "createdUser": "{USER_ID}",
                      "updatedUser": "{USER_ID}",
                      "updated": 1494349963467,
                      "externalId": "/adobe/bulkingest/5af9ee67e4045c1b4945c209",
                      "status": "success",
                      "errors": [
                          {
                              "code": "err-1494349963436"
                          }
                      ],
                      "version": "1.0.3",
                      "availableDates": {
                          "startDate": 1337,
                          "endDate": 4000
                      },
                      "relatedObjects": [
                          {
                              "type": "batch",
                              "id": "foo_batch"
                          },
                          {
                              "type": "connection",
                              "id": "foo_connection"
                          },
                          {
                              "type": "connector",
                              "id": "foo_connector"
                          },
                          {
                              "type": "dataSet",
                              "id": "foo_dataSet"
                          },
                          {
                              "type": "dataSetView",
                              "id": "foo_dataSetView"
                          },
                          {
                              "type": "dataSetFile",
                              "id": "foo_dataSetFile"
                          },
                          {
                              "type": "expressionBlock",
                              "id": "foo_expressionBlock"
                          },
                          {
                              "type": "service",
                              "id": "foo_service"
                          },
                          {
                              "type": "serviceDefinition",
                              "id": "foo_serviceDefinition"
                          }
                      ],
                      "metrics": {
                          "foo": 1337
                      },
                      "tags": {
                          "foo_bar": [
                              "stuff"
                          ],
                          "bar_foo": [
                              "woo",
                              "baz"
                          ],
                          "foo/bar/foo-bar": [
                              "weehaw",
                              "wee:haw"
                          ]
                      },
                      "inputFormat": {
                        "format": "parquet",
                        "delimiter": ".",
                        "quote": "`",
                        "escape": "\\",
                        "nullMarker": "",
                        "header": "true",
                        "charset": "UTF-8"
                      }
                  }
              }
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '404':
          description: The specified batch was not found.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
    post:
      tags:
        - Batches
      summary: Create a new batch with a specified ID.
      operationId: postBatchById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch
          description: >-
            - Batch to be created.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource.
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
    put:
      tags:
        - Batches
      summary: Update a batch by ID.
      operationId: updateBatchById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: batch
          description: >-
            - The batch information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '404':
          description: Not found
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
    patch:
      tags:
        - Batches
      summary: Update one or more attributes of a batch specified by ID.
      operationId: patchBatchById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch
          description: >-
            - The batch that is to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/batchPatchRequest'
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/json-header'
        - $ref: '#/parameters/if-none-match'
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '404':
          description: The specified batch was not found.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
    delete:
      tags:
        - Batches
      summary: Delete a batch by ID.
      deprecated: true
      operationId: deleteBatchById
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/batches/batchId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '404':
          description: The batch was not found.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
  /dataSets:
    parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Retrieve a list of datasets.
      operationId: getDatasets
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/created'
        - $ref: '#/parameters/updated'
        - $ref: '#/parameters/createdClient'
        - $ref: '#/parameters/createdUser'
        - $ref: '#/parameters/updatedUser'
        - name: connectorId
          description: >-
            - Filter on the ID of the connector.
          required: false
          type: string
          in: query
        - name: connectionId
          description: >-
            - Filter on the ID of the connection.
          required: false
          type: string
          in: query
        - name: name
          description: >-
            - Filter on the name of the dataset.
          required: false
          type: string
          in: query
        - name: description
          description: >-
            - Filter on the description of the dataset.
          required: false
          type: string
          in: query
        - name: enableErrorDiagnostics
          description: >-
            - A field that provides the ability to opt in to generating diagnostic files for the errors while ingesting data.
          required: false
          type: boolean
          in: query
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
        - $ref: '#/parameters/tags'
      responses:
        '200':
          description: A list of datasets is returned.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "4F3BB22C5631222A7F000101@AdobeOrg",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "acp_foundation_catalog@AdobeID",
                      "updatedUser": "acp_foundation_catalog@AdobeID",
                      "namespace": "ACP",
                      "state": "DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '404':
          description: The datasets are not found.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
    post:
      tags:
        - Datasets
      summary: Create a new dataset.
      operationId: postDataset
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dataSet
          description: >-
            - Information about the new dataset you are creating.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: The dataset has been successfully created.
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
  '/dataSets/{DATASET_ID}':
    parameters:
      - name: DATASET_ID
        description: >-
          - The ID of the dataset.
        required: true
        type: string
        in: path
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Retrieve a dataset by ID.
      operationId: getDatasetById
      produces:
        - application/json
      parameters:
        - name: properties
          description: >-
            - A comma separated allowlist of top-level object properties to be returned in the response. Used to cut down the number of properties and amount of data returned in the response bodies.
          in: query
          type: string
          required: false
      responses:
        '200':
          description: The dataset for the specified dataset ID is returned.
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/dataSetResponse'
          examples:
            application/json:
              {
                  "5ab540d0864cf0267448ead4": {
                      "version": "1.0.0",
                      "imsOrg": "{IMS_ORG}",
                      "connectorId": "s3-push",
                      "connectionId": "5ab5249e864cf0267448ead1",
                      "name": "connections functional tests - 1521827915638",
                      "enableErrorDiagnostics": true,
                      "created": 1521828048923,
                      "updated": 1521828208046,
                      "createdClient": "acp_foundation_catalog",
                      "createdUser": "{USER_ID}",
                      "updatedUser": "{USER_ID}",
                      "namespace": "ACP",
                      "state":"DRAFT",
                      "tags": {
                          "foo": [
                              "bar",
                              "foos",
                              "ball"
                          ],
                          "adobe/touchpoint/appliedTransformations": [
                              "CLUSTERED:FOO"
                          ]
                      },
                      "viewId": "5ab54170864cf0267448ead5",
                      "fields": [],
                      "basePath": "s3://bar/ball/baz",
                      "fileDescription": {
                          "persisted": false
                      },
                      "files": "@/dataSets/5ab540d0864cf0267448ead4/views/5ab54170864cf0267448ead5/files",
                      "observableSchema": {}
                  }
              }
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '404':
          description: The dataset was not found.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
    put:
      tags:
        - Datasets
      summary: Update a dataset by ID.
      operationId: putDatasetById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: dataSet
          description: Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
    patch:
      tags:
        - Datasets
      summary: Update one or more attributes of a dataset specified by ID.
      operationId: patch_data_set_by_id
      consumes:
        - application/json
        - application/json-patch+json
      parameters:
        - $ref: '#/parameters/if-match'
        - $ref: '#/parameters/if-none-match'
        - name: dataSet
          description: >-
            - Data set field(s) to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/dataSetRequest'
        - $ref: '#/parameters/json-header'
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '404':
          description: Not found
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
    delete:
      tags:
        - Datasets
      summary: Delete a dataset by ID.
      operationId: deleteDatasetById
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Array[ @/dataSets/dataSetId ]'
          schema:
            type: array
            items:
              type: string
        '400':
          description: A bad request.
        '404':
          description: Not found.
        '403':
          description: Access is forbidden.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
  '/dataSets/{id}/credentials':
    parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/x-user-token'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Datasets
      summary: Retrieve the credentials of a dataset specified by ID.
      operationId: get_credentials_by_data_set_id
      produces:
        - application/json
      parameters:
        - name: batchId
          description: >-
            - If wishing to write, the batchId used during writing. Required for building a stage path.
          required: false
          in: query
          type: string
      responses:
        '200':
          description: Credential object given dataSet.
          schema:
            $ref: '#/definitions/dataSetCredentials'
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
  '/':
    get:
      tags:
        - Batched requests
      summary: Retrieve a list of resource links for the Catalog Service.
      operationId: getBatchRequest
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/orderBy'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/property'
        - $ref: '#/parameters/properties'
      responses:
        '200':
          description: serviceResources
          schema:
            $ref: '#/definitions/serviceResources'
        '404':
          description: Not found
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
    post:
      tags:
        - Batched requests
      summary: Create a new batch request.
      operationId: postBatchRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: resources
          description: >-
            The relative path of the resource.
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/resourceItem'
        - $ref: '#/parameters/json-header'
      responses:
        '201':
          description: 'Array[ @/resource/resourceId ]'
          schema:
            type: array
            items:
              type: string
          headers:
            Location:
              type: string
              description: The URI of the newly created resource
        '400':
          description: A bad request.
        '403':
          description: Access is forbidden.
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
  '/tags/{tagNamespace}':
    parameters:
      - $ref: '#/parameters/tagNamespace'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/accept-encoding'
    get:
      tags:
        - Tags
      summary: Retrieve a list of aggregated values for all tags within an IMS Organization, specified by namespace.
      operationId: getTags
      produces:
        - application/json
      responses:
        '200':
          description: Returns aggregated tagValues for given namespace.
          schema:
            $ref: '#/definitions/tagsResponse'
          examples:
            application/json:
              {
                "objectType": {
                  "datasets": ["@/DataSet/5b20017aa492bbd30425e21b",
                               "@/DataSet/5b20451bf4c5e1f6fad006f9",
                               "@/DataSet/5b20451cf4c5e1f6fad006fb"]
                },
                "adobe/pqs/databases": ["baz", "bat", "foo", "bar"]
              }
        '400':
          description: A bad request.
        '404':
          description: not found
        '500':
          description: An internal server error has ocurred.
        default:
          description: An unexpected error has ocurred.
parameters:
  x-sandbox-name:
    name: x-sandbox-name
    description: >-
      - The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://adobe.com/go/sandbox-overview-en) for more information.
    required: true
    type: string
    in: header
  schemaRef:
      name: id
      description: >-
        - The schema in URI (https://ns.adobe.com/xdm/context/profile, https://ns.adobe.com/customer/imsOrg/extensionNS/objectName) or meta:altId (_xdm.context.profile, _customer.extensionNS.objectName) or original XDM ID format (context/profile, _customer/extensionNS/objectName).
      required: false
      in: query
      type: string
  properties:
    name: properties
    description: >-
        - A comma separated allowlist of top-level object properties to be returned in the response. Used to cut down the number of properties and amount of data returned in the response bodies.
    in: query
    type: string
    required: false
  orderBy:
    name: orderBy
    description: >-
      - Sort parameter and direction for sorting the response. Ex.
      orderBy=asc:created,updated. This was previously called sort.
    in: query
    type: string
    required: false
  limit:
    name: limit
    description: >-
      - Limit response to a specified positive number of objects.
    in: query
    type: integer
    required: false
    x-example: 10
  start:
    name: start
    description: >-
      - Returns results from a specific offset of objects. This was previously called offset.
    in: query
    type: integer
    required: false
    x-example: 3
  property:
    name: property
    description: >-
      - Regex used to filter objects in the response.
    in: query
    type: string
    required: false
    x-example: name~^test
  tags:
    name: tags
    description: >-
      - Filter response by the specified tags.
    in: query
    type: string
    required: false
    x-example: ns:tag,ns2:tag2
  version:
    name: version
    description: >-
      - Filter by Semantic version of the account. Updated when the object is modified.
    required: false
    type: string
    in: query
  created:
    name: created
    description: >-
      - Filter by the Unix timestamp (in milliseconds) when this object was persisted.
    required: false
    type: integer
    format: int64
    in: query
  createdAfter:
    name: createdAfter
    description: >-
      - Exclusively filter records created after this timestamp.
    required: false
    in: query
    type: integer
    format: int64
  createdBefore:
    name: createdBefore
    description: >-
      - Exclusively filter records created before this timestamp.
    required: false
    in: query
    type: integer
    format: int64
  updated:
    name: updated
    description: >-
      - Filter by the Unix timestamp (in milliseconds) for the time of last modification.
    required: false
    type: integer
    format: int64
    in: query
  createdClient:
    name: createdClient
    description: >-
      - Filter by the ID of the IMS client that created this object.
    required: false
    type: string
    in: query
  createdUser:
    name: createdUser
    description: >-
      - Filter by the ID of the user who created this object.
    required: false
    type: string
    in: query
  updatedUser:
    name: updatedUser
    description: >-
      - Filter by the ID of the user who changed this object.
    required: false
    type: string
    in: query
  authorization:
    name: Authorization
    description: >-
      - The access token which can be copied from your Experience Platform integration, prefixed with "Bearer". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: >-
      - The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  x-api-key:
    name: x-api-key
    description: >-
      - The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  json-header:
    name: Content-Type
    description: 'application/json'
    required: true
    type: string
    in: header
  x-user-token:
    name: x-user-token
    description: >-
      - For calls which are proxied by catalog, the access token for the user on whose behalf this call is made.
    required: false
    type: string
    in: header
  accept-encoding:
    name: accept-encoding
    description: >-
      - Used to signal the intent to consume compressed response bodies. Supported encodings: gzip.
    required: false
    type: string
    in: header
  id:
    name: id
    description: >-
      - Object ID
    required: true
    in: path
    type: string
  if-match:
    name: if-match
    description: >-
      - Set to verify the valid versions of document to be modified by matching the updated date.
    in: header
    type: string
  if-none-match:
    name: if-none-match
    description: >-
      - Set to verify the invalid versions of document to be modified by matching the updated date.
    in: header
    type: string
  objectName:
    name: objectName
    description: >-
      - Name of custom object.
    required: true
    in: path
    type: string
  expansion:
    name: expansion
    description: >-
      - Set to 'xdm' to expand XDM schema.
    in: query
    type: string
  tagNamespace:
    name: tagNamespace
    description: >-
      - Tag namespace or key as defined within a tag inside dataSet, batch or transform.
    in: path
    type: string
    required: true
  objectType:
    name: objectType
    description: >-
      - objectType or the Catalog collection name in which tags should be searched.
    in: query
    type: string
    enum:
      - dataset
      - connection
      - batch
    required: true
definitions:
  batchRequest:
    type: object
    properties:
      externalId:
        type: string
        description: >-
          - An externally generated identifier for this batch.
        readOnly: true
      started:
        type: integer
        format: int64
        description: >-
          - The Unix timestamp (in milliseconds) when the Batch processing action was started.
      completed:
        type: integer
        format: int64
        description: >-
          - The Unix timestamp (in milliseconds) when the Batch processing action was completed. Completed - Started should yield the total processing time.
      replay:
        type: object
        description: >-
          - Indicates that a batch was replayed or restated.
        properties:
          predecessors:
            type: array
            items:
              type: string
              description: >-
                - One or more Batch Identifiers that this replay is replacing.
          reason:
            type: string
            description: >-
              - An optional commentary for the requester to describe the purpose for the replay (e.g. deletion of privacy data, fix, compaction, etc..).
      status:
        type: string
        description: >-
          - The current (mutable) status of this Batch.
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
          - aborted
          - abandoned
          - inactive
          - failed
          - loading
          - loaded
          - staged
          - active
          - staging
          - deleted
      recordCount:
        type: integer
        format: int64
        description: >-
          - The total number of data records (rows/documents) processed in this Batch.
      failedRecordCount:
        type: integer
        format: int64
        description: >-
          - The number of records that could not be processed in this Batch.
      errors:
        type: array
        description: ''
        items:
          $ref: '#/definitions/errors'
      size:
        type: integer
        format: int64
        description: >-
          - Number of bytes processed in this Batch.
      availableDates:
        type: object
        description: >-
          - Describes what date range of data is available in the Batch. Null if dates aren't relevant for data related to this Batch.
        properties:
          startDate:
            type: integer
            format: int64
            description: >-
              - The Unix timestamp (in seconds) for the oldest data available in this Batch.
          endDate:
            type: integer
            format: int64
            description: >-
              - The Unix timestamp (in seconds) for the most recent data available in this Batch.
      relatedObjects:
        type: array
        description: >-
          - List of associated objects for this Batch, such as datasets, connections, files, and more.
        items:
          $ref: '#/definitions/relatedObjects'
      metrics:
        type: object
        description: >-
          - Contains metrics related to this Batch.  Metric names are determined by the producer of the object since each Batch may want to record metrics that are relevant to the process
        additionalProperties: true
      tags:
        type: object
        description: >-
          - Tags are values associated with a particular object, these are
          generally used by external systems for marking an object in a way that it understands.  Normally tags are not used for internal Catalog business logic
        additionalProperties:
          type: array
          items:
            type: string
      inputFormat:
        $ref: '#/definitions/inputFormat'
    required:
      - status
  batchPatchRequest:
    type: object
    properties:
      externalId:
        type: string
        description: >-
          - An externally generated identifier for this batch.
        readOnly: true
      started:
        type: integer
        format: int64
        description: >-
          - The Unix timestamp (in milliseconds) when the Batch processing action was started.
      completed:
        type: integer
        format: int64
        description: >-
          - The Unix timestamp (in milliseconds) when the Batch processing action was completed. Completed - Started should yield the total processing time.
      replay:
        type: object
        description: >-
          - Indicates that a batch was replayed or restated.
        properties:
          predecessors:
            type: array
            items:
              type: string
              description: >-
                - One or more Batch Identifiers that this replay is replacing.
          reason:
            type: string
            description: >-
              - An optional commentary for the requester to describe the purpose for the replay (e.g. deletion of privacy data, fix, compaction, etc..).
      status:
        type: string
        description: >-
          - The current (mutable) status of this Batch.
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
          - aborted
          - abandoned
          - inactive
          - failed
          - loading
          - loaded
          - staged
          - active
          - staging
          - deleted
      recordCount:
        type: integer
        format: int64
        description: >-
          - The total number of data records (rows/documents) processed in this Batch.
      failedRecordCount:
        type: integer
        format: int64
        description: >-
          - The number of records that could not be processed in this Batch.
      errors:
        type: array
        description: ''
        items:
          $ref: '#/definitions/errors'
      size:
        type: integer
        format: int64
        description: >-
          - Number of bytes processed in this Batch.
      availableDates:
        type: object
        description: >-
          - Describes what date range of data is available in the Batch. Null if dates aren't relevant for data related to this Batch.
        properties:
          startDate:
            type: integer
            format: int64
            description: >-
              - The Unix timestamp (in seconds) for the oldest data available in this Batch.
          endDate:
            type: integer
            format: int64
            description: >-
              - The Unix timestamp (in seconds) for the most recent data available in this Batch.
      relatedObjects:
        type: array
        description: >-
          - List of associated objects for this Batch, such as datasets, connections, files, and more.
        items:
          $ref: '#/definitions/relatedObjects'
      metrics:
        type: object
        description: >-
          - Contains metrics related to this Batch.  Metric names are determined by the producer of the object since each Batch may want to record metrics that are relevant to the process
        additionalProperties: true
      tags:
        type: object
        description: >-
          - Tags are values associated with a particular object, these are generally used by external systems for marking an object in a way that it understands.  Normally tags are not used for internal Catalog business logic
        additionalProperties:
          type: array
          items:
            type: string
      inputFormat:
        $ref: '#/definitions/inputFormat'
  inputFormat:
    type: object
    description: >-
      - Metadata describing the INGEST format of the data being loaded (e.g. Parquet, CSV, JSON).
    properties:
      format:
        description: >-
          - The file format for data being submitted in the Batch.
        enum:
          - "csv"
          - "parquet"
          - "json"
      isMultiLineJson:
        description: >-
          - If the format is JSON and this is true then the JSON records are separated by a newline.
        type: boolean
      delimiter:
        description: >-
          - Character used to separate fields.
        type: string
      quote:
        description: >-
          - Character used to quote fields that contains spaces, tabs, and/or delimiter characters.
        type: string
      escape:
        description: >-
          - Character used to escape other meta-characters."
        type: string
      nullMarker:
        description: >-
          - Character/string used to indicate a null value. Any value matching this string will be set as nulls in Data Lake.
        type: string
      header:
        description: >-
          - True if input files are expected to have a header row.
        type: string
      charset:
        description: >-
          - The character encoding of the input files.
        enum:
          - "US-ASCII"
          - "UTF-8"
          - "ISO-8859-1"
  format:
    type: string
    description: >-
      - The file format for all dataSetFiles associated with this view. Required for CSV upload workflows, but optional in all other cases.
    enum:
      - ''
      - csv
      - text
      - parquet
      - json
      - sequencefile
  batchResponse:
    type: object
    properties:
      imsOrg:
        type: string
        description: >-
          - The owning IMS organization identifier.
      created:
        type: integer
        format: int64
        description: >-
          - The Unix timestamp (in milliseconds) when this Batch was persisted.
        readOnly: true
      createdClient:
        type: string
        description: >-
          - The ID of the IMS client that created this Batch.
        readOnly: true
      createdUser:
        type: string
        description: >-
          - The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: >-
          - The ID of the user who changed this object.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          - The Unix timestamp (in milliseconds) of last modification.
        readOnly: true
      externalId:
        type: string
        description: >-
          - An externally generated identifier for this batch.
        readOnly: true
      started:
        type: integer
        format: int64
        description: >-
          - The Unix timestamp (in milliseconds) when the Batch processing action was started.
      completed:
        type: integer
        format: int64
        description: >-
          - The Unix timestamp (in milliseconds) when the Batch processing action was completed. Completed - Started should yield the total processing time.
      replay:
        type: object
        description: >-
          - Indicates that a batch was replayed or restated.
        properties:
          predecessors:
            type: array
            items:
              type: string
              description: >-
                - One or more Batch Identifiers that this replay is replacing.
          predecessorsByExternalId:
            type: array
            items:
              type: string
              description: >-
                - One or more external identifiers that this replay is replacing.
          predecessorListingType:
            type: string
            description: >-
              - Whether the list of predecessors represent only immediate predecessors, or both immediate and indirect predecessors. The predecessor type is set to immediate by default.
            enum:
              - ALL
              - IMMEDIATE
          reason:
            type: string
            description: >-
              - An optional commentary for the requester to describe the purpose for the replay (e.g. deletion of privacy data, fix, compaction, etc..).
      status:
        type: string
        description: The current (mutable) status of this Batch.
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
          - aborted
          - abandoned
          - inactive
          - failed
          - loading
          - loaded
          - staged
          - active
          - staging
          - deleted
      failedBatchLocation:
        type: string
        description: >-
          - When a batch status is failed, the URI at which to retrieve the batch
      recordCount:
        type: integer
        format: int64
        description: >-
          - The total number of data records (rows/documents) processed in this Batch.
      failedRecordCount:
        type: integer
        format: int64
        description: >-
          - The number of records that could not be processed in this Batch.
      errors:
        type: array
        description: ''
        items:
          $ref: '#/definitions/errors'
      size:
        type: integer
        format: int64
        description: >-
          - Number of bytes processed in this Batch.
      version:
        type: string
        description: >-
          - The Semantic version of the Batch. Updated when the Batch is modified.
        readOnly: true
      availableDates:
        type: object
        description: >-
          - Describes what date range of data is available in the Batch. Null if dates aren't relevant for data related to this Batch.
        properties:
          startDate:
            type: integer
            format: int64
            description: >-
              - The Unix timestamp (in seconds) for the oldest data available in this Batch.
          endDate:
            type: integer
            format: int64
            description: >-
              - The Unix timestamp (in seconds) for the most recent data available in this Batch.
      relatedObjects:
        type: array
        description: >-
          - List of associated objects for this Batch, such as datasets, connections, files, and more.
        items:
          $ref: '#/definitions/relatedObjects'
      metrics:
        type: object
        description: >-
          - Contains metrics related to this Batch.  Metric names are determined by the producer of the object since each Batch may want to record metrics that are relevant to the process
        additionalProperties: true
      tags:
        type: object
        description: >-
          - Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that it understands.  Normally tags are not used for internal Catalog business logic
        additionalProperties:
          type: array
          items:
            type: string
      inputFormat:
        $ref: '#/definitions/inputFormat'
  dataSetRequest:
    type: object
    properties:
      connectorId:
        type: string
        description: >-
          - Foreign key to the Connector this DataSet originates from. Template DataSets are tied to Connectors and not Connections. This is an immutable attribute and once created, it cannot be updated through PUT or PATCH requests.
      connectionId:
        type: string
        description: >-
          - Foreign key to the Connection this DataSet originates from. This is an immutable attribute and once created, it cannot be updated through PUT or PATCH requests.
      name:
        type: string
        description: >-
          - A descriptive, human-readable name for this DataSet.
      description:
        type: string
        description: >-
          - A longer text description of the DataSet.
      namespace:
        type: string
        description: >-
          - One of the registered platform acronyms that identify the platform. This is an immutable attribute and once created, it cannot be updated through PUT or PATCH requests.
        enum:
          - AA
          - AAM
          - AEM
          - AC
          - AT
          - AMO
          - PT
          - AS
          - AMC
          - ACP
      state:
        type: string
        description: >-
          - The state related to a dataset. Must be one of the enumerated values.
        enum:
          - DRAFT
          - ACTIVE
          - DEPRECATED
      tags:
        type: object
        description: >-
          - Tags are values associated with a particular object,  these are
          generally used by external systems for marking an object in a way that it understands.  Normally tags are not used for internal Catalog business logic
        additionalProperties:
          type: array
          items:
            type: string
      statsCache:
        type: object
        description: >-
          - Cached statistics for this data set. These values cannot be submitted to Catalog.
        properties:
          failedRowCount:
            type: integer
            format: int64
            description: >-
              - Rows that failed processing.
          rowCount:
            type: integer
            format: int64
            description: >-
              - Total number of rows processed in the data set.
          startDate:
            type: integer
            format: int64
            description: >-
              - Unix timestamp indicating the start date of the data set.
          endDate:
            type: integer
            format: int64
            description: >-
              - Unix timestamp indicating the end date of the data set.
      enableErrorDiagnostics:
        type: boolean
        description: >-
          - This field provides the ability to opt in to generating diagnostic files for the errors while ingesting data.
      observableSchema:
        type: object
        description: >-
          - observableSchema stores a JSON Schema object that is a valid subset (including the null case) of the XDM model specified by `schemaRef`.
      requestStartDate:
        type: string
        description: >-
          - The oldest date and the time, when the data was last ingested
      fields:
        type: array
        description: >-
          - Ordered array of fields describing the resulting schema (output) for this view.
        items:
          $ref: '#/definitions/field'
      basePath:
        type: string
        description: >-
          - Fully qualified base path for all dataset files associated with this view. For views cached in a database (HBase or Cassandra), supply a templatized DSN.
        readOnly: true
      fileDescription:
        type: object
        description: >-
          - Metadata describing the dataset files associated with this DataSetView.
        properties:
          format:
            $ref: '#/definitions/format'
          delimiters:
            type: array
            description: >-
              - Characters used to separate fields.
            items:
              type: string
              maxLength: 1
          quotes:
            type: array
            description: ''
            items:
              type: string
          escapes:
            type: array
            description: ''
            items:
              type: string
          nullMarkers:
            type: array
            description: ''
            items:
              type: string
          header:
            type: boolean
            description: ''
          charset:
            type: string
            description: >-
              - The character encoding of the files.
            enum:
              - US-ASCII
              - UTF-8
              - ISO-8859-1
              - ''
      schema:
        type: string
        description: >-
          - This is the uri for the XDM model
      schemaMetadata:
        $ref: '#/definitions/schemaMetadata'
      schemaRef:
        $ref: '#/definitions/schemaRef'
      dataSourceId:
        type: integer
        description: >-
          - The Id of the datasource. It must be unique, along with it''s name.
  dataSetResponse:
    type: object
    properties:
      version:
        type: string
        description: >-
          - The Semantic version of the DataSet. Updated when the DataSet is modified.
        readOnly: true
      imsOrg:
        type: string
        description: >-
          - The owning IMS organization identifier.
      connectorId:
        type: string
        description: >-
          - Foreign key to the Connector this DataSet originates from. Template DataSets are tied to Connectors and not Connections.
      connectionId:
        type: string
        description: >-
          - Foreign key to the Connection this DataSet originates from.
      name:
        type: string
        description: >-
          - A descriptive, human-readable name for this DataSet.
      description:
        type: string
        description: >-
          - A longer text description of the DataSet.
      created:
        type: integer
        format: int64
        description: >-
          - The Unix timestamp (in milliseconds) when this DataSet was persisted.
        readOnly: true
      updated:
        type: integer
        format: int64
        description: >-
          - The Unix timestamp (in milliseconds) for the time of last modification.
        readOnly: true
      createdClient:
        type: string
        description: >-
          - The ID of the IMS client that created this Batch.
        readOnly: true
      createdUser:
        type: string
        description: >-
          - The ID of the user who created this object.
        readOnly: true
      updatedUser:
        type: string
        description: >-
          - The ID of the user who changed this object.
        readOnly: true
      namespace:
        type: string
        description: >-
          - One of the registered platform acronyms that identify the platform.
        enum:
          - AA
          - AAM
          - AEM
          - AC
          - AT
          - AMO
          - PT
          - AS
          - AMC
          - ACP
      state:
        type: string
        description: >-
          - The state related to a dataset. Must be one of the enumerated values.
        enum:
          - DRAFT
          - ACTIVE
          - DEPRECATED
      viewId:
        type: string
        description: >-
          - The ID for associated DataSet view.
      observableSchema:
        type: object
        description: >-
          - observableSchema stores a JSON Schema object that is a valid subset (including the null case) of the XDM model specified by `schemaRef`.
      requestStartDate:
        type: string
        description: >-
          - The oldest date and the time, when the data was last ingested.
      fields:
        type: array
        description: >-
          - Ordered array of fields describing the resulting schema (output) for this view.
        items:
          $ref: '#/definitions/field'
      basePath:
        type: string
        description: >-
          - Fully qualified base path for all dataset files associated with this view. For views cached in a database (HBase or Cassandra), supply a templatized DSN.
        readOnly: true
      fileDescription:
        type: object
        description: >-
          - Metadata describing the dataset files associated with this DataSetView.
        properties:
          format:
            $ref: '#/definitions/format'
          delimiters:
            type: array
            description: >-
              - Characters used to separate fields.
            items:
              type: string
              maxLength: 1
          quotes:
            type: array
            description: ''
            items:
              type: string
          escapes:
            type: array
            description: ''
            items:
              type: string
          nullMarkers:
            type: array
            description: ''
            items:
              type: string
          header:
            type: boolean
            description: ''
          charset:
            type: string
            description: >-
              - The character encoding of the files.
            enum:
              - US-ASCII
              - UTF-8
              - ISO-8859-1
              - ''
      schema:
        type: string
        description: >-
          - This is the uri for the XDM model
      schemaMetadata:
        $ref: '#/definitions/schemaMetadata'
      schemaRef:
        $ref: '#/definitions/schemaRef'
      files:
        type: string
        description: >-
          - Associated files for given dataset in following string format dataSets/{dataSetId}/views/{dataSetViewId}/files. By using query param 'expansion=files', this object can be requested as part of response.
      tags:
        type: object
        description: >-
          - Tags are values associated with a particular object, these are generally used by external systems for marking an object in a way that it understands.  Normally tags are not used for internal Catalog business logic
        additionalProperties:
          type: array
          items:
            type: string
      statsCache:
        type: object
        description: >-
          - Cached statistics for this data set. These values cannot be submitted to Catalog.
        properties:
          failedRowCount:
            type: integer
            format: int64
            description: >-
              - Rows that failed processing.
          rowCount:
            type: integer
            format: int64
            description: >-
              - Total number of rows processed in the data set.
          startDate:
            type: integer
            format: int64
            description: >-
              - Unix timestamp indicating the start date of the data set.
          endDate:
            type: integer
            format: int64
            description: >-
              - Unix timestamp indicating the end date of the data set.
      lastBatchId:
        type: string
        description: >-
          - ID of the last batch that modified the data set (only modified by Siphon batch ingest).
      lastBatchStatus:
        type: string
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
          - aborted
          - abandoned
          - deleted
        description: >-
          - status of the last batch that modified the data set (only modified by Siphon batch ingest).
      lastSuccessfulBatch:
        type: string
        description: >-
          - The ID of the last successful batch that has modified this data set (only modified by Siphon batch ingest).
      lastFailedBatch:
        type: string
        description: >-
          - The ID of the last failed batch that has modified this data set (only modified by Siphon batch ingest).
      dataSourceId:
        type: integer
        description: >-
          - The ID of the data source. It must be unique, along with its name.
      persistence:
        $ref: '#/definitions/persistenceResponse'
  serviceResources:
    type: object
    properties:
      connector:
        type: string
      dataSource:
        type: string
      dataSet:
        type: string
      transform:
        type: string
  resourceItem:
    type: object
    properties:
      id:
        type: string
      method:
        type: string
      headers:
        type: object
        description: 'Example: "headers": {"if-match": "1.0.6"}'
      resource:
        type: string
      body:
        type: object
  errors:
    type: object
    properties:
      code:
        type: string
        description: >-
          - An enumerated code that details the type of error encountered. This value should be understandable by the reader and writer and eventually allow for localized error message (and solution) descriptions.
      rows:
        type: array
        description: >-
          - Indicates which rows exhibit this error. Could be a single number, or a hyphen-delimited range.
        items:
          type: string
          description: >-
            - Row or range of rows this error was encountered on.
      description:
        type: string
        description: >-
          - A human-readable description of the error. This message may be transmitted to clients, but isn't meant for customer-facing UIS.
  relatedObjects:
    type: object
    properties:
      type:
        type: string
        description: >-
          - The type of object processed in this Batch.
        enum:
          - batch
          - connection
          - connector
          - dataSet
          - dataSetFile
          - dataSetView
          - transform
      id:
        type: string
        description: ''
      tag:
        type: string
        description: >-
          - The name for the relation the specified object had with this Batch operation. Examples: input, output, trigger, etc.
      status:
        type: string
        description: >-
          - The current (mutable) status of this dataset.
        enum:
          - processing
          - success
          - failure
          - queued
          - retrying
          - stalled
      errors:
        type: array
        description: ''
        items:
          $ref: '#/definitions/errors'
      metrics:
        type: object
        description: >-
          - Contains metrics related to this dataset.
        additionalProperties: true
  field:
    allOf:
      - $ref: '#/definitions/dataType'
      - type: object
        properties:
          name:
            type: string
            description: >-
              - Field name.
          title:
            type: string
            description: >-
              - Field title.
          description:
            type: string
            description: >-
              - Field description.
          meta:
            type: object
            description: >-
              - Metadata descriptions for each field.
            properties:
              isPrimary:
                type: boolean
                description: >-
                  - Marks this field as a join key into other datasets.
              delta:
                type: object
                description: >-
                  - The presence of this attribute on a field indicates that it is used in the origin system for retrieving 'deltas' of data
                properties:
                  format:
                    type: string
                    description: >-
                      - If the origin field is a date field this describes the format of that field in the style of Java SimpleDateFormat
                  timezone:
                    type: string
                    description: >-
                      - The timezone that the data uses in the origin system, uses the format from IANA in the tz_database
  schemaMetadata:
    type: object
    description: >-
      - Metadata associated with observable schema.
    properties:
      identityNamespaces:
        description: >-
          - Information about which portions of the schema and which identity namespaces they come from.
        type: array
        items:
          type: object
          properties:
            path:
              type: string
              description: >-
                - A JSON path expression pointing to the field that the namespace is associated with.
            dataSourceId:
              type: string
              description: >-
                - ID for the DataSource that models the identity space for this identifier.
      aliases:
        description: >-
          - The alternate names for fields.
        type: array
        items:
          type: object
          properties:
            namespace:
              type: string
              description: >-
                - The name for the set of aliases this applies to.
            sourcePath:
              type: string
              description: >-
                - JSON Path for the field being aliased.
            targetPath:
              type: string
              description: >-
                - JSON Path of the field's alias.
      gdpr:
        description: GDPR labels
        type: array
        items:
          type: object
          properties:
            path:
              type: string
              description: >-
                - A JSON path expression pointing to the field that contains the GDPR label.
            namespace:
              type: array
              description: >-
                - The array of GDPR labels for this column, indicating that this column may contain information subject to GDPR rules
              items:
                type: string
                description: >-
                  - GDPR labels for this column, indicating that this column may contain information subject to GDPR rules
      primaryKey:
        type: array
        description: >-
          - Marks this field as a join key into other datasets.
        items:
          type: object
          properties:
            path:
              type: string
              description: >-
                - A JSON path expression pointing to the field that is the key.
            isPrimary:
              type: boolean
              description: >-
                - Marks this field as a join key into other datasets.
      delta:
        type: array
        description: >-
          - The presence of this attribute on a field indicates that it is used in the origin system for retrieving 'deltas' of data.
        items:
          type: object
          properties:
            path:
              type: string
              description: >-
                - A JSON path expression pointing to the field that the delta is associated with.
            format:
              type: string
              description: >-
                - If the origin field is a date field this describes the format of that field in the style of Java SimpleDateFormat.
            timezone:
              type: string
              description: >-
                - The timezone that the data uses in the origin system, uses the format from IANA in the tz_database.
      contentAttributes:
        type: array
        description: >-
          - This attribute gives information the columns. For eg. if the field is hidden, temporarily empty etc.
        items:
          type: object
          properties:
            path:
              type: string
              description: >-
                - A JSON path expression pointing to the field that the delta is associated with.
            descriptor:
              type: string
              description: >-
                - This field stores the information about the specific column for eg.EMPTY_PERMANENT.
  credentials:
    type: object
    description: >-
      - Credentials.
    properties:
      clientKey:
        type: string
        description: >-
          - Credentials client key.
      clientId:
        type: string
        description: >-
          - Credentials client ID.
      tenantId:
        type: string
        description: >-
          - Credentials tenant ID.
      resourceGroupName:
        type: string
        description: >-
          - Credentials resource group.
      subscriptionId:
        type: string
        description: >-
          - Credentials subscription ID.
      name:
        type: string
        description: >-
          - Credentials name.
      adlsType:
        type: string
        description: >-
          - Credentials ADLS type.
      adlsUri:
        type: string
        description: >-
          - Credentials ADLS URI.
      hadoopUri:
        type: string
        description: >-
          - Hadoop URI.
  dataSetCredentials:
    type: object
    properties:
      dataSetId:
        type: string
        description: >-
          - The ID of the dataset these credentials are for.
      path:
        type: string
        description: >-
          - Base storage path for this dataset.
      stagePath:
        type: string
        description: >-
          - Staging base path for ingest.
      credentials:
        $ref: '#/definitions/credentials'
  dataType:
    type: object
    properties:
      type:
        type: string
        enum:
          - string
          - integer
          - long
          - double
          - boolean
          - date
          - byte
          - binary
          - float
          - number
          - array
          - object
          - map
      precision:
        description: >-
          - required for type 'number'
        type: number
      scale:
        description: >-
          - required for type 'number'
        type: number
      subType:
        $ref: '#/definitions/dataType'
      subFields:
        type: array
        items:
          $ref: '#/definitions/field'
      keyType:
        description: >-
          - required for type 'map'
        type: string
        enum:
          - string
          - integer
          - long
          - double
          - boolean
          - date
          - byte
          - binary
          - float
      valueType:
        $ref: '#/definitions/dataType'
  schemaRef:
    type: object
    description: >-
      - This is the full URL for XDM schema path. This field will be derived from schema field, if it is not present. This field will be used to annotate XDM schema version used in the dataSet or dataSetView.
    properties:
      id:
        type: string
        description: >-
          - Id contains full URL path for XDM schema.
      contentType:
        type: string
        description: >-
          - contentType represents XDM schema version and type of schema.
  persistenceResponse:
    type: object
    description: >-
      - Persistence object holds meta data of different persistence type supported by a dataset.
    properties:
      adls:
        type: object
        description: >-
          - This object represents adls storage path for dataSets.
        readOnly: true
        properties:
          location:
            type: string
            description: >-
              - Filter by the fully qualified base path for all dataset files associated with this view. For views cached in a database (HBase or Cassandra), supply a templatized DSN. Its value is same as the basePath field.
          adlsType:
            description: >-
              - ADLS generation type 1 or 2.
            readOnly: true
            enum:
              - GEN1
              - GEN2
          credentials:
            type: string
            description: >-
              - This property represents the relative URI for persistence credentials of this dataset, for e.g. @/dataSets/{id}/credentials.
      datastream:
        type: object
        description: >-
          - This object represents stream persistence type for dataSets.
        properties:
          source:
            type: string
            description: >-
              - This property represents the source of dataStream.

  tagsResponse:
    properties:
      objectType:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
          description: >-
            - Array of relative path of collections with IDs, containing given namespace
      additionalProperties:
        type: array
        items:
          type: string
        description: >-
          - Array of aggregated values for input tagNamespace