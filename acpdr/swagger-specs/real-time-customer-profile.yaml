swagger: '2.0'
info:
  version: '1.0'
  title: Real-time Customer Profile API
  description: >-
    Real-time Customer Profile enables you to drive coordinated, consistent, and relevant experiences for your customers no matter where or when they interact with your brand. Profile provides a holistic view of each individual customer that combines data from multiple channels, including online, offline, CRM, and third-party data.
    
    
    The Real-time Customer Profile API allows you to programmatically integrate Profile's various functionalities into your service, providing RESTful endpoints for merge policy configuration, segmentation, edge projections, and more.


    Related documentation:
      * [Real-time Customer Profile documentation](https://docs.adobe.com/content/help/en/experience-platform/profile/home.html)

    Visualize API calls with Postman (a free, third-party software):
      * [Real-time Customer Profile API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Real-time%20Customer%20Profile%20API.postman_collection.json)
      * [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
      * [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)

    API paths:
      * PLATFORM Gateway URL: https://<span>platform.adobe.io/
      * Base path for this API: /data/core/ups
      * Example of a complete path: https://<span>platform.adobe.io/data/core/ups/config/mergePolicies
      
    Required headers:
      * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).
      * All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://docs.adobe.com/content/help/en/experience-platform/sandbox/home.html) for more information.
      * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type`. Accepted values specific to each call are provided in the call parameters.

host: platform.adobe.io
basePath: /data/core/ups
tags:
  - name: (Alpha) Computed Attributes
    description: Computed attributes enable a field value to be automatically computed based on other values, calculations, and expressions. Computed attributes functionality is in alpha and is not available to all users. Functionality is subject to change.
  - name: Entities
    description: An entity is an Experience Data Model (XDM) object whose attributes and related time-series events have been merged from various sources to form an individual profile.
  - name: Merge policies
    description: Merge policies are the rules that Platform uses to determine how data will be prioritized and what data will be combined to create an individual customer profile.
  - name: Profile System Jobs
    description: Profile System Jobs allow you to delete profile fragments for a given dataset or batch.
  - name: Projection configurations
    description: Edge projection configurations determine what data should be projected to each edge.
  - name: Projection destinations
    description: Edge projection destinations define where to route a projection that has been created or changed.

paths:
  '/config/computedAttributes':
    get:
      tags:
        - (Alpha) Computed Attributes
      summary: Retrieve a list of computed attributes.
      description: >-
        **Warning: Computed attributes functionality is currently in alpha and is not available to all users. Functionality is subject to change.**
      operationId: listComputedAttributes
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name' 
      responses:
        '200':
          description: Returns a list of computed attributes
          schema:
            $ref: '#/definitions/listComputedAttributes'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    post:
      tags:
        - (Alpha) Computed Attributes
      summary: Create a computed attribute.
      description: >- 
        **Warning: Computed attributes functionality is currently in alpha and is not available to all users. Functionality is subject to change.**  
        
        
        In order to configure a computed attribute, you first need to identify the field that will hold the computed attribute value. This field can be created using a mixin to add a new field to an existing schema, or by selecting a field that you have already defined within a schema.


        **Note:** Computed attributes cannot be added to fields within Adobe-defined mixins, the field must be within the tenant namespace ({TENANT_ID}), meaning it must be a field that you define and add to a schema.


        In order to successfully define a computed attribute field, the schema must be enabled for Profile and appear as part of the union schema for the class upon which the schema is based. For more information, see the [tutorial for configuring and accessing computed attributes](https://docs.adobe.com/content/help/en/experience-platform/profile/api/computed-attributes.html).
      operationId: createComputedAttribute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/createComputedAttribute'
      responses:
        '200':
          description: Returns the details of the newly created computed attribute
          schema:
            $ref: '#/definitions/computedAttributeResponse'
        '400':
          description: >- 
            Bad Request. Common examples include:
              * "Function with the same name already exists for the specified schema or definedOn"
              * "Could not lookup schema of the computed attribute for the provided path"
              * "Return schema of the expression is not same as the schema of the computed attribute in the XDM schema".
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/config/computedAttributes/{ATTRIBUTE_ID}':
    get:
      tags:
        - (Alpha) Computed Attributes
      summary: Retrieve a specific computed attribute by its ID.
      description: >- 
        **Warning: Computed attributes functionality is currently in alpha and is not available to all users. Functionality is subject to change.** 
      operationId: lookupComputedAttribute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/attribute-id'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name' 
      responses:
        '200':
          description: Returns the details of the computed attribute
          schema:
            $ref: '#/definitions/computedAttributeResponse'
        '404':
          description: Computed attribute not found
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    patch:
      tags:
        - (Alpha) Computed Attributes
      summary: Update a computed attribute by its ID.
      description: >- 
        **Warning: Computed attributes functionality is currently in alpha and is not available to all users. Functionality is subject to change.** 
      operationId: updateComputedAttribute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/attribute-id'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name' 
        - $ref: '#/parameters/computedAttributeUpdate'
      responses:
        '204':
          description: Returns HTTP Status 204 (No Content) and an empty response body
        '404':
          description: Computed attribute not found
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    delete:
      tags:
        - (Alpha) Computed Attributes
      summary: Delete a computed attribute by its ID.
      description: >- 
        **Warning: Computed attributes functionality is currently in alpha and is not available to all users. Functionality is subject to change.** 
      operationId: deleteComputedAttribute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/attribute-id'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name' 
      responses:
        '200':
          description: Returns HTTP Status 200 (OK) and an empty response body
        '404':
          description: Computed attribute not found
        '422':
          description: Cannot perform delete as some other functions are dependent on this function.
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/config/mergePolicies':
    get:
      tags:
        - Merge policies
      summary: Retrieve a list of merge policies.
      description: ''
      operationId: getMany
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'      
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - name: start
          in: query
          description: Page offset - As per created time of resource
          required: false
          type: string
          x-example: 2
        - name: limit
          in: query
          description: Page Size
          required: false
          type: integer
          x-example: 10
        - name: orderBy
          in: query
          description: Model attribute which will be using for ordering
          required: false
          type: string
          x-example: value
        - name: schema.name
          in: query
          description: Schema class ID
          required: false
          type: string
          x-example: _xdm.context.profile
        - name: default
          in: query
          description: default flag
          required: false
          type: boolean
          x-example: true
      responses:
        '200':
          description: List of merge policies returned
          schema:
            $ref: '#/definitions/MergePoliciesResponse'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    post:
      tags:
        - Merge policies
      summary: Create a new merge policy.
      description: ''
      operationId: post
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'           
        - name: x-profile-instance-id
          in: header
          description: Profile Instance ID
          required: true
          type: string
          x-example: ups
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - in: body
          name: body
          description: merge policy object
          required: true
          schema:
            $ref: '#/definitions/MergePolicy'
      responses:
        '200':
          description: Merge Policy successfully created
          schema:
            $ref: '#/definitions/MergePolicy'
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/config/mergePolicies/{mergePolicyId}':
    get:
      tags:
        - Merge policies
      summary: Lookup a merge policy by ID.
      description: ''
      operationId: getById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/mergePolicyId'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
      responses:
        '200':
          description: MergePolicy successfully returned
          schema:
            $ref: '#/definitions/MergePolicy'
        '403':
          description: Forbidden
        '404':
          description: MergePolicy not found
        '503':
          description: Service Unavailable
    put:
      tags:
      - Merge policies
      summary: Update a merge policy by ID.
      description: ''
      operationId: put
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/mergePolicyId'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-profile-instance-id
          in: header
          description: Profile Instance ID
          required: true
          type: string
          x-example: ups
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - in: body
          name: body
          description: merge policy object
          required: true
          schema:
            $ref: '#/definitions/MergePolicy'
      responses:
        '200':
          description: Merge Policy successfully updated
          schema:
            $ref: '#/definitions/MergePolicy'
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    patch:
      tags:
      - Merge policies
      summary: Update one or more attributes of a merge policy specified by ID.
      description: ''
      operationId: patch
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/mergePolicyId'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - name: x-profile-instance-id
        in: header
        description: Profile Instance ID
        required: true
        type: string
        x-example: ups
      - name: x-request-id
        in: header
        description: Request Id
        required: false
        type: string
        x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
      - in: body
        name: body
        description: a list of patch operation
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/PatchOperation'
      responses:
        '200':
          description: Merge Policy successfully updated
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    delete:
      tags:
        - Merge policies
      summary: Delete a merge policy by ID.
      description: ''
      operationId: delete
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/mergePolicyId'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
      responses:
        '200':
          description: Merge Policy deleted successfully
        '403':
          description: Forbidden
        '404':
          description: MergePolicy not found
        '503':
          description: Service Unavailable
  '/access/entities':
    get:
      tags:
        - Entities
      summary: Lookup an entity by ID or namespace.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: schema.name
          in: query
          description: XED schema class name.
          type: string
          required: true
          x-example: "_xdm.context.profile"
        - name: relatedSchema.name
          in: query
          description: If `schema.name` is "_xdm.context.experienceevent", this value must specify the schema for the profile entity that the time series events are related to. For example, `relatedSchema.name=_xdm.context.profile`
          type: string
          required: false
          x-example: "_xdm.context.profile"
        - name: entityId
          in: query
          description: 'ID of the entity. For Native XID lookup, use `entityId=<XID>` and leave `entityIdNS` absent; For ID:NS lookup, use both `entityId` and `entityIdNS` fields.'
          type: string
          required: false
          x-example: "GtghAUFkdGVzdDE"
        - name: entityIdNS
          in: query
          description: 'Identity Namespace code. Used for ID:NS lookup. If this field is used, `entityId` cannot be empty.'
          type: string
          required: false
          x-example: "UPS1"
        - name: relatedEntityId
          in: query
          description: 'ID of the entity that the ExperienceEvents are associated with. Used when looking up ExperienceEvents. For Native XID lookup, use `relatedEntityId=<XID>` and leave `relatedEntityIdNS` absent; For ID:NS lookup, use both `relatedEntityId` and `relatedEntityIdNS` fields.'
          type: string
          required: false
          x-example: "GtghAUFkdGVzdDE"
        - name: relatedEntityIdNS
          in: query
          description: 'Identity Namespace code of the related entity ID of ExperienceEvent. Used when looking up ExperienceEvents. If this field is used, `entityId` cannot be empty.'
          type: string
          required: false
          x-example: "UPS1"
        - name: fields
          in: query
          description: Fields for the model object. By default, all fields will be fetched. Separated by comma.
          required: false
          type: string
          x-example: "person.name.firstName,person.name.lastName"
        - name: mergePolicyId
          in: query
          description: 'ID of the merge policy. A merge policy includes information for Identity stitching and key-value XDM object merging. If not present, the default merge policy will be used.'
          required: false
          type: string
          x-example: 'example-mergePolicy'
        - name: startTime
          in: query
          description: 'Start time of Time range filter for ExperienceEvents. Should be at millisecond granularity. Included. Default: From beginning.'
          x-example: '1539838505'
          required: false
          type: number
        - name: endTime
          in: query
          description: 'End time of Time range filter for ExperienceEvents. Should be at millisecond granularity. Excluded. Default: To the end.'
          x-example: '1539838510'
          required: false
          type: number
        - name: limit
          in: query
          description: 'Number of records to return from the result. Only for time-series objects. Default: 1000'
          x-example: 10
          required: false
          type: number
        - name: orderby
          in: query
          description: 'The sort order of retrieved ExperienceEvents by timestamp. Syntax: (+/-)timestamp. Default: +timestamp'
          x-example: '-timestamp'
          required: false
          type: string
        - name: withCA
          in: query
          description: 'Feature flag for enabling computed attributes for lookup. Default: false'
          x-example: true
          required: false
          type: boolean
      responses:
        '200':
          description: XDM object(s) successfully returned.
          schema:
            $ref: '#/definitions/GetXDMObjectResponseEntity'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/ResponseErrorContext'
        '422':
          description: Syntax is correct but Profile Access is not able to process your request.
          schema:
            $ref: '#/definitions/ResponseErrorContext'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: XDM objects not found.
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests. Please try again later.
          schema:
            type: array
            items:
              $ref: '#/definitions/TooManyRequestError'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ResponseInternalErrorContext'
    post:
      tags:
        - Entities
      summary: Lookup multiple entities by IDs or namespaces.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'        
        - in: body
          name: body
          description: XDM objects to be created. Each object should be in JSON format.
          required: true
          schema:
            $ref: '#/definitions/PostRequestBodyEntity'
      responses:
        '200':
          description: XDM objects successfully returned.
          schema:
            $ref: '#/definitions/GetXDMObjectResponseEntity'
        '207':
          description: Failed to get records for some recordIds.
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponseById'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/ResponseErrorContext'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: XDM objects not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests. Please try again later.
          schema:
            type: array
            items:
              $ref: '#/definitions/TooManyRequestError'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ResponseInternalErrorContext'
    delete:
      tags:
        - Entities
      summary: Delete an entity by ID.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: schema.name
          in: query
          description: Name of the associated XDM schema.
          required: true
          type: string
          x-example: '_xdm.context.profile'
        - name: entityId
          in: query
          description: 'ID of the entity. For Native XID, use `entityId=<XID>` and leave `entityIdNS` absent; For ID:NS, use both `entityId` and `entityIdNS` fields.'
          type: string
          required: false
          x-example: 'GtghAUFkdGVzdDE'
        - name: entityIdNS
          in: query
          description: 'Identity Namespace code. Used for ID:NS. If this field is used, `entityId` cannot be empty.'
          type: string
          required: false
          x-example: 'ECID'
        - name: mergePolicyId
          in: query
          description: 'ID of the merge policy. A merge policy includes information for Identity stitching and key-value XDM object merging. If not present, the default merge policy will be used.'
          required: false
          type: string
          x-example: '963d71a1-9875-4aea-a52b-c5c7a2504cae'
      responses:
        '202':
          description: Accepted
        '207':
          description: Failed to delete records with some IDs.
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponseById'
        '400':
          description: BadRequest
          schema:
            $ref: '#/definitions/ResponseErrorContext'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests. Please try again later.
          schema:
            type: array
            items:
              $ref: '#/definitions/TooManyRequestError'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ResponseInternalErrorContext'
  '/config/projections':
    get:
      tags:
        - Projection configurations
      summary: Retrieve a list of edge projection configurations. The latest definitions are returned.
      description: ''
      operationId: listProjectionConfigurations
      produces:
        - application/vnd.adobe.platform.projectionConfigList+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key'      
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - name: schemaName
          in: query
          description: XDM schema name
          required: false
          type: string
          x-example: Profile
        - name: name
          in: query
          description: projection name
          required: false
          type: string
          x-example: mobile_profile
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '200':
          description: The edge projection configuration is returned.
          schema:
            $ref: '#/definitions/ProjectionConfigurationList'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    post:
      tags:
        - Projection configurations
      summary: Create a new edge projection configuration.
      description: 'The API response is immediate, but the actual changes to the projections on the edges take place asynchronously. There is no guarantee that changes to the definition of the projection are reflected instantly on the edges. It is best to assume that there is a noticeable amount of time between the update of the definition of the projection and the update of the actual projection on any edge.'
      operationId: createProjectionConfiguration
      consumes:
        - application/vnd.adobe.platform.projectionConfig+json; version=1
      produces:
        - application/vnd.adobe.platform.projectionConfig+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key'  
        - name: schemaName
          in: query
          description: XDM schema name
          required: true
          type: string
          x-example: Profile
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InputProjectionConfig'
          x-examples:
            properties: 'person.gender,addresses.city,phoneNumbers.number'
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '201':
          description: Creation was successful.
          schema:
            $ref: '#/definitions/ProjectionConfig'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '409':
          description: Projection config already exists.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
  '/config/projections/{projectionid}':
    get:
      tags:
        - Projection configurations
      summary: Lookup an edge projection configuration by ID. The latest definition is returned.
      description: ''
      operationId: getProjectionConfiguration
      produces:
        - application/vnd.adobe.platform.projectionConfig+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key'
        - name: projectionid
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '200':
          description: The edge projection configuration is returned.
          schema:
            $ref: '#/definitions/ProjectionConfig'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: The edge projection configuration has not yet been created.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    put:
      tags:
        - Projection configurations
      summary: Create or update an edge projection configuration by ID. Overwrites the entire configuration.
      description: 'The API response is immediate, but the actual changes to the projections on the edges take place asynchronously. There is no guarantee that changes to the definition of the projection are reflected instantly on the edges. It is best to assume that there is a noticeable amount of time between the update of the definition of the projection and the update of the actual projection on any edge.'
      operationId: updateProjectionConfiguration
      consumes:
        - application/vnd.adobe.platform.projectionConfig+json; version=1
      produces:
        - application/vnd.adobe.platform.projectionConfig+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key'      
        - name: projectionid
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/InputProjectionConfig'          
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '200':
          description: Update was successful.
          schema:
            $ref: '#/definitions/ProjectionConfig'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: Projection config not found.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    delete:
      tags:
        - Projection configurations
      summary: Delete an edge projection configuration by ID.
      description: 'API response is immediate, but the actual changes to the projections on the edges take place asynchronously. Eventually, the result is that the profile data for the given customer will be wiped from all edges.'
      operationId: deleteProjectionConfiguration
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key'      
        - name: projectionid
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '204':
          description: The edge projection configuration is successfully deleted.
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: The edge projection configuration has not yet been created.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
  '/config/destinations':
    get:
      tags:
        - Projection destinations
      summary: Retrieve a list of edge projection destinations. The latest definitions are returned.
      operationId: listProjectionDestinations
      produces:
        - application/vnd.adobe.platform.projectionDestinationList+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key' 
        - $ref: '#/parameters/x-request-id'
      responses:
        '200':
          description: The projection destination is returned.
          schema:
            $ref: '#/definitions/ProjectionDestinationRepresentation'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: The projection destination has not yet been created.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    post:
      tags:
        - Projection destinations
      summary: Create a new edge projection destination.
      description: 'The API response is immediate, but the actual changes to the projections on the edges take place asynchronously. There is no guarantee that changes to the definition of the projection are reflected instantly on the edges. It is best to assume that there is a noticeable amount of time between the update of the definition of the projection and the update of the actual projection on any edge.'
      operationId: createProjectionDestination
      consumes:
        - application/vnd.adobe.platform.projectionDestination+json; version=1
      produces:
        - application/vnd.adobe.platform.projectionDestination+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key' 
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InputProjectionDestination'
          x-examples:
            type: EDGE          
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '201':
          description: Creation was successful.
          schema:
            $ref: '#/definitions/ProjectionDestinationRepresentation'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '409':
          description: Projection destination already exists.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
  '/config/destinations/{destinationId}':
    get:
      tags:
        - Projection destinations
      summary: Lookup an edge projection destination by ID. The latest definition is returned.
      description: ''
      operationId: getProjectionDestination
      produces:
        - application/vnd.adobe.platform.projectionDestination+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key' 
        - name: destinationId
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '200':
          description: The projection destination is returned.
          schema:
            $ref: '#/definitions/ProjectionDestinationRepresentation'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: The projection destination has not yet been created.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    put:
      tags:
        - Projection destinations
      summary: Create or update an edge projection destination by ID. Overwrites the entire configuration.
      description: 'The API response is immediate, but the actual changes to the projections on the edges take place asynchronously. There is no guarantee whatsoever that changes to the definition of the projection are reflected instantly on the edges – in fact, it''s best to assume that there is a noticeable amount of time between the update of the definition of the projection and the update of the actual projection on any edge.'
      operationId: putProjectionDestination
      consumes:
        - application/vnd.adobe.platform.projectionDestination+json; version=1
      produces:
        - application/vnd.adobe.platform.projectionDestination+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key' 
        - name: destinationId
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/InputProjectionDestination'
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '200':
          description: Update was successful.
          schema:
            $ref: '#/definitions/ProjectionDestinationRepresentation'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: Projection destination not found.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    delete:
      tags:
        - Projection destinations
      summary: Delete an edge projection destination by ID.
      description: 'API response is immediate, but the actual changes to the projections on the edges take place asynchronously. Eventually, the result is that the profile data for the given customer will be wiped from all edges.'
      operationId: deleteProjectionDestination
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key' 
        - name: destinationId
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '204':
          description: The edge projection destination is successfully deleted.
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: The edge projection destination has not yet been created.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '409':
          description: The projection destination is still referenced by a projection configuration
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
  '/system/jobs':
    get:
      tags:
        - Profile System Jobs
      summary: Retrieve a list of all delete requests (Profile System Jobs) created by your organization.
      description: ''
      operationId: listDeleteRequests
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name' 
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/limit'
        - name: page
          in: query
          description: Return a specific page of results, as per the create time of the request. For example, `page=0`
          required: false
          type: integer
        - name: sort
          in: query
          description: Sort results by a specific field in ascending (`asc`) or descending (`desc`) order. The sort parameter does not work when returning multiple pages of results. For example, `sort=batchId:asc`
          required: false
          type: string
      responses:
        '200':
          description: Returns a list of all delete requests (Profile System Jobs) defined by your organization.
          schema:
            "$ref": "#/definitions/ProfileSystemJobsResponse"
        '403':
          description: Forbidden
        '503':
          description: Service Unavailable
        '500':
          description: Internal Server Error
    post:
      tags:
        - Profile System Jobs
      summary: Create a delete request (Profile System Job)
      description: >-
        Initiating a new delete request is done through a POST request to the `/systems/jobs` endpoint, where the ID of the dataset or batch to be deleted is provided in the body of the request.
        
          In order to delete a dataset, the dataset ID must be included in the body of the POST request. This action will delete ALL data for a given dataset. Experience Platform allows you to delete datasets based on both record and time series schemas.
          
          In order to delete a batch, the batch ID must be included in the body of the POST request. Please be advised that you cannot delete batches for datasets based on record schemas. Only batches for datasets based on time series schemas may be deleted. 

          **Note:** The reason you cannot delete batches for datasets based on record schemas is because record type dataset batches overwrite previous records and therefore cannot be "undone" or deleted. The way to remove the impact of erroneous batches for datasets based on record schemas is to re-ingest the batch with the correct data and it will overwrite the incorrect records. 
          
          For more information on record and time series behavior, please review the section on XDM data behaviors in the [XDM System overview](https://docs.adobe.com/content/help/en/experience-platform/xdm/home.html).
      operationId: createDeleteRequest
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: body
          in: body
          description: >-
            A JSON object containing the ID of the dataset or batch to be deleted.
            
            **Example for batch ID:**
            
            <pre>{
              "batchId": "8d075b5a178e48389126b9289dcfd0ac"
            }</pre>
          required: true
          schema:
              "$ref": "#/definitions/XdmDataJobPostBodyWithDataSetId"
      responses:
        '200':
          description: Delete request (Profile System Job) successfully created
          schema:
            "$ref": "#/definitions/ProfileSystemJob"
        '400':
          description: Invalid delete request (Profile System Job)
        '403':
          description: Forbidden
        '422':
          description: Delete request (Profile System Job) Definition already exists.
        '503':
          description: Service Unavailable
        '500':
          description: Internal Server Error
  '/system/jobs/{ID}':
    get:
      tags:
        - Profile System Jobs
      summary: 'View a specific delete request (Profile System Job) by its ID.'
      description: ''
      operationId: viewDeleteRequest
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          description: ID of the delete request (Profile System Job) that you wish to view. For example, '3e64ad31-5e6b-4399-80ad-ccfab54254ae'.
          required: true
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: Returns the details of a specific delete request (Profile System Job).
          schema:
            $ref: '#/definitions/ProfileSystemJob'
        '403':
          description: Forbidden
        '404':
          description: Delete request (Profile System Job) not found
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    delete:
      tags:
        - Profile System Jobs
      summary: Remove a specific delete request (Profile System Job) by its ID.
      description: ''
      operationId: deleteDeleteRequest
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          description: ID of the delete request (Profile System Job) that you wish to view. For example, '3e64ad31-5e6b-4399-80ad-ccfab54254ae'.
          required: true
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: If removal is successful, returns HTTP Status 200 (OK) and an empty response body.
        '403':
          description: Forbidden
        '404':
          description: Delete request (Profile System Job) not found
        '503':
          description: Service Unavailable
definitions:
  listComputedAttributes:
    type: object
    properties:
      "_page":
        type: object
        properties:
          totalCount:
            type: integer
            example: 1
          pageSize: 
            type: integer
            example: 1
      children:
        type: array
        items:
          $ref: '#/definitions/computedAttributeResponse'
      "_links":
        type: object
        properties:
          next:
            type: object
  createComputedAttribute:
    type: object
    required:
      - name
      - path
      - expression
      - schema
    properties:
      name:
        type: string
        example: "birthdayCurrentMonth"
      path:
        type: string
        example: "_{TENANT_ID}"
      description:
        type: string
        example: "Computed attribute to capture customer birthday in the current month."
      expression:
        type: object
        description: A valid Profile Query Language (PQL) expression.
        properties:
          type:
            type: string
            example: PQL
          format:
            type: string
            example: "pql/text"
          value:
            type: string
            example: "person.birthDate.getMonth() = currentMonth()"
      schema:
        type: object
        properties:
          name:
            type: string
            example: "_xdm.context.profile"
  computedAttributeResponse:
    type: object
    properties:
      id:
        type: string
        example: "2afcf410-450e-4a39-984d-2de99ab58877"
      imsOrgId:
        type: string
        example: "{IMS_ORG}"
      sandbox:
        type: object
        properties:
          sandboxId: 
            type: string
            example: "ff0f6870-c46d-11e9-8ca3-036939a64204"
          sandboxName: 
            type: string
            example: "prod"
          type: 
            type: string
            example: "production"
          default: 
            type: boolean
            example: true
      name:
        type: string
        example: "birthdayCurrentMonth"
      path:
        type: string
        example: "_{TENANT_ID}"
      positionPath:
        type: array
        items:
          type: string
          example: ["_{TENANT_ID}"]
      description:
        type: string
        example: "Computed attribute to capture customer birthday in the current month."
      expression:
        type: object
        description: A valid Profile Query Language (PQL) expression.
        properties:
          type:
            type: string
            example: PQL
          format:
            type: string
            example: "pql/text"
          value:
            type: string
            example: "person.birthDate.getMonth() = currentMonth()"
      schema:
        type: object
        properties:
          name:
            type: string
            example: "_xdm.context.profile"
      returnSchema:
        type: object
        properties:
          "meta:xdmType":
            type: string
            example: string
      definedOn: 
        type: array
        items:
          type: object
          properties:
            "meta:resourceType": 
              type: string
              example: "unions"
            "meta:containerId":
              type: string
              example: "tenant"
            "$ref": 
              type: string
              example: "https://ns.adobe.com/xdm/context/profile__union"
      encodedDefinedOn:
        type: string
        example: "?\b?VR)JMS?R?())(????+?KL?OJ?K???H??O??+I?(?/(?O??I??/????S?8{?E:"
      dependencies: 
        type: array
        items:
          type: string
      dependents: 
        type: array
        items:
          type: string
      active: 
        type: boolean
        example: true
      type: 
        type: string
        example: "ComputedAttribute"
      createEpoch: 
        type: integer
        example: 1572555223
      updateEpoch: 
        type: integer
        example: 1572555225
  updateComputedAttribute:
    type: array
    items:
      type: object
      properties:
        op:
          type: string
          example: add
        path:
          type: string
          example: "/expression"
        value:
          type: object
          properties:
            type:
              type: string
              example: PQL
            format:
              type: string
              example: "pql/text"
            value:
              type: string
              example: "{VALID_PQL_EXPRESSION}"
  HalLink:
    type: object
    properties:
      href:
        type: string
      templated:
        type: boolean
      type:
        type: string
      deprecation:
        type: string
      profile:
        type: string
      title:
        type: string
      hreflang:
        type: string
      name:
        type: string
  ProjectionConfig:
    type: object
    required:
      - destinationId
      - selector
    properties:
      selector:
        type: string
        example: 'person.gender,addresses.city,phoneNumbers.number'
        description: 'A property selector under the extended data model that are to be replicated to the edges, i.e. the mask to apply on top of the data in Real-time Customer Profile.'
      version:
        type: integer
        format: int32
        example: 1
        description: The current version number of the projection configuration. Must be bigger than 1.
      id:
        type: string
        example: 111-222-333-444
        description: The ID of the profile projection configuration
      schemaName:
        type: string
        example: profile
        description: The xdm schema associated with the profile projection configuration
      name:
        type: string
        example: default
        description: 'The projection name, identifying a customer projection configuration within an xdm schema'
      destinationId:
        type: string
        example: 1111-2222-3333-4444
        description: The ID of the projection destination containing routing metadata for the projection destination
        default: 123-123-123-123
      mergePolicyId:
        type: "string"
        example: "90b2977c-afb0-4b93-aea3-2eea5f26131d"
        description: "The merge policy id."
        default: "90b2977c-afb0-4b93-aea3-2eea5f26131d"
      _links:
        type: object
        readOnly: true
        properties:
          destination:
            $ref: '#/definitions/HalLink'
          self:
            $ref: '#/definitions/HalLink'
      _embedded:
        type: object
        readOnly: true
        properties:
          destination:
            $ref: '#/definitions/ProjectionDestinationRepresentation'
    description: 'Projections are an edge "view" of the full profile data managed by Real-time Customer Profile. Edge projections are materialized by applying a mask on top of the complete Profile data. Each customer can manage the edge projections by maintaining a projection configuration using the Edge Projection Configuration API. There is one single projection configuration per customer. <br/>A projection configuration contains:<ul><li>A selector of properties under the extended data model that are to be replicated to the edges (the mask to apply on top of the data in Profile).</li><li>A time-to-live (TTL) value representing the default maximum time an idle profile projection is stored on the edge before being deleted. Expressed in seconds</li></ul>'
  ProjectionDestinationRepresentation:
    type: object
    discriminator: type
  ProblemDetail:
    type: object
    properties:
      status:
        type: integer
        format: int32
        example: 4xx
        description: The HTTP status code generated by the server for this occurrence of the problem.
      title:
        type: string
        example: Client error
        description: 'A short, human-readable summary of the problem type.'
      type:
        type: string
        example: 'https://mcloud.io/client-error'
        description: A URI reference (RFC3986) that identifies the problem type.
    description: 'An error object containing a problem detail, as defined by [RFC 7807 Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807). The returned content-type is the <i>application/problem+json</i> media type. When present, this response contains machine-readable details pertaining to the error. Problem details include a <i>type</i>, which is a URI.'
  InputProjectionConfig:
    type: object
    required:
      - destinationId
      - selector
    properties:
      name:
        type: string
        example: default
        description: 'The projection name, identifying a customer projection configuration within a xdm schema'
      selector:
        type: string
        example: 'person.gender,addresses.city,phoneNumbers.number'
        description: 'A property selector under the extended data model that are to be replicated to the edges, i.e. the mask to apply on top of the data in Real-time Customer Profile.'
      currentVersion:
        type: integer
        format: int32
        example: 1
        description: An integer representing the current version of the projection configuration. It is used for updates. It must be bigger than 1.
        minimum: 1
        default: 1
      destinationId:
        type: string
        example: 1111-2222-3333-4444
        description: The ID of the projection destination containing routing metadata for the projection destination.
        default: 123-123-123-123
      mergePolicyId:
        type: "string"
        example: "90b2977c-afb0-4b93-aea3-2eea5f26131d"
        description: "Id of the merge policy. Merge policy includes information of Identity stitching and key-value xdm object merging. If not present, the default merge policy will be used."
    description: 'Projections are an edge "view" of the full profile data managed by Real-time Customer Profile. Edge projections are materialized by applying a mask on top of the complete Profile data. Each customer can manage the edge projections by maintaining a projection configuration using the Edge Projection Configuration API. There is one single projection configuration per customer. <br/>A projection configuration contains:<ul><li>A selector of properties under the extended data model that are to be replicated to the edges (the mask to apply on top of the data in Profile).</li><li>A time-to-live (TTL) value representing the default maximum time an idle profile projection is stored on the edge before being deleted. Expressed in seconds</li></ul>'
  ProjectionConfigurationList:
    type: object
    properties:
      _embedded:
        type: object
        readOnly: true
        properties:
          projectionConfigs:
            type: array
            items:
              $ref: '#/definitions/ProjectionConfig'
      _links:
        type: object
        readOnly: true
        properties:
          self:
            $ref: '#/definitions/HalLink'
    description: A list of projection configurations.
  InputProjectionDestination:
    type: object
    discriminator: type
    description: A projection destination stores metadata regarding the target locations where projections get pushed by the Projection Service.
  SchemaEntity:
    type: object
    properties:
      name:
        description: XED name of the schema class.
        type: string
        example: '_xdm.context.profile'
  NotFoundError:
    type: object
    properties:
      statusCode:
        type: string
        example: '404'
  ForbiddenError:
    type: object
    properties:
      message:
        type: string
        example: 'UPS-ACC-1000004: IMS Org is not provisioned.'
      statusCode:
        type: string
        example: '403'
  TooManyRequestError:
    type: object
    properties:
      message:
        description: Error message
        type: string
        example: 'Too many requests'
      cause:
        description: Cause message
        type: string
        example: '{"Errors":["Request rate is large"]}'
      retryAfterMs:
        description: Retry in milliseconds
        type: string
        example: '500'
      statusCode:
        description: Original status code from error
        type: string
        example: '429'
  ResponseErrorContext:
    type: object
    properties:
      message:
        description: Error message
        type: string
        example: 'UPS-MRG-1000001:Identities cannot be retrieved for XID - "A0Fxh6UjQa6mAA5hhzdu6SJTu78M" for graph type "auto"'
      cause:
        description: Cause message
        type: string
        example: 'Status Code - 400 : message {"reason":"Validation error Request id: 9b4d449c-213c-4f76-8442-3d151a205fb9.","message":"Failed to convert mcid=6993527987241034661918658814749273655 to aamuuid using imsOrg=****@AdobeOrg"}'
      statusCode:
        description: Original status code from error
        type: string
        example: '422'
  ResponseInternalErrorContext:
    type: object
    properties:
      message:
        description: Error message
        type: string
        example: 'Unable to connect to server'
      cause:
        description: Cause message
        type: string
        example: 'Status Code - 500 : Connection Timeout'
      statusCode:
        description: Original status code from error
        type: string
        example: '500'
  ErrorResponseById:
    type: object
    properties:
      xid:
        type: string
      error:
        $ref: '#/definitions/ResponseErrorContext'
  PostIdentityEntityItem:
    type: object
    required: [entityId]
    properties:
      entityId:
        type: string
        description: 'ID of the entity.'
        example: "69935279872410346619186588147492736556"
      entityIdNS:
        type: object
        description: 'Identity namespace of the entity.'
        properties:
          code:
            type: string
            description: 'Identity namespace code.'
            example: "CRMID"
  GetXDMObjectResponseEntity:
    type: object
    properties:
      entityId:
        type: string
        description: 'The identifier of the XDM entity.'
        example: 'GugxAW-lI0GupgAOYSxOHl0_UX1_'
      sources:
        type: array
        items:
          type: string
          description: 'Sources of the merged XDM entity. For example: dataset ids.'
          example: "5bc7ee61cdcc8712f991f0ee"
      tags:
        type: array
        items:
          type: string
          description: 'Sources of the merged XDM entity. For example: batch ids.'
          example: "4c442203cffc4635aa4553528958d969"
      identityGraph:
        type: array
        items:
          type: string
          description: 'Related identities of the merged XDM entity.'
          example: "GugxAW-lI0GupgAOYSxOHl0_UX1_"
      entity:
        type: object
        description: Any user defined JSON as per the definition of XDM
        additionalProperties:
          type: object
      lastModifiedAt:
        type: string
        description: Last modified timestamp. In RFC-3339 format.
        example: '2018-10-18T15:59:10-08:00'
  PostRequestBodyEntity:
    type: object
    required: [schema, identities]
    properties:
      schema:
        $ref: '#/definitions/SchemaEntity'
      relatedSchema:
        description: If `schema.name` is "_xdm.context.experienceevent", `relatedSchema.name` value must specify the schema for the profile entity that the time series events are related to. For example, `_xdm.context.profile`.
        type: object
        properties:
          name:
            type: string
            example: '_xdm.context.profile'  
      fields:
        description: 'Fields for the model object. By default, all fields will be fetched. Separated by comma.'
        type: array
        items:
          type: string
          example: 'person.name.firstName'
      identities:
        type: array
        items:
          $ref: '#/definitions/PostIdentityEntityItem'
      timeFilter:
        $ref: '#/definitions/PostTimeFilterEntity'
      limit:
        type: number
        description: 'Number of records to return from the result. Only for ExperienceEvents. Default: 1000'
        example: 10
      orderby:
        type: string
        description: 'The sort order of retrieved ExperienceEvents by timestamp. Syntax: (+/-)timestamp. Default: +timestamp'
        example: "-timestamp"
      withCA:
        type: boolean
        description: 'Feature flag for enabling computed attributes for lookup. Default: false.'
        example: true
  PostTimeFilterEntity:
    type: object
    properties:
      startTime:
        description: 'Start time of Time range filter for time-series objects. Should be at millisecond granularity. Included. Default: From beginning.'
        type: number
        example: 1539838505
      endTime:
        description: 'End time of Time range filter for ExperienceEvents. Should be at millisecond granularity. Excluded. Default: To the end.'
        type: number
        example: 1539838510
  MergePoliciesResponse:
    type: object
    required:
      - _page
      - children
    properties:
      _page:
        $ref: '#/definitions/Page'
      children:
        type: array
        items:
          $ref: '#/definitions/MergePolicy'
  Page:
    type: object
    required:
      - count
    properties:
      count:
        type: number
        example: 100
        description: number of merge policies per page
      next:
        type: string
        example: K1JJRDpFaWc5QUwyZFgtMEpBQUFBQUFBQUFBPT0jUlQ6MSNUUkM6MiNGUEM6QWdFQUFBQVFBQWZBQUg0Ly9yL25PcmpmZndEZUR3QT0=
        description: page offset
  MergePolicy:
    type: object
    required:
      - schema
      - identityGraph
      - attributeMerge
    properties:
      id:
        type: string
        example: ups-default
        description: macro id
      name:
        type: string
        example: 5c48b93a53214114cf85e378
        description: merge policy name
      imsOrgId:
        type: string
        example: 1BD6382559DF0C130A49422D@AdobeOrg
        description: ims org id
      schema:
        $ref: '#/definitions/SchemaClass'
      version:
        type: integer
        example: 1
        description: merge policy version
      default:
        type: boolean
        example: false
        description: default flag
      identityGraph:
        $ref: '#/definitions/IdentityGraph'
      attributeMerge:
        $ref: '#/definitions/AttributeMerge'
      updateEpoch:
        type: integer
        example: 1234567890
        description: update timestamp
    description: 'merge policy'
  SchemaClass:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: _xdm.context.profile
        description: schema class id
    description: schema class
  IdentityGraph:
    type: object
    required:
    - type
    properties:
      type:
        type: string
        example: pdg
        description: identity graph type
        enum:
        - none
        - pdg
    description: identity graph
  AttributeMerge:
    type: object
    required:
    - type
    properties:
      type:
        type: string
        example: timestampOrdered
        description: attribute merge type
        enum:
        - timestampOrdered
        - dataSetPrecedence
      order:
        type: array
        items:
          type: string
    description: attribute merge
  PatchOperation:
    type: object
    required:
    - op
    - path
    - value
    properties:
      op:
        type: string
        example: add
        description: op
        enum:
        - add
      path:
        type: string
        example: /identityGraph.type
        description: path of the attribute need to be updated
      value:
        type: string
        example: pdg
        description: the new value used to update the specified attribute
    description: Patch operation
  ProfileSystemJobsResponse:
    type: object
    required:
      - _page
      - children
    properties:
      _page:
        $ref: '#/definitions/SystemJobsPage'
      children:
        type: array
        items:
          $ref: '#/definitions/ProfileSystemJob'
  SystemJobsPage:
    type: object
    required:
      - count
    properties:
      count:
        type: number
        example: 100
        description: number of ProfileSystemJobsDefinition per page
      next:
        type: string
        example: K1JJRDpFaWc5QUwyZFgtMEpBQUFBQUFBQUFBPT0jUlQ6MSNUUkM6MiNGUEM6QWdFQUFBQVFBQWZBQUg0Ly9yL25PcmpmZndEZUR3QT0=
        description: page offset
  XdmDataJobPostBodyWithDataSetId:
    type: object
    properties:
      dataSetId:
        type: string
        example: "5cf212ed73fbff145365d15d"
        description: dataSetId      
  ProfileSystemJob:
    type: object
    properties:
      id:
        type: string
        example: "9c2018e2-cd04-46a4-b38e-89ef7b1fcdf4"
        description: ProfileSystemJob or delete request ID
      imsOrgId:
        type: string
        example: "{IMS_ORG}"
        description: ims org id
      dataSetId:
        type: string
        example: 5cf212ed73fbff145365d15d
        description: dataset Id
      batchId:
        type: string
        example: 5cf212ed73fbff145365d15d
        description: batch Id
      jobType:
        type: string
        example: DELETE
        description: Type of Profile System Job
      status:
        type: string
        enum:
          - NEW
          - PROCESSING
          - COMPLETED
          - ERROR
        example: NEW
        description: Status of Profile System Job
      metrics:
        type: string
        example: '{\"recordsProcessed\":727109,\"timeTakenInSec\":50}'
        description: Rum time metrics of Profile System Job
      createEpoch:
        type: integer
        example: 1234567890
        description: create timestamp
      updateEpoch:
        type: integer
        example: 1234567890
        description: update timestamp
parameters:
  authorization:
    name: Authorization
    description: 'The access token which can be copied from your Experience Platform integration, prefixed with "Bearer ". 
    For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).'
    required: true
    type: string
    in: header
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: 'The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).'
    required: true
    type: string
    in: header
  x-api-key:
    name: x-api-key
    description: 'The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://docs.adobe.com/content/help/en/experience-platform/tutorials/authentication.html).'
    required: true
    type: string
    in: header
  content-type:
    name: Content-Type
    description: Type of content being sent in the body of the request. Should be 'application/json'.
    required: true
    type: string
    in: header
  createComputedAttribute:
    in: body
    name: body
    description: >-
      A JSON object containing the details of the computed attribute being created.
      
      * **name: (Required)** The name of the computed attribute field, as a string.
      
      * **path: (Required)** The path to the computed attributed field within a schema. This path is found within the 'properties' attribute of the schema, but it omits the layers of 'properties' when writing the path. It also omits the field name itself. For example, if the computed attribute path is a.b.c, the "name" is "c" and the "path" is "a.b".
        * **{TENANT_ID}:** If you are unfamiliar with your tenant ID, please refer to the steps for finding your tenant ID in the [Schema Registry developer guide](https://docs.adobe.com/content/help/en/experience-platform/xdm/api/getting-started.html#know-your-tenant-id)
      * **description:** *(Optional)* A description of the computed attribute. This is especially useful once multiple computed attributes have been defined as it will help others within your IMS Organization to determine the correct computed attribute to use.
      
      * **expression: (Required)** A valid Profile Query Language (PQL) expression. For more information on PQL and links to supported queries, please read the [PQL overview documentation](https://docs.adobe.com/content/help/en/experience-platform/segmentation/pql/overview.html).
      
      * **schema.name: (Required)** The class upon which the schema containing the computed attribute field is based. For example, if the schema was based on the XDM ExperienceEvent class, the value would be '_xdm.context.experienceevent'.
    required: true
    schema:
      $ref: '#/definitions/createComputedAttribute'
  attribute-id:
    name: ATTRIBUTE_ID
    description: The unique, read-only ID of the computed attribute that is generated by the system when the attribute is created.
    required: true
    type: string
    in: path
  computedAttributeUpdate:
    name: body
    description: >-
      Use [JSON Patch formatting](http://jsonpatch.com/) to update the computed attribute.
      
      
      The "value" must be a valid Profile Query Language (PQL) expression. For more information on PQL and links to supported queries, please read the [PQL overview documentation](https://docs.adobe.com/content/help/en/experience-platform/segmentation/pql/overview.html).
    required: true
    in: body
    schema:
      $ref: '#/definitions/updateComputedAttribute'
  x-request-id:
    name: x-request-id
    in: header
    description: Optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
    required: false
    type: string
  eventTypeId:
    name: eventTypeId
    in: path
    description: Event type ID.
    required: true
    type: string
  x-sandbox-name:
    name: x-sandbox-name
    in: header
    description: All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.
    required: true
    type: string
  x-profile-instance-id:  
    name: x-profile-instance-id
    in: header
    description: Profile instance ID.
    required: true
    type: string
    x-example: ups
  mergePolicyId:
    name: mergePolicyId
    in: path
    description: Merge policy ID.
    required: true
    type: string
    x-example: ca8fe8a8-0f38-478a-9905-fd515d1d2988
  macroId:
    name: macroId
    in: path
    description: Macro ID. For example, `ca8fe8a8-0f38-478a-9905-fd515d1d2988`
    required: true
    type: string
  start:      
    name: start
    in: query
    description: Return results from a specific page offset. For example, `start=3`
    required: false
    type: integer
  limit:  
    name: limit
    in: query
    description: Limit response to a specific number of objects. Must be a positive number. For example, `limit=10`
    required: false
    type: integer