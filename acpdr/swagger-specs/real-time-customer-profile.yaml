swagger: '2.0'
info:
  version: '1.0'
  title: Real-time Customer Profile API
  description: >-
    Real-time Customer Profile enables you to drive coordinated, consistent, and relevant experiences for your customers no matter where or when they interact with your brand. Profile provides a holistic view of each individual customer that combines data from multiple channels, including online, offline, CRM, and third-party data.
    
    
    The Real-time Customer Profile API allows you to programmatically integrate Profile's various functionalities into your service, providing RESTful endpoints for merge policy configuration, segmentation, edge projections, and more.


    Related overview documentation:
      * [Real-time Customer Profile overview](https://www.adobe.io/apis/experienceplatform/home/profile-identity-segmentation/profile-identity-segmentation-services.html#!api-specification/markdown/narrative/technical_overview/unified_profile_architectural_overview/unified_profile_architectural_overview.md)
      * [Profile Query Language (PQL)](https://www.adobe.io/apis/experienceplatform/home/profile-identity-segmentation/profile-identity-segmentation-services.html#!api-specification/markdown/narrative/technical_overview/unified_profile_architectural_overview/unified_profile_pql.md)
      
    Related tutorials:
      * [Configure Real-time Customer Profile using APIs](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/configuring_up_tutorial/configuring_up_tutorial.md)
      * [Access Real-time Customer Profile data using APIs](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/consuming_unified_profile_data/consuming_unified_profile_data.md)
      * [Work with merge policies using APIs](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/configuring_up_tutorial/configuring_merge_policies_tutorial.md)
      * [Create segments using APIs](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/creating_a_segment_tutorial/creating_a_segment_tutorial.md)
      * [Evaluate and access segment results](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/segmentation/evaluate_segment.md)
      * [Configure and access computed attributes](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/computed_attributes/computed-attributes-tutorial.md)
      * [Delete a dataset or specific batch in a dataset](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/datasets/delete-dataset.md)

    Visualize API calls with Postman (a free, third-party software):
      * [Real-time Customer Profile API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Real-time%20Customer%20Profile%20API.postman_collection.json)
      * [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
      * [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)

    API paths:
      * PLATFORM Gateway URL: https://<span>platform.adobe.io/
      * Base path for this API: /data/core/ups
      * Example of a complete path: https://<span>platform.adobe.io/data/core/ups/config/mergePolicies
      
    Required headers:
      * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/authenticate_to_acp_tutorial/authenticate_to_acp_tutorial.md).
      * All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.
      * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

host: platform.adobe.io
basePath: /data/core/ups
tags:
  - name: Computed Attributes
    description: Computed attributes enable a field value to be automatically computed based on other values, calculations, and expressions.
  - name: Entities
    description: An entity is an Experience Data Model (XDM) object whose attributes and related time-series events have been merged from various sources to form an individual profile.
  - name: Estimates
    description: Estimates provide statistical information on a segment definition, such as the projected audience size and confidence interval.
  - name: Event types
    description: Event types are context descriptors for time series events within Real-time Customer Profile.
  - name: Export jobs
    description: Export jobs are asynchronous processes that are used to persist audience segment members to datasets.
  - name: Macros
    description: "Warning: The macros endpoint is deprecated."
  - name: Merge policies
    description: Merge policies are the rules that Platform uses to determine how data will be prioritized and what data will be combined to create an individual customer profile.
  - name: Previews
    description: Previews provide paginated lists of qualifying profiles for a segment definition.
  - name: PQL conversions
    description: Convert Profile Query Language (PQL) formatting between `pql/json` and `pql/text`.
  - name: Profile System Jobs
    description: Profile System Jobs allow you to delete profile fragments for a given dataset or batch.
  - name: Projection configurations
    description: Edge projection configurations determine what data should be projected to each edge.
  - name: Projection destinations
    description: Edge projection destinations define where to route a projection that has been created or changed.
  - name: Schedules
    description: Create a recurring schedule to automatically run export jobs. A schedule can run at most once daily.
  - name: Segment definitions
    description: A segment definition includes a Profile Query Language (PQL) statement that defines which profiles will be part of an audience segment.
  - name: Segment jobs
    description: Segment jobs process previously established segment definitions to generate an audience segment.

paths:
  '/config/computedAttributes':
    get:
      tags:
        - Computed Attributes
      summary: Retrieve a list of computed attributes.
      description: ''
      operationId: listComputedAttributes
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name' 
      responses:
        '200':
          description: Returns a list of computed attributes
          schema:
            $ref: '#/definitions/listComputedAttributes'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    post:
      tags:
        - Computed Attributes
      summary: Create a computed attribute.
      description: >- 
        In order to configure a computed attribute, you first need to identify the field that will hold the computed attribute value. This field can be created using a mixin to add a new field to an existing schema, or by selecting a field that you have already defined within a schema.


        **Note:** Computed attributes cannot be added to fields within Adobe-defined mixins, the field must be within the tenant namespace ({TENANT_ID}), meaning it must be a field that you define and add to a schema.


        In order to successfully define a computed attribute field, the schema must be enabled for Profile and appear as part of the union schema for the class upon which the schema is based. For more information, see the [tutorial for configuring and accessing computed attributes](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/computed_attributes/computed-attributes-tutorial.md).
      operationId: createComputedAttribute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/createComputedAttribute'
      responses:
        '200':
          description: Returns the details of the newly created computed attribute
          schema:
            $ref: '#/definitions/computedAttributeResponse'
        '400':
          description: >- 
            Bad Request. Common examples include:
              * "Function with the same name already exists for the specified schema or definedOn"
              * "Could not lookup schema of the computed attribute for the provided path"
              * "Return schema of the expression is not same as the schema of the computed attribute in the XDM schema".
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/config/computedAttributes/{ATTRIBUTE_ID}':
    get:
      tags:
        - Computed Attributes
      summary: Retrieve a specific computed attribute by its ID.
      description: ''
      operationId: lookupComputedAttribute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/attribute-id'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name' 
      responses:
        '200':
          description: Returns the details of the computed attribute
          schema:
            $ref: '#/definitions/computedAttributeResponse'
        '404':
          description: Computed attribute not found
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    patch:
      tags:
        - Computed Attributes
      summary: Update a computed attribute by its ID.
      description: ''
      operationId: updateComputedAttribute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/attribute-id'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name' 
        - $ref: '#/parameters/computedAttributeUpdate'
      responses:
        '204':
          description: Returns HTTP Status 204 (No Content) and an empty response body
        '404':
          description: Computed attribute not found
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    delete:
      tags:
        - Computed Attributes
      summary: Delete a computed attribute by its ID.
      description: ''
      operationId: deleteComputedAttribute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/attribute-id'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name' 
      responses:
        '200':
          description: Returns HTTP Status 200 (OK) and an empty response body
        '404':
          description: Computed attribute not found
        '422':
          description: Cannot perform delete as some other functions are dependent on this function.
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/config/mergePolicies':
    get:
      tags:
        - Merge policies
      summary: Retrieve a list of merge policies.
      description: ''
      operationId: getMany
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'      
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - name: start
          in: query
          description: Page offset - As per created time of resource
          required: false
          type: string
          x-example: 2
        - name: limit
          in: query
          description: Page Size
          required: false
          type: integer
          x-example: 10
        - name: orderBy
          in: query
          description: Model attribute which will be using for ordering
          required: false
          type: string
          x-example: value
        - name: schema.name
          in: query
          description: Schema class ID
          required: false
          type: string
          x-example: _xdm.context.profile
        - name: default
          in: query
          description: default flag
          required: false
          type: boolean
          x-example: true
      responses:
        '200':
          description: List of merge policies returned
          schema:
            $ref: '#/definitions/MergePoliciesResponse'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    post:
      tags:
        - Merge policies
      summary: Create a new merge policy.
      description: ''
      operationId: post
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'           
        - name: x-profile-instance-id
          in: header
          description: Profile Instance ID
          required: true
          type: string
          x-example: ups
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - in: body
          name: body
          description: merge policy object
          required: true
          schema:
            $ref: '#/definitions/MergePolicy'
      responses:
        '200':
          description: Merge Policy successfully created
          schema:
            $ref: '#/definitions/MergePolicy'
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/config/mergePolicies/{mergePolicyId}':
    get:
      tags:
        - Merge policies
      summary: Lookup a merge policy by ID.
      description: ''
      operationId: getById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/mergePolicyId'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
      responses:
        '200':
          description: MergePolicy successfully returned
          schema:
            $ref: '#/definitions/MergePolicy'
        '403':
          description: Forbidden
        '404':
          description: MergePolicy not found
        '503':
          description: Service Unavailable
    put:
      tags:
      - Merge policies
      summary: Update a merge policy by ID.
      description: ''
      operationId: put
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/mergePolicyId'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-profile-instance-id
          in: header
          description: Profile Instance ID
          required: true
          type: string
          x-example: ups
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - in: body
          name: body
          description: merge policy object
          required: true
          schema:
            $ref: '#/definitions/MergePolicy'
      responses:
        '200':
          description: Merge Policy successfully updated
          schema:
            $ref: '#/definitions/MergePolicy'
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    patch:
      tags:
      - Merge policies
      summary: Update one or more attributes of a merge policy specified by ID.
      description: ''
      operationId: patch
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/mergePolicyId'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - name: x-profile-instance-id
        in: header
        description: Profile Instance ID
        required: true
        type: string
        x-example: ups
      - name: x-request-id
        in: header
        description: Request Id
        required: false
        type: string
        x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
      - in: body
        name: body
        description: a list of patch operation
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/PatchOperation'
      responses:
        '200':
          description: Merge Policy successfully updated
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    delete:
      tags:
        - Merge policies
      summary: Delete a merge policy by ID.
      description: ''
      operationId: delete
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/mergePolicyId'
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
      responses:
        '200':
          description: Merge Policy deleted successfully
        '403':
          description: Forbidden
        '404':
          description: MergePolicy not found
        '503':
          description: Service Unavailable
  '/access/entities':
    get:
      tags:
        - Entities
      summary: Lookup an entity by ID or namespace.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: schema.name
          in: query
          description: XED schema class name.
          type: string
          required: true
          x-example: "_xdm.context.profile"
        - name: relatedSchema.name
          in: query
          description: XDM schema class name that the ExperienceEvent is associated with. Used when looking up ExperienceEvents.
          type: string
          required: false
          x-example: "_xdm.context.profile"
        - name: entityId
          in: query
          description: 'ID of the entity. For Native XID lookup, use `entityId=<XID>` and leave `entityIdNS` absent; For ID:NS lookup, use both `entityId` and `entityIdNS` fields.'
          type: string
          required: false
          x-example: "GtghAUFkdGVzdDE"
        - name: entityIdNS
          in: query
          description: 'Identity Namespace code. Used for ID:NS lookup. If this field is used, `entityId` cannot be empty.'
          type: string
          required: false
          x-example: "UPS1"
        - name: relatedEntityId
          in: query
          description: 'ID of the entity that the ExperienceEvents are associated with. Used when looking up ExperienceEvents. For Native XID lookup, use `relatedEntityId=<XID>` and leave `relatedEntityIdNS` absent; For ID:NS lookup, use both `relatedEntityId` and `relatedEntityIdNS` fields.'
          type: string
          required: false
          x-example: "GtghAUFkdGVzdDE"
        - name: relatedEntityIdNS
          in: query
          description: 'Identity Namespace code of the related entity ID of ExperienceEvent. Used when looking up ExperienceEvents. If this field is used, `entityId` cannot be empty.'
          type: string
          required: false
          x-example: "UPS1"
        - name: fields
          in: query
          description: Fields for the model object. By default, all fields will be fetched. Separated by comma.
          required: false
          type: string
          x-example: "person.name.firstName,person.name.lastName"
        - name: mergePolicyId
          in: query
          description: 'ID of the merge policy. A merge policy includes information for Identity stitching and key-value XDM object merging. If not present, the default merge policy will be used.'
          required: false
          type: string
          x-example: 'example-mergePolicy'
        - name: startTime
          in: query
          description: 'Start time of Time range filter for ExperienceEvents. Should be at millisecond granularity. Included. Default: From beginning.'
          x-example: '1539838505'
          required: false
          type: number
        - name: endTime
          in: query
          description: 'End time of Time range filter for ExperienceEvents. Should be at millisecond granularity. Excluded. Default: To the end.'
          x-example: '1539838510'
          required: false
          type: number
        - name: limit
          in: query
          description: 'Number of records to return from the result. Only for time-series objects. Default: 1000'
          x-example: 10
          required: false
          type: number
        - name: orderby
          in: query
          description: 'The sort order of retrieved ExperienceEvents by timestamp. Syntax: (+/-)timestamp. Default: +timestamp'
          x-example: '-timestamp'
          required: false
          type: string
      responses:
        '200':
          description: XDM object(s) successfully returned.
          schema:
            $ref: '#/definitions/GetXDMObjectResponseEntity'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/ResponseErrorContext'
        '422':
          description: Syntax is correct but Profile Access is not able to process your request.
          schema:
            $ref: '#/definitions/ResponseErrorContext'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: XDM objects not found.
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests. Please try again later.
          schema:
            type: array
            items:
              $ref: '#/definitions/TooManyRequestError'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ResponseInternalErrorContext'
    post:
      tags:
        - Entities
      summary: Lookup multiple entities by IDs or namespaces.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'        
        - in: body
          name: body
          description: XDM objects to be created. Each object should be in JSON format.
          required: true
          schema:
            $ref: '#/definitions/PostRequestBodyEntity'
      responses:
        '200':
          description: XDM objects successfully returned.
          schema:
            $ref: '#/definitions/GetXDMObjectResponseEntity'
        '207':
          description: Failed to get records for some recordIds.
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponseById'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/ResponseErrorContext'
        '403':
          description: Forbidden.
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: XDM objects not found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests. Please try again later.
          schema:
            type: array
            items:
              $ref: '#/definitions/TooManyRequestError'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ResponseInternalErrorContext'
    delete:
      tags:
        - Entities
      summary: Delete an entity by ID.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: schema.name
          in: query
          description: Name of the associated XDM schema.
          required: true
          type: string
          x-example: '_xdm.context.profile'
        - name: entityId
          in: query
          description: 'ID of the entity. For Native XID, use `entityId=<XID>` and leave `entityIdNS` absent; For ID:NS, use both `entityId` and `entityIdNS` fields.'
          type: string
          required: false
          x-example: 'GtghAUFkdGVzdDE'
        - name: entityIdNS
          in: query
          description: 'Identity Namespace code. Used for ID:NS. If this field is used, `entityId` cannot be empty.'
          type: string
          required: false
          x-example: 'ECID'
        - name: mergePolicyId
          in: query
          description: 'ID of the merge policy. A merge policy includes information for Identity stitching and key-value XDM object merging. If not present, the default merge policy will be used.'
          required: false
          type: string
          x-example: '963d71a1-9875-4aea-a52b-c5c7a2504cae'
      responses:
        '202':
          description: Accepted
        '207':
          description: Failed to delete records with some IDs.
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponseById'
        '400':
          description: BadRequest
          schema:
            $ref: '#/definitions/ResponseErrorContext'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ForbiddenError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/NotFoundError'
        '429':
          description: Too many requests. Please try again later.
          schema:
            type: array
            items:
              $ref: '#/definitions/TooManyRequestError'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ResponseInternalErrorContext'
  '/export/jobs':
    get:
      tags:
        - Export jobs
      summary: Retrieve a list of all export jobs.
      description: ''
      operationId: getScanJobsRoute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: limit
          in: query
          description: Limit the number of export jobs returned in the list.
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset the page of results returned (ordered by created time of resource)
          required: false
          type: string
        - name: status
          in: query
          description: Filter the export jobs returned by job status. Possible values are "NEW", "SUCCEEDED", and "FAILED".
          required: false
          type: string
      responses:
        '200':
          description: List of export jobs returned
          schema:
            $ref: '#/definitions/ScanJobsPageResponse'
        '403':
          description: Forbidden
        '503':
          description: Service Unavailable
    post:
      tags:
        - Export jobs
      summary: Create a new export job.
      description: ''
      operationId: postScanJobRoute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: x-profile-instance-id
          in: header
          description: Profile Instance ID
          required: false
          type: string
        - in: body
          name: body
          description: >- 
            * <strong>fields</strong> - [Optional] Column filters (comma-separated list of columns in dot notation). Limits the data fields to be included in the export to only those provided in this parameter. The same parameter is also available when creating a segment, therefore the fields in the segment may have already been filtered. Omitting this value will result in all fields being included in the exported data.
            
            * <strong>mergePolicy</strong> - [Optional] Specifies the merge policy to govern the exported data. Include this parameter when there are multiple segments being exported. Omitting this value will cause the Export Service to use the merge policy provided by the segmentId or snapshotName
                * <strong>id</strong> - The ID of the merge policy.
                * <strong>version</strong> - The specific version of the merge policy to use. Omitting this value will default to the most recent version.
            * <strong>filter</strong> - [Optional] Specifies one or more of the following filters to apply to the segment before export.
                * <strong>segments</strong> - [Optional] Specifies the segments to export. Omitting this value will result in all data from all profiles being exported. Accepts an array of segment objects, each containing the following fields:
                    * <strong>segmentId</strong> - <strong>[Required if specifying segments]</strong> Segment ID for profiles to be exported.
                    * <strong>segmentNs</strong> - [Optional] Segment namespace for the given segmentId.
                    * <strong>status</strong> - [Optional] An array of strings providing a status filter for the `segmentID`. By default, `status` will have the value `["realized", "existing"]` which represents all profiles that fall into the segment at the current time. Possible values include: `"realized"`, `"existing"`, and `"exited"`.
                * <strong>segmentQualificationTime</strong> - [Optional] Filter based on segment qualification time. The start time and/or end time can be provided.
                    * <strong>startTime</strong> - [Optional] Segment qualification start time for a segment ID for a given status. It not provided, there will be no filter on the start time for a segment ID qualification. The timestamp must be provided in [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
                    * <strong>endTime</strong> - [Optional] Segment qualification end time for a segment ID for a given status. It not provided, there will be no filter on the end time for a segment ID qualification. The timestamp must be provided in [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
                * <strong>fromIngestTimestamp</strong> - [Optional] Filters the resulting profiles to those that have been updated after the provided timestamp. Value is provided in RFC 3339 format. Supports `greater_than` operand.
                * <strong>emptyProfiles</strong> - [Optional] Boolean. Profiles can contain Profile records, ExperienceEvent records, or both. Profiles with no Profile records and only ExperienceEvent records are referred to as "emptyProfiles". To export all profiles in the Profile store, including the "emptyProfiles", set the value of "emptyProfiles" to `true`. If "emptyProfiles" is set to `false`, only profiles with Profile records in the store are exported. By default, if "emptyProfiles" attribute is not included, only profiles containing Profile records are exported.
            * <strong>additionalFields</strong> - [Optional] Additional profile fields that need to be exported.
                * <strong>eventList</strong> - Used if ExperienceEvents need to be exported with profiles.
                    * <strong>fields</strong> - Comma-separated list of ExperienceEvent fields to be included in the export. If not provided, all ExperienceEvent fields are exported.
                    * <strong>filter</strong> - Filters ExperienceEvents based on the parameters below. If not provided, all events corresponding to the resulting profiles will be exported.
                        * <strong>fromIngestTimestamp</strong> - Filters ExperienceEvents to those that have been updated after the provided timestamp. This is not the event time itself but the ingestion time for the events. Value is provided in RFC 3339 format.
            * <strong>destination</strong> - <strong>[Required]</strong> Destination information for the exported data.
                * <strong>datasetId</strong> - <strong>[Required]</strong> The ID of the dataset where data is to be exported.
                * <strong>segmentPerBatch</strong> [Optional] A Boolean value that, if not provided, defaults to false. A value of false exports all segment IDs into a single batch ID. A value of true exports one segment ID into one batch ID.
            * <strong>schema.name</strong> - <strong>[Required]</strong> The name of the schema associated with the dataset where data is to be exported.
          required: true
          schema:
            $ref: '#/definitions/ScanJobEntityRequest'
      responses:
        '200':
          description: Export job successfully created
          schema:
            $ref: '#/definitions/ScanJobResponse'
          headers:
            X-Location:
              type: string
              description: HREF to the export job
        '403':
          description: Forbidden
        '503':
          description: Service Unavailable
  '/export/jobs/{exportJobId}':
    get:
      tags:
        - Export jobs
      summary: Lookup an export job by ID.
      description: ''
      operationId: getScanJobRoute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: exportJobId
          in: path
          description: Export job ID
          required: true
          type: string
      responses:
        '200':
          description: Export job successfully Returned
          schema:
            $ref: '#/definitions/ScanJobResponse'
        '403':
          description: Forbidden
        '404':
          description: Export job not found
        '503':
          description: Service Unavailable
    delete:
      tags:
        - Export jobs
      summary: Cancel or delete an export job by ID.
      description: ''
      operationId: cancelScanJobRoute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: exportJobId
          in: path
          description: Export job ID
          required: true
          type: string
      responses:
        '200':
          description: Export job cancelled successfully
          schema:
            $ref: '#/definitions/ExportMessageResponse'
        '403':
          description: Forbidden
        '404':
          description: Export job not found
        '503':
          description: Service Unavailable
  '/segment/definitions':
    get:
      tags:
      - Segment definitions
      summary: Retrieve a list of segment definitions.
      description: ''
      operationId: getSegmentsRoute
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: Unique ID per request
          required: true
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - name: start
          in: query
          description: Page offset - As per created time of resource
          required: false
          type: integer
          format: int64
          x-example: 109103839
        - name: limit
          in: query
          description: Page size
          required: false
          type: integer
          x-example: 10
        - name: page
          in: query
          description: Page number
          required: false
          type: integer
          x-example: 0
        - name: sort
          in: query
          description: Sort parameters
          required: false
          type: string
          x-example: sort=name:asc,internalId:desc
      responses:
        '200':
          description: List of Profile segment definitions returned
          schema:
            "$ref": "#/definitions/SegmentDefinition"
        '403':
          description: Forbidden
        '503':
          description: Service unavailable
    post:
      tags:
      - Segment definitions
      summary: Create a new segment definition.
      description: ''
      operationId: postSegmentRoute
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: x-request-id
          in: header
          description: Unique ID per request
          required: true
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - $ref: '#/parameters/segment-body'
      responses:
        '200':
          description: Profile segment definition successfully posted
          schema:
            "$ref": "#/definitions/SegmentDefinition"
          headers:
            X-Location:
              type: string
              description: HRef to the Profile segment definition
        '400':
          description: Invalid profile segment
        '403':
          description: Forbidden
        '422':
          description: Profile segment definition already exists. Please do patch
            to update.
        '503':
          description: Service unavailable
  '/segment/definitions/{segmentId}':
    get:
      tags:
      - Segment definitions
      summary: Lookup a segment definition by ID.
      description: ''
      operationId: getSegmentRoute
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/segmentId'
        - name: x-request-id
          in: header
          description: Unique ID per request
          required: true
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
      responses:
        '200':
          description: Profile segment definition successfully returned
          schema:
            "$ref": "#/definitions/SegmentDefinition"
        '403':
          description: Forbidden
        '404':
          description: Profile segment definition not found
        '503':
          description: Service unavailable
    delete:
      tags:
      - Segment definitions
      summary: Delete a segment definition by ID.
      description: ''
      operationId: deleteSegmentRoute
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/segmentId'
        - name: x-request-id
          in: header
          description: Unique ID per request
          required: true
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
      responses:
        '200':
          description: Profile segment definition deleted successfully
          schema:
            "$ref": "#/definitions/MessageResponse"
        '403':
          description: Forbidden
        '503':
          description: Service unavailable
    patch:
      tags:
        - Segment definitions
      summary: Overwrite a segment definition.
      operationId: patchSegmentRoute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/segmentId'
        - $ref: '#/parameters/content-type'
        - name: x-request-id
          in: header
          description: Unique ID per request
          required: true
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - $ref: '#/parameters/segment-body'
      responses:
        '200':
          description: Profile segment definition successfully updated
          schema:
            "$ref": "#/definitions/SegmentDefinition"
          headers:
            X-Location:
              type: string
              description: HREF to the segment definition
        '400':
          description: Invalid profile segment
        '403':
          description: Forbidden
        '503':
          description: Service unavailable
  '/segment/conversion':
    post:
      tags:
        - PQL conversions
      summary: Convert PQL formatting between pql/text and pql/json.
      operationId: postSegmentConversionRoute
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: x-request-id
          in: header
          description: Unique ID per request
          required: true
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - $ref: '#/parameters/segment-body'
      responses:
        '200':
          description: Profile segment definition successfully converted
          schema:
            "$ref": "#/definitions/SegmentDefinition"
          headers:
            X-Location:
              type: string
              description: HREF to the Profile segment definition
        '400':
          description: Invalid profile segment
        '503':
          description: Service unavailable
  '/segment/jobs':
    get:
      tags:
        - Segment jobs
      summary: Retrieve a list of all segment job requests.
      description: ''
      operationId: get
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: Request ID
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - name: snapshot.name
          in: query
          description: The snapshot name
          required: false
          type: string
          x-example: inUS
        - name: start
          in: query
          description: Page Offset - As per created Time of resource
          required: false
          type: integer
          format: int64
          x-example: 2
        - name: limit
          in: query
          description: Page Size
          required: false
          type: integer
          x-example: 10
        - name: status
          in: query
          description: The job status
          required: false
          type: string
          x-example: PROCESSING
      responses:
        '200':
          description: List of segment job requests returned
          schema:
            $ref: '#/definitions/SegmentJob'
        '403':
          description: Forbidden
        '500':
          description: There was issue reading the segment job from DB
        '503':
          description: Service unavailable
    post:
      tags:
        - Segment jobs
      summary: Create a new segment job request.
      operationId: postSJRRoute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'        
        - name: x-profile-instance-id
          in: header
          description: Profile Instance ID
          required: true
          type: string
          x-example: ups
        - name: x-request-id
          in: header
          description: Request ID
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - in: body
          name: body
          description: List of segment jobs. Each should be in Json format.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SegmentJobRequest'
      responses:
        '200':
          description: Segment job request successfully posted
          schema:
            $ref: '#/definitions/SegmentJob'
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Too many segmentation jobs in processing at the moment. Please try again at a later time!
        '500':
          description: There was issue reading the segment job from DB
        '503':
          description: Service unavailable
  '/segment/jobs/{segmentJobId}':
    get:
      tags:
        - Segment jobs
      summary: Lookup a segment job request by ID.
      description: ''
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/segmentJobId'
        - name: x-request-id
          in: header
          description: Request ID
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
      responses:
        '200':
          description: Segment job request successfully returned
          schema:
            $ref: '#/definitions/SegmentJob'
        '403':
          description: Forbidden
        '404':
          description: Segment job request not found
        '503':
          description: Service unavailable
    delete:
      tags:
        - Segment jobs
      summary: Cancel or delete a segment job request by ID.
      description: ''
      operationId: cancel
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/segmentJobId'
        - name: x-request-id
          in: header
          description: Request ID
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA

      responses:
        '200':
          description: Segment job request has been marked for cancelling
          schema:
            $ref: '#/definitions/StandardResponse'
        '403':
          description: Forbidden
        '404':
          description: Segment job request not found
        '503':
          description: Service unavailable
  '/preview':
    post:
      tags:
      - "Previews"
      summary: "Create a new preview job."
      operationId: "postSessionlessPreviewRoute"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - in: "body"
          name: "body"
          description: >- 
            `predicateExpression` - The predicate expression that is to be evaluated.
            
            `predicateType` - (Default: PQL) The only value that is available to use for this is PQL for now.
            
            `predicateModel` - (Default: xdm.model.profile) The model against which this predicate is to be evaluated. Please note that 'touchpoint' is not treated as model as it can be associated with any of the models like profile.
            
            `graphType` - The graph type that you want to get the cluster from. Possible values are "none" (perform no identity stitching) and "pdg" (perform identity stitching based on your private identity graph).
          required: true
          schema:
            $ref: "#/definitions/PreviewQuerySessionlessRequest"
      responses:
        201:
          description: "Profile Preview successfully posted"
          schema:
            $ref: "#/definitions/PreviewQueryResponse"
          headers:
            X-Location:
              type: "string"
              description: "HREF to the Profile Preview"
        403:
          description: "Forbidden"
        503:
          description: "Service unavailable"
  '/preview/{previewId}':
    get:
      tags:
      - "Previews"
      summary: "Lookup the results of a preview job by ID."
      description: ""
      operationId: "getSessionlessPreviewStatusRoute"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/previewId'
        - name: "offset"
          in: "query"
          description: "Page offset"
          required: false
          type: "string"
          x-example: "offset=10200"
        - name: "limit"
          in: "query"
          description: "How many entries should be present in a page. 1000 if not specified."
          required: false
          type: "integer"
          x-example: 100
      responses:
        200:
          description: "XDM model objects of given {jobId} successfully returned."
          schema:
            $ref: "#/definitions/EndCustomerEntityPageResponse"
        403:
          description: "You are forbidden to make this request."
        404:
          description: " Preview jobId {jobId} does not exist."
        503:
          description: "Service unavailable"
    delete:
      tags:
      - "Previews"
      summary: "Cancel or delete a preview job by ID."
      operationId: "deleteSessionLessPreviewStatusRoute"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/previewId'
      responses:
        200:
          description: "Job successfully cancelled"
          schema:
            $ref: "#/definitions/MessageResponse"
        403:
          description: "You are forbidden to make this request."
        404:
          description: "Preview jobId {jobId} does not exist."
        503:
          description: "Service unavailable"
  '/estimate/{previewId}':
    get:
      tags:
      - "Estimates"
      summary: "Lookup the results of an estimate job by ID."
      operationId: "getEstimateStatusRoute"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/previewId'      
      responses:
        200:
          description: "Estimate successfully retrieved."
          schema:
            $ref: "#/definitions/EstimateResponse"
        403:
          description: "You are forbidden to make this request."
        404:
          description: "Preview ID {previewId} does not exist."
        503:
          description: "Service unavailable"
  '/config/projections':
    get:
      tags:
        - Projection configurations
      summary: Retrieve a list of edge projection configurations. The latest definitions are returned.
      description: ''
      operationId: listProjectionConfigurations
      produces:
        - application/vnd.adobe.platform.projectionConfigList+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key'      
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - name: schemaName
          in: query
          description: XDM schema name
          required: false
          type: string
          x-example: Profile
        - name: name
          in: query
          description: projection name
          required: false
          type: string
          x-example: mobile_profile
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '200':
          description: The edge projection configuration is returned.
          schema:
            $ref: '#/definitions/ProjectionConfigurationList'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    post:
      tags:
        - Projection configurations
      summary: Create a new edge projection configuration.
      description: 'The API response is immediate, but the actual changes to the projections on the edges take place asynchronously. There is no guarantee that changes to the definition of the projection are reflected instantly on the edges. It is best to assume that there is a noticeable amount of time between the update of the definition of the projection and the update of the actual projection on any edge.'
      operationId: createProjectionConfiguration
      consumes:
        - application/vnd.adobe.platform.projectionConfig+json; version=1
      produces:
        - application/vnd.adobe.platform.projectionConfig+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key'  
        - name: schemaName
          in: query
          description: XDM schema name
          required: true
          type: string
          x-example: Profile
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InputProjectionConfig'
          x-examples:
            properties: 'person.gender,addresses.city,phoneNumbers.number'
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '201':
          description: Creation was successful.
          schema:
            $ref: '#/definitions/ProjectionConfig'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '409':
          description: Projection config already exists.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
  '/config/projections/{projectionid}':
    get:
      tags:
        - Projection configurations
      summary: Lookup an edge projection configuration by ID. The latest definition is returned.
      description: ''
      operationId: getProjectionConfiguration
      produces:
        - application/vnd.adobe.platform.projectionConfig+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key'
        - name: projectionid
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '200':
          description: The edge projection configuration is returned.
          schema:
            $ref: '#/definitions/ProjectionConfig'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: The edge projection configuration has not yet been created.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    put:
      tags:
        - Projection configurations
      summary: Create or update an edge projection configuration by ID. Overwrites the entire configuration.
      description: 'The API response is immediate, but the actual changes to the projections on the edges take place asynchronously. There is no guarantee that changes to the definition of the projection are reflected instantly on the edges. It is best to assume that there is a noticeable amount of time between the update of the definition of the projection and the update of the actual projection on any edge.'
      operationId: updateProjectionConfiguration
      consumes:
        - application/vnd.adobe.platform.projectionConfig+json; version=1
      produces:
        - application/vnd.adobe.platform.projectionConfig+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key'      
        - name: projectionid
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/InputProjectionConfig'          
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '200':
          description: Update was successful.
          schema:
            $ref: '#/definitions/ProjectionConfig'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: Projection config not found.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    delete:
      tags:
        - Projection configurations
      summary: Delete an edge projection configuration by ID.
      description: 'API response is immediate, but the actual changes to the projections on the edges take place asynchronously. Eventually, the result is that the profile data for the given customer will be wiped from all edges.'
      operationId: deleteProjectionConfiguration
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key'      
        - name: projectionid
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '204':
          description: The edge projection configuration is successfully deleted.
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: The edge projection configuration has not yet been created.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
  '/config/destinations':
    get:
      tags:
        - Projection destinations
      summary: Retrieve a list of edge projection destinations. The latest definitions are returned.
      operationId: listProjectionDestinations
      produces:
        - application/vnd.adobe.platform.projectionDestinationList+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key' 
        - $ref: '#/parameters/x-request-id'
      responses:
        '200':
          description: The projection destination is returned.
          schema:
            $ref: '#/definitions/ProjectionDestinationRepresentation'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: The projection destination has not yet been created.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    post:
      tags:
        - Projection destinations
      summary: Create a new edge projection destination.
      description: 'The API response is immediate, but the actual changes to the projections on the edges take place asynchronously. There is no guarantee that changes to the definition of the projection are reflected instantly on the edges. It is best to assume that there is a noticeable amount of time between the update of the definition of the projection and the update of the actual projection on any edge.'
      operationId: createProjectionDestination
      consumes:
        - application/vnd.adobe.platform.projectionDestination+json; version=1
      produces:
        - application/vnd.adobe.platform.projectionDestination+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key' 
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InputProjectionDestination'
          x-examples:
            type: EDGE          
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '201':
          description: Creation was successful.
          schema:
            $ref: '#/definitions/ProjectionDestinationRepresentation'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '409':
          description: Projection destination already exists.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
  '/config/destinations/{destinationId}':
    get:
      tags:
        - Projection destinations
      summary: Lookup an edge projection destination by ID. The latest definition is returned.
      description: ''
      operationId: getProjectionDestination
      produces:
        - application/vnd.adobe.platform.projectionDestination+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key' 
        - name: destinationId
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '200':
          description: The projection destination is returned.
          schema:
            $ref: '#/definitions/ProjectionDestinationRepresentation'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: The projection destination has not yet been created.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    put:
      tags:
        - Projection destinations
      summary: Create or update an edge projection destination by ID. Overwrites the entire configuration.
      description: 'The API response is immediate, but the actual changes to the projections on the edges take place asynchronously. There is no guarantee whatsoever that changes to the definition of the projection are reflected instantly on the edges – in fact, it''s best to assume that there is a noticeable amount of time between the update of the definition of the projection and the update of the actual projection on any edge.'
      operationId: putProjectionDestination
      consumes:
        - application/vnd.adobe.platform.projectionDestination+json; version=1
      produces:
        - application/vnd.adobe.platform.projectionDestination+json; version=1
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key' 
        - name: destinationId
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/InputProjectionDestination'
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '200':
          description: Update was successful.
          schema:
            $ref: '#/definitions/ProjectionDestinationRepresentation'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: Projection destination not found.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    delete:
      tags:
        - Projection destinations
      summary: Delete an edge projection destination by ID.
      description: 'API response is immediate, but the actual changes to the projections on the edges take place asynchronously. Eventually, the result is that the profile data for the given customer will be wiped from all edges.'
      operationId: deleteProjectionDestination
      parameters:
        - $ref: '#/parameters/authorization'        
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-api-key' 
        - name: destinationId
          in: path
          required: true
          type: string
          pattern: '[0-9a-zA-Z\-]+'
        - name: x-gw-ims-authorization
          in: header
          description: Gateway IMS service token.
          required: true
          type: string
          x-example: Bearer <token>
        - name: x-user-token
          in: header
          description: User access token.
          required: false
          type: string
          x-example: Bearer <token>
        - name: x-request-id
          in: header
          description: Optional header that may be used for debugging purposes when investigating issues with a client flow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
          required: false
          type: string
          x-example: d41ee840-0a10-4393-ab55-12fa54cb6172
      responses:
        '204':
          description: The edge projection destination is successfully deleted.
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '401':
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '403':
          description: The requester is not authorized to access the resource.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '404':
          description: The edge projection destination has not yet been created.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '405':
          description: Client sent a request using a HTTP method that the server doesn't support.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '406':
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '409':
          description: The projection destination is still referenced by a projection configuration
          schema:
            $ref: '#/definitions/ProblemDetail'
        '422':
          description: Client sent a correct request that contained invalid values for one or more parameters.
          schema:
            $ref: '#/definitions/ProblemDetail'
        '500':
          description: This is an indicator of a server-side error.
        '502':
          description: This is an indicator that the back-end service did not send a valid response.
        '503':
          description: This is an indicator of a potential server overload.
        '504':
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
  '/config/eventTypes':
    get:
      tags:
        - Event types
      summary: Retrieve a list of event types.
      description: ''
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-request-id'
        - name: start
          in: query
          description: Page offset for the response. Default is 0.
          required: false
          type: integer
          x-example: 2
        - name: limit
          in: query
          description: Page size
          required: false
          type: integer
          x-example: 10
        - name: orderBy
          in: query
          description: The model attribute to be used for ordering.
          required: false
          type: string
          x-example: value
      responses:
        '200':
          description: A list of event types returned.
          schema:
            $ref: '#/definitions/EventTypesResponse'
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
    post:
      tags:
        - Event types
      summary: Create a new event type.
      description: ''
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/x-profile-instance-id'
        - $ref: '#/parameters/x-request-id'
        - $ref: '#/parameters/event-type-body'
      responses:
        '200':
          description: Event type successfully created.
          schema:
            $ref: '#/definitions/EventType'
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
  '/config/eventTypes/{eventTypeId}':
    get:
      tags:
        - Event types
      summary: Lookup an event type by ID.
      description: ''
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/eventTypeId'        
        - $ref: '#/parameters/x-request-id'
      responses:
        '200':
          description: Event type successfully returned.
          schema:
            $ref: '#/definitions/EventType'
        '403':
          description: Forbidden
        '404':
          description: Event type not found.
        '503':
          description: Service unavailable.
    put:
      tags:
      - Event types
      summary: Overwrite an event type by ID.
      description: ''
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/eventTypeId'
        - $ref: '#/parameters/x-profile-instance-id'
        - $ref: '#/parameters/x-request-id'
        - $ref: '#/parameters/event-type-body'
      responses:
        '200':
          description: Event Type successfully updated
          schema:
            $ref: '#/definitions/EventType'
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    patch:
      tags:
      - Event types
      summary: Update one or more attributes of an event type by ID.
      description: ''
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'      
        - $ref: '#/parameters/eventTypeId'
        - $ref: '#/parameters/x-profile-instance-id'
        - $ref: '#/parameters/x-request-id'
        - in: body
          name: body
          description: A list of patch operations
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EventPatchOperation'
      responses:
        '200':
          description: Event Type successfully updated
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    delete:
      tags:
        - Event types
      summary: Delete an event type by ID.
      description: ''
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/eventTypeId'
        - $ref: '#/parameters/x-request-id'
      responses:
        '200':
          description: EventType deleted successfully
        '403':
          description: Forbidden
        '404':
          description: EventType not found
        '503':
          description: Service Unavailable
  '/config/macros':
    get:
      tags:
        - Macros
      summary: Retrieve a list of all macros for your organization.
      description: "Warning: The macros endpoint is deprecated."
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: Request ID
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - name: start
          in: query
          description: Page offset (at the created time of resource)
          required: false
          type: string
          x-example: 2
        - name: limit
          in: query
          description: Maximum number of objects to display on each page.
          required: false
          type: integer
          x-example: 10
        - name: orderBy
          in: query
          description: Model attribute which will be using for ordering.
          required: false
          type: string
          x-example: value
        - name: dataSetId
          in: query
          description: Dataset ID.
          required: false
          type: string
          x-example: 5c48b93a53214114cf85e378
        - name: schemaClassId
          in: query
          description: Schema class ID.
          required: false
          type: string
          x-example: _xdm.context.profile
        - name: value
          in: query
          description: Event type value.
          required: false
          type: string
          x-example: click
      responses:
        '200':
          description: a list of macros returned
          schema:
            $ref: '#/definitions/MacrosResponse'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    post:
      tags:
        - Macros
      summary: Create a new macro.
      description: "Warning: The macros endpoint is deprecated."
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-profile-instance-id
          in: header
          description: Profile Instance ID
          required: true
          type: string
          x-example: ups
        - name: x-request-id
          in: header
          description: Request ID
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - in: body
          name: body
          description: macro object
          required: true
          schema:
            $ref: '#/definitions/Macro'
      responses:
        '200':
          description: Macro successfully created
          schema:
            $ref: '#/definitions/Macro'
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/config/macros/{macroId}':
    get:
      tags:
        - Macros
      summary: Lookup a macro by ID.
      description: "Warning: The macros endpoint is deprecated."
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/macroId'
        - name: x-request-id
          in: header
          description: Request Id
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
      responses:
        '200':
          description: Macro successfully returned
          schema:
            $ref: '#/definitions/Macro'
        '403':
          description: Forbidden
        '404':
          description: Macro not found
        '503':
          description: Service Unavailable
    put:
      tags:
        - Macros
      summary: Overwrite a macro by ID.
      description: "Warning: The macros endpoint is deprecated."
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/macroId'  
        - name: x-profile-instance-id
          in: header
          description: Profile Instance ID
          required: true
          type: string
          x-example: ups
        - name: x-request-id
          in: header
          description: Request ID
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - in: body
          name: body
          description: Macro object
          required: true
          schema:
            $ref: '#/definitions/Macro'
      responses:
        '200':
          description: Macro successfully updated
          schema:
            $ref: '#/definitions/Macro'
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    patch:
      tags:
        - Macros
      summary: Update a macro by ID.
      description: "Warning: The macros endpoint is deprecated."
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/macroId'
        - name: x-profile-instance-id
          in: header
          description: Profile Instance ID.
          required: true
          type: string
          x-example: ups
        - name: x-request-id
          in: header
          description: Request ID.
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - in: body
          name: body
          description: A list of patch operations.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PatchOperation'
      responses:
        '200':
          description: Macro successfully updated
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    delete:
      tags:
        - Macros
      summary: Delete a macro by ID.
      description: "Warning: The macros endpoint is deprecated."
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/macroId'
        - name: x-request-id
          in: header
          description: Request ID.
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
      responses:
        '200':
          description: Macro deleted successfully
        '403':
          description: Forbidden
        '404':
          description: Macro not found
        '503':
          description: Service Unavailable
  '/config/schedules':
    get:
      tags:
      - Schedules
      summary: Retrieve a list of schedules for your IMS Org
      description: ''
      operationId: getSchedules
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/x-request-id'
      - $ref: '#/parameters/start'
      - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Returns a list of schedules for IMS Org
          schema:
            $ref: '#/definitions/schedulesResponse'
        '403':
          description: Forbidden
        '500':
          description: There was issue reading the schedules from the database
        '503':
          description: Service Unavailable
    post:
      tags:
      - Schedules
      summary: Create a schedule, including specifying the time when the schedule should be triggered.
      description: 'The scheduler is updated periodically (approximately every 30 minutes), so changes to a schedule may not go into effect immediately.'
      operationId: createSchedule
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/content-type'
      - $ref: '#/parameters/x-request-id' 
      - in: body
        name: body
        description: >-
          * **name**: **(Required)** The name of schedule. Must be a string.
          * **type**: **(Required)** The job type in string format.  
            * Supported types: `batch_segmentation` and `export`.
          * **properties**: **(Required)** An object containing additional properties related to the schedule.
            * **properties.segments**: **(Required when `type` equals `batch_segmentation`)** Using `["*"]` ensures all segments are included.
          * **schedule**: **(Required)** A string containing the job schedule. Jobs can only be scheduled to run once a day, meaning you cannot schedule a job to run more than once during a 24 hour period. The example shown (`0 30 13 * * ?`) means the job is triggered every day at 13:30:00 UTC. For more information, please review the [cron expression format](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) documentation.
          
          * **state**: *(Optional)* String containing the schedule state. Available values: `active` and `inactive`. Default value is `inactive`.
        required: true
        schema:
          "$ref": "#/definitions/scheduleCreate"
      responses:
        '200':
          description: Schedule created successfully
          schema:
            $ref: '#/definitions/Schedule'
        '400':
          description: Invalid cron expression
        '403':
          description: Forbidden
        '500':
          description: There was issue reading schedules from database
        '503':
          description: Service Unavailable
  '/config/schedules/{SCHEDULE_ID}':
    get:
      tags:
      - Schedules
      summary: Lookup a schedule by its ID.
      description: 'The scheduler is updated periodically (approximately every 30 minutes), so changes to a schedule may not go into effect immediately.'
      operationId: getScheduleById
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/schedule-id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/x-request-id'
      responses:
        '200':
          description: schedule successfully returned
          schema:
            $ref: '#/definitions/Schedule'
        '403':
          description: Forbidden
        '404':
          description: schedule not found
        '503':
          description: Service Unavailable
    patch:
      tags:
      - Schedules
      summary: Update a schedule, including changing the trigger time or enabling/disabling the schedule.
      description: 'The scheduler is updated periodically (approximately every 30 minutes), so changes to a schedule may not go into effect immediately.'
      operationId: updateSchedule
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/schedule-id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/x-request-id'
      - in: body
        name: body
        description: Use JSON Patch formatting to update the schedule. Note:<span> You must use an "add" operation to add or update the given "path" with the given "value".
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/schedulePatchOperation'
      responses:
        '204':
          description: (No Content) Schedule successfully updated.
        '400':
          description: Please double check your post body
        '403':
          description: Forbidden
        '429':
          description: Request rate too large!
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    delete:
      tags:
      - Schedules
      summary: Delete a schedule by its ID.
      description: ''
      operationId: deleteSchedule
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/schedule-id'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/x-request-id'
      responses:
        '204':
          description: (No Content) Schedule deleted successfully
        '403':
          description: Forbidden
        '404':
          description: Schedule not found
        '503':
          description: Service Unavailable
  '/system/jobs':
    get:
      tags:
        - Profile System Jobs
      summary: Retrieve a list of all delete requests (Profile System Jobs) created by your organization.
      description: ''
      operationId: listDeleteRequests
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name' 
        - $ref: '#/parameters/start'
        - $ref: '#/parameters/limit'
        - name: page
          in: query
          description: Return a specific page of results, as per the create time of the request. For example, `page=0`
          required: false
          type: integer
        - name: sort
          in: query
          description: Sort results by a specific field in ascending (`asc`) or descending (`desc`) order. The sort parameter does not work when returning multiple pages of results. For example, `sort=batchId:asc`
          required: false
          type: string
      responses:
        '200':
          description: Returns a list of all delete requests (Profile System Jobs) defined by your organization.
          schema:
            "$ref": "#/definitions/ProfileSystemJobsResponse"
        '403':
          description: Forbidden
        '503':
          description: Service Unavailable
        '500':
          description: Internal Server Error
    post:
      tags:
        - Profile System Jobs
      summary: Create a delete request (Profile System Job)
      description: >-
        Initiating a new delete request is done through a POST request to the `/systems/jobs` endpoint, where the ID of the dataset or batch to be deleted is provided in the body of the request.
        
          In order to delete a dataset, the dataset ID must be included in the body of the POST request. This action will delete ALL data for a given dataset. Experience Platform allows you to delete datasets based on both record and time series schemas.
          
          In order to delete a batch, the batch ID must be included in the body of the POST request. Please be advised that you cannot delete batches for datasets based on record schemas. Only batches for datasets based on time series schemas may be deleted. 

          **Note:** The reason you cannot delete batches for datasets based on record schemas is because record type dataset batches overwrite previous records and therefore cannot be "undone" or deleted. The way to remove the impact of erroneous batches for datasets based on record schemas is to reingest the batch with the correct data and it will overwrite the incorrect records. 
          
          For more information on record and time series behavior, please review the section on XDM data behaviors in the [XDM System overview](https://www.adobe.io/apis/experienceplatform/home/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/xdm_system/xdm_system_in_experience_platform.md).
      operationId: createDeleteRequest
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: body
          in: body
          description: >-
            A JSON object containing the ID of the dataset or batch to be deleted.
            
            **Example for batch ID:**
            
            <pre>{
              "batchId": "8d075b5a178e48389126b9289dcfd0ac"
            }</pre>
          required: true
          schema:
              "$ref": "#/definitions/XdmDataJobPostBodyWithDataSetId"
      responses:
        '200':
          description: Delete request (Profile System Job) successfully created
          schema:
            "$ref": "#/definitions/ProfileSystemJob"
        '400':
          description: Invalid delete request (Profile System Job)
        '403':
          description: Forbidden
        '422':
          description: Delete request (Profile System Job) Definition already exists.
        '503':
          description: Service Unavailable
        '500':
          description: Internal Server Error
  '/system/jobs/{ID}':
    get:
      tags:
        - Profile System Jobs
      summary: 'View a specific delete request (Profile System Job) by its ID.'
      description: ''
      operationId: viewDeleteRequest
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          description: ID of the delete request (Profile System Job) that you wish to view. For example, '3e64ad31-5e6b-4399-80ad-ccfab54254ae'.
          required: true
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: Returns the details of a specific delete request (Profile System Job).
          schema:
            $ref: '#/definitions/ProfileSystemJob'
        '403':
          description: Forbidden
        '404':
          description: Delete request (Profile System Job) not found
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    delete:
      tags:
        - Profile System Jobs
      summary: Remove a specific delete request (Profile System Job) by its ID.
      description: ''
      operationId: deleteDeleteRequest
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          description: ID of the delete request (Profile System Job) that you wish to view. For example, '3e64ad31-5e6b-4399-80ad-ccfab54254ae'.
          required: true
          type: string
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
      responses:
        '200':
          description: If removal is successful, returns HTTP Status 200 (OK) and an empty response body.
        '403':
          description: Forbidden
        '404':
          description: Delete request (Profile System Job) not found
        '503':
          description: Service Unavailable
definitions:
  listComputedAttributes:
    type: object
    properties:
      "_page":
        type: object
        properties:
          totalCount:
            type: integer
            example: 1
          pageSize: 
            type: integer
            example: 1
      children:
        type: array
        items:
          $ref: '#/definitions/computedAttributeResponse'
      "_links":
        type: object
        properties:
          next:
            type: object
  createComputedAttribute:
    type: object
    required:
      - name
      - path
      - expression
      - schema
    properties:
      name:
        type: string
        example: "birthdayCurrentMonth"
      path:
        type: string
        example: "_{TENANT_ID}"
      description:
        type: string
        example: "Computed attribute to capture customer birthday in the current month."
      expression:
        type: object
        description: A valid Profile Query Language (PQL) expression.
        properties:
          type:
            type: string
            example: PQL
          format:
            type: string
            example: "pql/text"
          value:
            type: string
            example: "person.birthDate.getMonth() = currentMonth()"
      schema:
        type: object
        properties:
          name:
            type: string
            example: "_xdm.context.profile"
  computedAttributeResponse:
    type: object
    properties:
      id:
        type: string
        example: "2afcf410-450e-4a39-984d-2de99ab58877"
      imsOrgId:
        type: string
        example: "{IMS_ORG}"
      sandbox:
        type: object
        properties:
          sandboxId: 
            type: string
            example: "ff0f6870-c46d-11e9-8ca3-036939a64204"
          sandboxName: 
            type: string
            example: "prod"
          type: 
            type: string
            example: "production"
          default: 
            type: boolean
            example: true
      name:
        type: string
        example: "birthdayCurrentMonth"
      path:
        type: string
        example: "_{TENANT_ID}"
      positionPath:
        type: array
        items:
          type: string
          example: ["_{TENANT_ID}"]
      description:
        type: string
        example: "Computed attribute to capture customer birthday in the current month."
      expression:
        type: object
        description: A valid Profile Query Language (PQL) expression.
        properties:
          type:
            type: string
            example: PQL
          format:
            type: string
            example: "pql/text"
          value:
            type: string
            example: "person.birthDate.getMonth() = currentMonth()"
      schema:
        type: object
        properties:
          name:
            type: string
            example: "_xdm.context.profile"
      returnSchema:
        type: object
        properties:
          "meta:xdmType":
            type: string
            example: string
      definedOn: 
        type: array
        items:
          type: object
          properties:
            "meta:resourceType": 
              type: string
              example: "unions"
            "meta:containerId":
              type: string
              example: "tenant"
            "$ref": 
              type: string
              example: "https://ns.adobe.com/xdm/context/profile__union"
      encodedDefinedOn:
        type: string
        example: "?\b?VR)JMS?R?())(????+?KL?OJ?K???H??O??+I?(?/(?O??I??/????S?8{?E:"
      dependencies: 
        type: array
        items:
          type: string
      dependents: 
        type: array
        items:
          type: string
      active: 
        type: boolean
        example: true
      type: 
        type: string
        example: "ComputedAttribute"
      createEpoch: 
        type: integer
        example: 1572555223
      updateEpoch: 
        type: integer
        example: 1572555225
  updateComputedAttribute:
    type: array
    items:
      type: object
      properties:
        op:
          type: string
          example: add
        path:
          type: string
          example: "/expression"
        value:
          type: object
          properties:
            type:
              type: string
              example: PQL
            format:
              type: string
              example: "pql/text"
            value:
              type: string
              example: "{VALID_PQL_EXPRESSION}"
  MacrosResponse:
    type: object
    required:
      - _page
      - children
    properties:
      _page:
        $ref: '#/definitions/Page'
      children:
        type: array
        items:
          $ref: '#/definitions/Macro'
  Macro:
    type: object
    required:
      - dataSetId
      - field
      - expression
    properties:
      id:
        type: string
        example: ups-default
        description: macro id
      name:
        type: string
        example: ups-default
        description: macro name
      dataSetId:
        type: string
        example: 5c48b93a53214114cf85e378
        description: dataSet Id
      schema:
        $ref: '#/definitions/SchemaClass'
      imsOrgId:
        type: string
        example: 1BD6382559DF0C130A49422D@AdobeOrg
        description: ims org id
      field:
        type: string
        example: eventType
        description: field name
      value:
        type: string
        example: click
        description: field value when the expression is true
      default:
        type: boolean
        example: false
        description: default flag
      expression:
        $ref: '#/definitions/Expression'
      updateEpoch:
        type: integer
        example: 1234567890
        description: update timestamp
    description: 'macro'
  EventTypesResponse:
    type: object
    required:
      - _page
      - children
    properties:
      _page:
        $ref: '#/definitions/EventPage'
      children:
        type: array
        items:
          $ref: '#/definitions/EventType'
  EventPage:
    type: object
    required:
      - count
    properties:
      count:
        type: integer
        example: 100
        description: Number of objects per page
      next:
        type: integer
        example: 1
        description: The index of the next page in the paginated list. (0-based)
  EventType:
    type: object
    properties:
      id:
        type: string
        example: ups-default
        description: event type id
      imsOrgId:
        type: string
        example: 1BD6382559DF0C130A49422D@AdobeOrg
        description: IMS Org ID
      title:
        type: string
        example: Click
        description: event type title
      description:
        type: string
        example: Web page clicks
        description: event type description
      global:
        type: boolean
        example: false
        description: global flag
      updateEpoch:
        type: integer
        example: 1234567890
        description: update timestamp
    description: 'event type'
  EventPatchOperation:
    type: object
    required:
    - op
    - path
    - value
    properties:
      op:
        type: string
        example: add
        description: op
        enum:
        - add
      path:
        type: string
        example: /description
        description: path of the attribute need to be updated
      value:
        type: string
        example: Web page clicks
        description: the new value used to update the specified attribute
    description: Patch operation
  HalLink:
    type: object
    properties:
      href:
        type: string
      templated:
        type: boolean
      type:
        type: string
      deprecation:
        type: string
      profile:
        type: string
      title:
        type: string
      hreflang:
        type: string
      name:
        type: string
  ProjectionConfig:
    type: object
    required:
      - destinationId
      - selector
    properties:
      selector:
        type: string
        example: 'person.gender,addresses.city,phoneNumbers.number'
        description: 'A property selector under the extended data model that are to be replicated to the edges, i.e. the mask to apply on top of the data in Real-time Customer Profile.'
      version:
        type: integer
        format: int32
        example: 1
        description: The current version number of the projection configuration. Must be bigger than 1.
      id:
        type: string
        example: 111-222-333-444
        description: The ID of the profile projection configuration
      schemaName:
        type: string
        example: profile
        description: The xdm schema associated with the profile projection configuration
      name:
        type: string
        example: default
        description: 'The projection name, identifying a customer projection configuration within an xdm schema'
      destinationId:
        type: string
        example: 1111-2222-3333-4444
        description: The ID of the projection destination containing routing metadata for the projection destination
        default: 123-123-123-123
      _links:
        type: object
        readOnly: true
        properties:
          destination:
            $ref: '#/definitions/HalLink'
          self:
            $ref: '#/definitions/HalLink'
      _embedded:
        type: object
        readOnly: true
        properties:
          destination:
            $ref: '#/definitions/ProjectionDestinationRepresentation'
    description: 'Projections are an edge "view" of the full profile data managed by Real-time Customer Profile. Edge projections are materialized by applying a mask on top of the complete Profile data. Each customer can manage the edge projections by maintaining a projection configuration using the Edge Projection Configuration API. There is one single projection configuration per customer. <br/>A projection configuration contains:<ul><li>A selector of properties under the extended data model that are to be replicated to the edges (the mask to apply on top of the data in Profile).</li><li>A time-to-live (TTL) value representing the default maximum time an idle profile projection is stored on the edge before being deleted. Expressed in seconds</li></ul>'
  ProjectionDestinationRepresentation:
    type: object
    discriminator: type
  ProblemDetail:
    type: object
    properties:
      status:
        type: integer
        format: int32
        example: 4xx
        description: The HTTP status code generated by the server for this occurrence of the problem.
      title:
        type: string
        example: Client error
        description: 'A short, human-readable summary of the problem type.'
      type:
        type: string
        example: 'https://mcloud.io/client-error'
        description: A URI reference (RFC3986) that identifies the problem type.
    description: 'An error object containing a problem detail, as defined by <a href="https://tools.ietf.org/html/rfc7807">RFC 7807 Problem Details for HTTP APIs</a>. The returned content-type is the <i>application/problem+json</i> media type. When present, this response contains machine-readable details pertaining to the error. Problem details include a <i>type</i>, which is a URI.'
  InputProjectionConfig:
    type: object
    required:
      - destinationId
      - selector
    properties:
      name:
        type: string
        example: default
        description: 'The projection name, identifying a customer projection configuration within a xdm schema'
      selector:
        type: string
        example: 'person.gender,addresses.city,phoneNumbers.number'
        description: 'A property selector under the extended data model that are to be replicated to the edges, i.e. the mask to apply on top of the data in Real-time Customer Profile.'
      currentVersion:
        type: integer
        format: int32
        example: 1
        description: An integer representing the current version of the projection configuration. It is used for updates. It must be bigger than 1.
        minimum: 1
        default: 1
      destinationId:
        type: string
        example: 1111-2222-3333-4444
        description: The ID of the projection destination containing routing metadata for the projection destination
        default: 123-123-123-123
    description: 'Projections are an edge "view" of the full profile data managed by Real-time Customer Profile. Edge projections are materialized by applying a mask on top of the complete Profile data. Each customer can manage the edge projections by maintaining a projection configuration using the Edge Projection Configuration API. There is one single projection configuration per customer. <br/>A projection configuration contains:<ul><li>A selector of properties under the extended data model that are to be replicated to the edges (the mask to apply on top of the data in Profile).</li><li>A time-to-live (TTL) value representing the default maximum time an idle profile projection is stored on the edge before being deleted. Expressed in seconds</li></ul>'
  ProjectionConfigurationList:
    type: object
    properties:
      _embedded:
        type: object
        readOnly: true
        properties:
          projectionConfigs:
            type: array
            items:
              $ref: '#/definitions/ProjectionConfig'
      _links:
        type: object
        readOnly: true
        properties:
          self:
            $ref: '#/definitions/HalLink'
    description: A list of projection configurations.
  InputProjectionDestination:
    type: object
    discriminator: type
    description: A projection destination stores metadata regarding the target locations where projections get pushed by the Projection Service.
  EstimateResponse:
    type: "object"
    required:
    - "_links"
    - "confidenceInterval"
    - "estimatedSize"
    - "profilesMatchedSoFar"
    - "profilesReadSoFar"
    - "standardError"
    - "state"
    - "totalRows"
    properties:
      estimatedSize:
        type: "integer"
        format: "int32"
      standardError:
        type: "integer"
        format: "int32"
      confidenceInterval:
        type: "string"
      profilesReadSoFar:
        type: "integer"
        format: "int32"
      profilesMatchedSoFar:
        type: "integer"
        format: "int32"
      totalRows:
        type: "integer"
        format: "int32"
      state:
        type: "string"
      _links:
        $ref: "#/definitions/PreviewLink"
  PreviewLink:
    type: "object"
    required:
    - "preview"
    properties:
      preview:
        type: "string"
  EndCustomerEntityPageResponse:
    type: "object"
    properties:
      page:
        description: "The page information of the current response entity."
      link:
        description: "The HREF links."
      state:
        type: "string"
        description: "The execution state of the query."
      results:
        type: "array"
        description: "The list of end customer entities."
        items:
          $ref: "#/definitions/PreviewSegmentsWrapperResponse"
    description: "The end customer entity response, with current page information and next page link."
  PreviewQueryResponse:
    type: "object"
    required:
      - "previewExecutionId"
      - "previewQueryId"
      - "previewQueryStatus"
      - "state"
    properties:
      previewQueryId:
        type: "string"
        example: "4a45e853-ac91-4bb7-a426-150937b6af5c"
      state:
        type: "string"
        example: "RUNNING"
      previewQueryStatus:
        type: "string"
        example: "RUNNING"
      previewId:
        type: "string"
        example: "MDoyOjRhNDVlODUzLWFjOTEtNGJiNy1hNDI2LTE1MDkzN2I2YWY1Yzo0Mg"
      previewExecutionId:
        type: "integer"
        format: "int32"
        example: 42
  PreviewQuerySessionlessRequest:
    type: "object"
    properties:
      predicateExpression:
        type: "string"
        example: "xEvent.metrics.commerce.abandons.value > 0"
      predicateType:
        type: "string"
        example: "pql/text"
      predicateModel:
        type: "string"
        example: "_xdm.context.profile"
      graphType:
        type: "string"
        example: "pdg"
  PreviewSegmentsIndividualResponse:
    type: "object"
    properties:
      objectId:
        type: "string"
        description: "Unique identifier of XDM Model object."
      _href:
        type: "string"
        description: "Profile Access link to the contents of an XDM Object."
  PreviewSegmentsWrapperResponse:
    type: "object"
    properties:
      objectId:
        type: "string"
        description: "Unique identifier of XDM Model object."
      _href:
        type: "string"
        description: "Profile Access link to the contents of an XDM Object."
      relatedObjects:
        type: "array"
        description: "List of related objectIds."
        items:
          $ref: "#/definitions/PreviewSegmentsIndividualResponse"
  ErrorResponse:
    type: object
    properties:
      code:
        type: string
        example: 0080000018
        description: batch segmentation job error code
      msg:
        type: string
        example: 'com.microsoft.azure.documentdb.DocumentClientException: Message: {"Errors":["Request rate is large"]}'
        description: batch segmentation job error message
      callStack:
        type: string
        description: Call stack
    description: Error response from the batch job
  SegmentJob:
    type: object
    required:
      - errors
      - metrics
      - segments
    properties:
      id:
        type: string
        example: 468eeefd-95a2-45a1-8bfc-b806dafce7ee
        description: Segment job request ID
      imsOrgId:
        type: string
        example: {IMG_ORG}
        description: IMS Org ID
      profileInstanceId:
        type: string
        example: {PROFILE_INSTANCE}
        description: Profile instance ID
      status:
        type: string
        example: PROCESSING
        description: Job status
        enum:
          - NEW
          - QUEUED
          - PROCESSING
          - CANCELLING
          - CANCELLED
          - FAILED
          - SUCCEEDED
      batchId:
        type: string
        example: 65e18145-a5e8-4993-94f3-c70fadaa1fef
        description: 'ID of the batch.'
      computeJobId:
        type: integer
        format: int64
        example: 1
        description: Compute job id
      computeGatewayJobId:
        type: string
        example: c3505859-d256-45d0-a6f3-c25f8f8508f5
        description: 'Compute gateway job ID, which can be use to get the job status from compute gateway API'
      creationTime:
        type: integer
        format: int64
        example: 1233456789000
        description: 'Unix timestamp when the job is created, in milliseconds'
      updateTime:
        type: integer
        format: int64
        example: 1233456789000
        description: 'Unix timestamp when the job is updated, in milliseconds'
      segments:
        type: array
        items:
          $ref: '#/definitions/SegmentInfo'
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorResponse'
      metrics:
        type: object
        required:
        - profileSegmentationTime
        - totalTime
        properties:
          totalTime:
            type: object
            properties:
              startTimeInMs:
                type: number
                example: 123456789000
                description: Timestamp in milliseconds when the segment job request is made
              endTimeInMs:
                type: number
                example: 123456799000
                description: Timestamp in milliseconds when the segment job is completed
              totalTimeInMs:
                type: number
                example: 10000
                description: The time it takes for the segment job to complete in milliseconds
            description: Total time metrics
          profileSegmentationTime:
            type: object
            properties:
              startTimeInMs:
                type: number
                example: 123456789000
                description: Timestamp in milliseconds when the actual computation starts
              endTimeInMs:
                type: number
                example: 123456799000
                description: Timestamp in milliseconds when the computation is completed
              totalTimeInMs:
                type: number
                example: 10000
                description: Computation time in milliseconds
            description: Actual computation time metrics
          totalProfile:
            type: integer
            format: int64
            example: 1233456789000
            description: 'Total number of scanned profiles'
          segmentedProfileCounter:
            type: object
            description: A map from segment IDs to the number of merged profiles in those segments.
            additionalProperties:
              type: number
        description: Segment job request metrics
      requestId:
        type: string
        example: cc3d3381-8682-41d4-93bd-566e378624d3
        description: 'Request ID, which can be used to trace the request along multiple components'
      modelName:
        type: string
        example: _xdm.context.profile
        description: model name
      _links:
        type: object
        description: Useful links to get the job status or cancel a submitted job.
        additionalProperties:
          type: string
  Expression:
    type: object
    properties:
      type:
        type: string
        example: PQL
        description: expression type
        enum:
          - PQL
          - ARL
      format:
        type: string
        example: pql/text
        description: expression format
        enum:
          - pql/text
          - pql/json
      value:
        type: string
        example: workAddress.country = "US"
        description: PQL query string
    description: 'Segment expression, part of a segment metadata response'
  SegmentInfo:
    type: object
    required:
      - segment
      - snapshot
    properties:
      segmentId:
        type: string
        example: 7863c010-e092-41c8-ae5e-9e533186752e
        description: Segment ID
      segment:
        type: object
        required:
        - expression
        - mergePolicy
        properties:
          id:
            type: string
            example: 7863c010-e092-41c8-ae5e-9e533186752e
            description: Segment ID
          version:
            type: integer
            format: int32
            example: 1
            description: segment version
          expression:
            $ref: '#/definitions/Expression'
          mergePolicy:
            type: object
            properties:
              id:
                type: string
                example: ups-default
                description: merge policy ID
              version:
                type: integer
                format: int32
                example: 1
                description: merge policy version
            description: 'merge policy, part of a segment meta data response'
        description: Segment meta data in a segment job response
      snapshot:
        $ref: '#/definitions/SegmentSnapshot'
    description: Segment Job Response
  SegmentSnapshot:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: inUS
        description: Snapshot name
      ttlInDays:
        type: integer
        format: int32
        example: 10
        description: TTL in days
    description: Snapshot has not been supported yet. Do not use!!!
  StandardResponse:
    type: object
    properties:
      code:
        type: string
        example: '200'
        description: standard response code
      message:
        type: string
        example: Segment job with ID '468eeefd-95a2-45a1-8bfc-b806dafce7ee' has been deleted
        description: Response message
    description: Standard Response
  SegmentJobRequest:
    type: object
    required:
      - segmentId
    properties:
      segmentId:
        type: string
        example: 7863c010-e092-41c8-ae5e-9e533186752e
        description: Segment ID
      snapshot:
        $ref: '#/definitions/SegmentSnapshot'
  SegmentDefinition:
    type: object
    required:
    - expression
    - name
    - schema
    - ttlInDays
    properties:
      id:
        type: string
      imsOrgId:
        type: string
        example: 1BD6382559DF0C130A49422D@AdobeOrg
      name:
        type: string
        description: Unique name for the segment definition
        example: People who ordered in the last 30 days
      mergePolicyId:
        type: string
        example: 5ed35fd8-6eeb-4ad2-bed9-43e695b8ac0b
      profileInstanceId:
        type: string
        example: ups
      description:
        type: string
        example: Last 30 days
      expression:
        "$ref": "#/definitions/Expression"
      schema:
        "$ref": "#/definitions/SchemaClass"
      payloadSchema:
        type: string
      ttlInDays:
        type: integer
        format: int32
        example: 60
      creationTime:
        type: integer
        format: int64
      updateTime:
        type: integer
        format: int64
      updateEpoch:
        type: integer
        format: int64
  MessageResponse:
    type: object
    required:
    - message
    - status
    properties:
      status:
        type: boolean
      message:
        type: string
  AdditionalFields:
    type: object
    properties:
      eventList:
        description: Name of additional field to be exported
        type: object
        properties:
          fields:
            type: string
            description: Fields filter for Event List
          filter:
            description: Filter values for exporting Event List.
            type: object
            properties:
              fromIngestTimestamp:
                type: string
                example: '2018-01-01T00:00:00Z'
                description: Filters experience events ingested after the given timestamp; RFC_3339 format
    description: Additional fields that need to be exported
  FeedbackMetrics:
    type: object
    properties:
      startTimeInMs:
        type: number
        example: 123456789000
        description: Start time in ms
      endTimeInMs:
        type: number
        example: 123456799000
        description: End time in ms
      totalTimeInMs:
        type: number
        example: 10000
        description: Total time in ms (End time - Start time)
    description: Feedback Metrics
  Filter:
    type: object
    properties:
      segments:
        type: array
        description: Array of filter values for Export Job.
        items:
          type: object
          properties:
            segmentId:
              type: string
              example: 52c26d0d-45f2-47a2-ab30-ed06abc981ff
              description: Segment Id.
            segmentNs:
              type: string
              example: ups
              description: Segment Namespace(default "ups" if not provided).
            status:
              type: array
              items:
                type: string
                example: realized
              description: Status filter for segmentIds, default- ["realized","existing"].
          description: Segment values for filter.
      segmentQualificationTime:
        type: object
        description: Timestamp filter(in RFC3339 format) for exporting when profiles entered or exited a segment.
        properties:
          startTime:
            type: string
            example: '2018-01-01T00:00:00Z'
            description: Qualification start time filter.
          endTime:
            type: string
            example: '2018-02-01T00:00:00Z'
            description: Qualification end time filter.
      fromIngestTimestamp:
        type: string
        example: '2018-01-01T00:00:00Z'
        description: Filters profiles and experience events updated after the given timestamp; RFC_3339 format
      emptyProfiles:
        type: boolean
        example: true
        description: Boolean. Profiles can contain profile fragments, ExperienceEvent fragments, or both.Profiles with no profile fragments and only ExperienceEvent fragments are referred to as "emptyProfiles". To export all profiles in the profile store, including the "emptyProfiles", set the value of "emptyProfiles" to true. If "emptyProfiles" is set to false, only profiles with profile fragments in the store are exported. By default, if "emptyProfiles" attribute is not included, only profiles containing profile fragments are exported.
    description: Array of filter values for Export Job to export Profiles.
  MergePolicyObject:
    type: object
    properties:
      id:
        type: string
        example: timestampOrdered-none-mp
        description: Merge policy ID.
      version:
        type: number
        example: 1
        description: 'Version for the given merge policy ID; Default value: Latest.'
    description: Merge policy ID and version.
  ScanJobResponse:
    type: object
    properties:
      id:
        type: number
        example: 100
        description: Id of the export job
      jobType:
        type: string
        example: BATCH
        description: 'Job type: batch or streaming.'
      destination:
        description: Destination for Export Job results.
        type: object
        properties:
          datasetId:
            type: string
            example: 5b7c86968f7b6501e21ba9df
            description: Dataset Id of the destination.
          segmentPerBatch:
            type: boolean
            example: false
            description: false, exports all segment Ids into a single batch Id; true, exports one segment Id in one batch Id
          batchId:
            type: string
            example: da5cfb4de32c4b93a09f7e37fa53ad52
            description: Batch Id of the destination.
          batches:
            type: object
            properties:
              segmentId:
                type: string
                example: 52c26d0d-45f2-47a2-ab30-ed06abc981ff
                description: Segment Id provided in filter in export job request payload
              segmentNs:
                type: string
                example: ups
                description: Segment Namespace
              status:
                type: array
                items:
                  type: string
                  example: realized
                description: Status filter for segmentIds, default- ["realized","existing"].
              batchId:
                type: string
                example: da5cfb4de32c4b93a09f7e37fa53ad52
                description: batch id for a particular segment id export
            description: The object for multi-segment export feature and will only be returned when segmentPerBatch is marked as true. If segmentPerBatch is marked as false, batchId is returned in first level "batchId" field under "destination" object.
      fields:
        type: string
        example: 'identities.id,personalEmail.address'
        description: Column filters.
      schema:
        description: Schema name.
        type: object
        properties:
          name:
            type: string
            example: _xdm.context.profile
            description: Schema name.
      imsOrgId:
        type: string
        example: 1BD6382559DF0C130A49422D@AdobeOrg
        description: ImsOrgId provided.
      status:
        type: string
        example: SUCCEEDED
        description: NEW/PROCESSING/SUCCEEDED/FAILED.
      filter:
        $ref: '#/definitions/Filter'
      additionalFields:
        $ref: '#/definitions/AdditionalFields'
      mergePolicy:
        $ref: '#/definitions/MergePolicyObject'
      profileInstanceId:
        type: string
        example: ups
        description: Profile Instance Id provided.
      errors:
        type: array
        description: Errors in case of failure
        items:
          type: object
          properties:
            code:
              type: string
              example: '0100000003'
            msg:
              type: string
              example: Error in Export Job
            callStack:
              type: string
              example: com.adobe.aep.unifiedprofile.common.logging.Logger
      metrics:
        description: Metrics for the job
        type: object
        properties:
          totalTime:
            $ref: '#/definitions/FeedbackMetrics'
          profileExportTime:
            $ref: '#/definitions/FeedbackMetrics'
          aCPDatasetWriteTime:
            $ref: '#/definitions/FeedbackMetrics'
      computeGatewayJobId:
        description: Compute Gateway job Id for Export and Push Job
        type: object
        properties:
          exportJob:
            type: string
            example: f3058161-7349-4ca9-807d-212cee2c2e94
            description: Compute Gateway job Id for Export Job
          pushJob:
            type: string
            example: feaeca05-d137-4605-aa4e-21d19d801fc6
            description: Compute Gateway job Id for Push Job
      creationTime:
        type: integer
        format: int64
        example: 1538615973895
        description: The creation time of the job.
      updateTime:
        type: integer
        format: int64
        example: 1538616233239
        description: The updated time for the job.
      requestId:
        type: string
        example: d995479c-8a08-4240-903b-af469c67be1f
        description: Tracing Id for the job.
    description: The information after submitting a export job eg. job id.
  ScanJobEntityRequest:
    type: object
    properties:
      fields:
        type: string
        example: 'identities.id,personalEmail.address'
        description: Column filters (comma separated dot notation of columns)
      mergePolicy:
        $ref: '#/definitions/MergePolicyObject'
      filter:
        $ref: '#/definitions/Filter'
      additionalFields:
        $ref: '#/definitions/AdditionalFields'
      destination:
        description: DatasetId where the exported data will be stored
        type: object
        properties:
          datasetId:
            type: string
            example: 5b7c86968f7b6501e21ba9df
            description: Dataset ID of the destination.
      schema:
        description: Schema name for the data
        type: object
        properties:
          name:
            type: string
            example: _xdm.context.profile
            description: Schema name.
    description: Request for POST export job.
  ScanJobsPageResponse:
    type: object
    properties:
      records:
        type: array
        description: The list of Scan Job records.
        items:
          $ref: '#/definitions/ScanJobResponse'
      page:
        description: The page information of the current response entity.
        type: object
        properties:
          sortField:
            type: string
            example: createdTime
            description: The order records are sorted. By default is creation time.
          sort:
            type: string
            example: desc
            description: The sorting order. By default is descending order.
          pageOffset:
            type: string
            example: '1540974701302_96'
            description: The offset of the page. By default is the creation time and job id for the last record on this page.
          pageSize:
            type: integer
            format: int32
            example: 10
            description: The total number of records of this page.
      link:
        description: The href links.
        type: object
        properties:
          next:
            type: string
            description: The href link to the next page of the records. Empty if no more records.
  ExportMessageResponse:
    type: object
    properties:
      status:
        type: boolean
        example: true
        description: Status of the request.
      message:
        type: string
        example: Export job has been marked for cancelling
        description: Message.
    description: Response for cancel export job call
  SchemaEntity:
    type: object
    properties:
      name:
        description: XED name of the schema class.
        type: string
        example: '_xdm.context.profile'
  NotFoundError:
    type: object
    properties:
      statusCode:
        type: string
        example: '404'
  ForbiddenError:
    type: object
    properties:
      message:
        type: string
        example: 'UPS-ACC-1000004: IMS Org is not provisioned.'
      statusCode:
        type: string
        example: '403'
  TooManyRequestError:
    type: object
    properties:
      message:
        description: Error message
        type: string
        example: 'Too many requests'
      cause:
        description: Cause message
        type: string
        example: '{"Errors":["Request rate is large"]}'
      retryAfterMs:
        description: Retry in milliseconds
        type: string
        example: '500'
      statusCode:
        description: Original status code from error
        type: string
        example: '429'
  ResponseErrorContext:
    type: object
    properties:
      message:
        description: Error message
        type: string
        example: 'UPS-MRG-1000001:Identities cannot be retrieved for XID - "A0Fxh6UjQa6mAA5hhzdu6SJTu78M" for graph type "auto"'
      cause:
        description: Cause message
        type: string
        example: 'Status Code - 400 : message {"reason":"Validation error Request id: 9b4d449c-213c-4f76-8442-3d151a205fb9.","message":"Failed to convert mcid=6993527987241034661918658814749273655 to aamuuid using imsOrg=****@AdobeOrg"}'
      statusCode:
        description: Original status code from error
        type: string
        example: '422'
  ResponseInternalErrorContext:
    type: object
    properties:
      message:
        description: Error message
        type: string
        example: 'Unable to connect to server'
      cause:
        description: Cause message
        type: string
        example: 'Status Code - 500 : Connection Timeout'
      statusCode:
        description: Original status code from error
        type: string
        example: '500'
  ErrorResponseById:
    type: object
    properties:
      xid:
        type: string
      error:
        $ref: '#/definitions/ResponseErrorContext'
  PostIdentityEntityItem:
    type: object
    required: [entityId]
    properties:
      entityId:
        type: string
        description: 'ID of the entity.'
        example: "69935279872410346619186588147492736556"
      entityIdNS:
        type: object
        description: 'Identity namespace of the entity.'
        properties:
          code:
            type: string
            description: 'Identity namespace code.'
            example: "CRMID"
  GetXDMObjectResponseEntity:
    type: object
    properties:
      entityId:
        type: string
        description: 'The identifier of the XDM entity.'
        example: 'GugxAW-lI0GupgAOYSxOHl0_UX1_'
      sources:
        type: array
        items:
          type: string
          description: 'Sources of the merged XDM entity. For example: dataset ids.'
          example: "5bc7ee61cdcc8712f991f0ee"
      tags:
        type: array
        items:
          type: string
          description: 'Sources of the merged XDM entity. For example: batch ids.'
          example: "4c442203cffc4635aa4553528958d969"
      identityGraph:
        type: array
        items:
          type: string
          description: 'Related identities of the merged XDM entity.'
          example: "GugxAW-lI0GupgAOYSxOHl0_UX1_"
      entity:
        type: object
        description: Any user defined JSON as per the definition of XDM
        additionalProperties:
          type: object
      lastModifiedAt:
        type: string
        description: Last modified timestamp. In RFC-3339 format.
        example: '2018-10-18T15:59:10-08:00'
  PostRequestBodyEntity:
    type: object
    required: [schema, identities]
    properties:
      schema:
        $ref: '#/definitions/SchemaEntity'
      relatedSchema:
        $ref: '#/definitions/SchemaEntity'
      fields:
        description: 'Fields for the model object. By default, all fields will be fetched. Separated by comma.'
        type: array
        items:
          type: string
          example: 'person.name.firstName'
      identities:
        type: array
        items:
          $ref: '#/definitions/PostIdentityEntityItem'
      timeFilter:
        $ref: '#/definitions/PostTimeFilterEntity'
      limit:
        type: number
        description: 'Number of records to return from the result. Only for ExperienceEvents. Default: 1000'
        example: 10
      orderby:
        type: string
        description: 'The sort order of retrieved ExperienceEvents by timestamp. Syntax: (+/-)timestamp. Default: +timestamp'
        example: "-timestamp"
  PostTimeFilterEntity:
    type: object
    properties:
      startTime:
        description: 'Start time of Time range filter for time-series objects. Should be at millisecond granularity. Included. Default: From beginning.'
        type: number
        example: 1539838505
      endTime:
        description: 'End time of Time range filter for ExperienceEvents. Should be at millisecond granularity. Excluded. Default: To the end.'
        type: number
        example: 1539838510
  MergePoliciesResponse:
    type: object
    required:
      - _page
      - children
    properties:
      _page:
        $ref: '#/definitions/Page'
      children:
        type: array
        items:
          $ref: '#/definitions/MergePolicy'
  Page:
    type: object
    required:
      - count
    properties:
      count:
        type: number
        example: 100
        description: number of merge policies per page
      next:
        type: string
        example: K1JJRDpFaWc5QUwyZFgtMEpBQUFBQUFBQUFBPT0jUlQ6MSNUUkM6MiNGUEM6QWdFQUFBQVFBQWZBQUg0Ly9yL25PcmpmZndEZUR3QT0=
        description: page offset
  MergePolicy:
    type: object
    required:
      - schema
      - identityGraph
      - attributeMerge
    properties:
      id:
        type: string
        example: ups-default
        description: macro id
      name:
        type: string
        example: 5c48b93a53214114cf85e378
        description: merge policy name
      imsOrgId:
        type: string
        example: 1BD6382559DF0C130A49422D@AdobeOrg
        description: ims org id
      schema:
        $ref: '#/definitions/SchemaClass'
      version:
        type: integer
        example: 1
        description: merge policy version
      default:
        type: boolean
        example: false
        description: default flag
      identityGraph:
        $ref: '#/definitions/IdentityGraph'
      attributeMerge:
        $ref: '#/definitions/AttributeMerge'
      updateEpoch:
        type: integer
        example: 1234567890
        description: update timestamp
    description: 'merge policy'
  SchemaClass:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: _xdm.context.profile
        description: schema class id
    description: schema class
  IdentityGraph:
    type: object
    required:
    - type
    properties:
      type:
        type: string
        example: pdg
        description: identity graph type
        enum:
        - none
        - pdg
    description: identity graph
  AttributeMerge:
    type: object
    required:
    - type
    properties:
      type:
        type: string
        example: timestampOrdered
        description: attribute merge type
        enum:
        - timestampOrdered
        - dataSetPrecedence
      order:
        type: array
        items:
          type: string
    description: attribute merge
  PatchOperation:
    type: object
    required:
    - op
    - path
    - value
    properties:
      op:
        type: string
        example: add
        description: op
        enum:
        - add
      path:
        type: string
        example: /identityGraph.type
        description: path of the attribute need to be updated
      value:
        type: string
        example: pdg
        description: the new value used to update the specified attribute
    description: Patch operation
  schedulesResponse:
    type: object
    required:
    - _page
    - children
    properties:
      _page:
        $ref: '#/definitions/schedulesPage'
      children:
        type: array
        items:
          $ref: '#/definitions/Schedule'
  schedulesPage:
    type: object
    required:
    - totalCount
    - pageSize
    properties:
      totalCount:
        type: number
        example: 100
        description: total number of schedules
      pageSize:
        type: number
        example: 100
        description: number of schedules per page
      next:
        type: string
        example: 1
        description: page offset
  Schedule:
    type: object
    required:
    - type
    - name
    - schedule
    - properties
    properties:
      id:
        type: string
        example: 5e61e66e-e8b4-4a7b-8d41-70c74b0b981a
        description: unique, read-only, system-generated schedule ID
      name:
        type: string
        example: profile-default
        description: schedule name
      type:
        type: string
        enum: [batch_segmentation]
        example: batch_segmentation
        description: job type
      schedule:
        type: string
        example: 0 0 1 * * ?
        description: cron expression
      state:
        type: string
        enum: [active, inactive]
        example: inactive
        description: schedule state. If the schedule is inactive, the job won't be triggered at the scheduled time.
      properties:
        type: object
        required:
        - segments
        properties:
          segments:
            type: array
            items:
              type: string
              example: '*'
            description: this field is required if the job type is batch_segmentation. It holds a list of segment definitions which need to be evaluated at the scheduled time. Use `*` to evaluate all segments.
        description: schedule properties
      createEpoch:
        type: integer
        example: 1234567890
        description: creation timestamp (unix timestamp in seconds)
      updateEpoch:
        type: integer
        example: 1234567890
        description: update timestamp (unix timestamp in seconds)
    description: 'schedule entity'
  scheduleCreate:
    type: object
    required:
    - name
    - type
    - schedule
    - properties
    properties:
      name:
        type: string
        example: profile-default
        description: The name of the schedule being created.
      type:
        type: string
        enum: [batch_segmentation]
        example: batch_segmentation
        description: The job type.
      properties:
        type: object
        required:
        - segments
        properties:
          segments:
            type: array
            items:
              type: string
              example: '*'
            description: This field is required if the job type is batch_segmentation. It holds a list of segment definitions which need to be evaluated at the scheduled time. Use `*` to evaluate all segments.
        description: schedule properties 
      schedule:
        type: string
        example: 0 0 1 * * ?
        description: A cron expression stating when the schedule should be triggered.
      state:
        type: string
        enum: [active, inactive]
        example: inactive
        description: Schedule state. If schedule is inactive, it must be activated before it will be triggered.
    description: 'Request body for creating a schedule'
  schedulePatchOperation:
    type: object
    required:
    - op
    - path
    - value
    properties:
      op:
        type: string
        example: add
        description: op
        enum:
        - add
      path:
        type: string
        example: /state
        description: path of the attribute need to be updated
      value:
        type: string
        example: active
        description: the new value used to update the specified attribute
    description: Patch operation
  ProfileSystemJobsResponse:
    type: object
    required:
      - _page
      - children
    properties:
      _page:
        $ref: '#/definitions/SystemJobsPage'
      children:
        type: array
        items:
          $ref: '#/definitions/ProfileSystemJob'
  SystemJobsPage:
    type: object
    required:
      - count
    properties:
      count:
        type: number
        example: 100
        description: number of ProfileSystemJobsDefinition per page
      next:
        type: string
        example: K1JJRDpFaWc5QUwyZFgtMEpBQUFBQUFBQUFBPT0jUlQ6MSNUUkM6MiNGUEM6QWdFQUFBQVFBQWZBQUg0Ly9yL25PcmpmZndEZUR3QT0=
        description: page offset
  XdmDataJobPostBodyWithDataSetId:
    type: object
    properties:
      dataSetId:
        type: string
        example: "5cf212ed73fbff145365d15d"
        description: dataSetId      
  ProfileSystemJob:
    type: object
    properties:
      id:
        type: string
        example: "9c2018e2-cd04-46a4-b38e-89ef7b1fcdf4"
        description: ProfileSystemJob or delete request ID
      imsOrgId:
        type: string
        example: "{IMS_ORG}"
        description: ims org id
      dataSetId:
        type: string
        example: 5cf212ed73fbff145365d15d
        description: dataset Id
      batchId:
        type: string
        example: 5cf212ed73fbff145365d15d
        description: batch Id
      jobType:
        type: string
        example: DELETE
        description: Type of Profile System Job
      status:
        type: string
        enum:
          - NEW
          - PROCESSING
          - COMPLETED
          - ERROR
        example: NEW
        description: Status of Profile System Job
      metrics:
        type: string
        example: '{\"recordsProcessed\":727109,\"timeTakenInSec\":50}'
        description: Rum time metrics of Profile System Job
      createEpoch:
        type: integer
        example: 1234567890
        description: create timestamp
      updateEpoch:
        type: integer
        example: 1234567890
        description: update timestamp
parameters:
  authorization:
    name: Authorization
    description: 'The access token which can be copied from your Experience Platform integration, prefixed with "Bearer ". 
    For more information on how to obtain this value, visit the [authentication tutorial](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/authenticate_to_acp_tutorial/authenticate_to_acp_tutorial.md).'
    required: true
    type: string
    in: header
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: 'The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/authenticate_to_acp_tutorial/authenticate_to_acp_tutorial.md).'
    required: true
    type: string
    in: header
  x-api-key:
    name: x-api-key
    description: 'The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/authenticate_to_acp_tutorial/authenticate_to_acp_tutorial.md).'
    required: true
    type: string
    in: header
  content-type:
    name: Content-Type
    description: Type of content being sent in the body of the request. Should be 'application/json'.
    required: true
    type: string
    in: header
  createComputedAttribute:
    in: body
    name: body
    description: >-
      A JSON obect containing the details of the computed attribute being created.
      
      * **name: (Required)** The name of the computed attribute field, as a string.
      
      * **path: (Required)** The path to the computed attributed field within a schema. This path is found within the 'properties' attribute of the schema, but it omits the layers of 'properties' when writing the path. It also omits the field name itself. For example, if the computed attribute path is a.b.c, the "name" is "c" and the "path" is "a.b".
        * **{TENANT_ID}:** If you are unfamiliar with your tenant ID, please refer to the steps for finding your tenant ID in the [Schema Registry developer guide](https://www.adobe.io/apis/experienceplatform/home/xdm/xdmservices.html#!api-specification/markdown/narrative/technical_overview/schema_registry/schema_registry_developer_guide.md#know-your-tenant_id)
      * **description:** *(Optional)* A description of the computed attribute. This is especially useful once multiple computed attributes have been defined as it will help others within your IMS Organization to determine the correct computed attribute to use.
      
      * **expression: (Required)** A valid Profile Query Language (PQL) expression. For more information on PQL and links to supported queries, please read the [PQL overview documentation](https://www.adobe.io/apis/experienceplatform/home/profile-identity-segmentation/profile-identity-segmentation-services.html#!api-specification/markdown/narrative/technical_overview/unified_profile_architectural_overview/unified_profile_pql.md).
      
      * **schema.name: (Required)** The class upon which the schema containing the computed attribute field is based. For example, if the schema was based on the XDM ExperienceEvent class, the value would be '_xdm.context.experienceevent'.
    required: true
    schema:
      $ref: '#/definitions/createComputedAttribute'
  attribute-id:
    name: ATTRIBUTE_ID
    description: The unique, read-only ID of the computed attribute that is generated by the system when the attribute is created.
    required: true
    type: string
    in: path
  computedAttributeUpdate:
    name: body
    description: >-
      Use [JSON Patch formatting](http://jsonpatch.com/) to update the computed attribute.
      
      
      The "value" must be a valid Profile Query Language (PQL) expression. For more information on PQL and links to supported queries, please read the [PQL overview documentation](https://www.adobe.io/apis/experienceplatform/home/profile-identity-segmentation/profile-identity-segmentation-services.html#!api-specification/markdown/narrative/technical_overview/unified_profile_architectural_overview/unified_profile_pql.md).
    required: true
    in: body
    schema:
      $ref: '#/definitions/updateComputedAttribute'
  segment-body: 
    in: body
    name: body
    description: |-
      `name` - Name of the segment which must be unique

      `description` - Description of the segment

      `expression` - PQL expression of type PQL, format pql/json or pql/text and value containing the actual query

      `schema` - schema object with a name field

      `ttlInDays` - number
    required: true
    schema:
      $ref: '#/definitions/SegmentDefinition'
  x-request-id:
    name: x-request-id
    in: header
    description: Optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
    required: false
    type: string
  eventTypeId:
    name: eventTypeId
    in: path
    description: Event type ID.
    required: true
    type: string
  x-sandbox-name:
    name: x-sandbox-name
    in: header
    description: All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place.
    required: true
    type: string
  x-profile-instance-id:  
    name: x-profile-instance-id
    in: header
    description: Profile instance ID.
    required: true
    type: string
    x-example: ups
  event-type-body:
    in: body
    name: body
    description: Event type object.
    required: true
    schema:
      $ref: '#/definitions/EventType'
  mergePolicyId:
    name: mergePolicyId
    in: path
    description: Merge policy ID.
    required: true
    type: string
    x-example: ca8fe8a8-0f38-478a-9905-fd515d1d2988
  segmentId:
    name: segmentId
    in: path
    description: Segment Definition ID.
    required: true
    type: string
    x-example: b9f6c339-f7f4-4141-b6c7-b562079da47c
  segmentJobId:
    name: segmentJobId
    in: path
    description: Segment job request ID.
    required: true
    type: string
    x-example: ca8fe8a8-0f38-478a-9905-fd515d1d2988
  previewId:
    name: "previewId"
    in: "path"
    description: "ID of the preview job."
    required: true
    type: "string"
    x-example: "MDowOjZkNDQ1NDhjLTQ5YmQtNDI5Mi1hNzMxLTU1NjU4ZGU1MThmNzo0MA==" 
  macroId:
    name: macroId
    in: path
    description: Macro ID. For example, `ca8fe8a8-0f38-478a-9905-fd515d1d2988`
    required: true
    type: string
  start:      
    name: start
    in: query
    description: Return results from a specific page offset. For example, `start=3`
    required: false
    type: integer
  limit:  
    name: limit
    in: query
    description: Limit response to a specific number of objects. Must be a positive number. For example, `limit=10`
    required: false
    type: integer
  schedule-id:  
    name: SCHEDULE_ID
    in: path
    description: The ID of the schedule against which the operation is being performed.
    required: true
    type: string