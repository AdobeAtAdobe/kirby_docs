swagger: '2.0'
info:
  version: '1.0'
  title: Segmentation Service API
  description: >-
    - Service description:
        - Adobe Experience Platform Segmentation Service allows you to build segments and generate audiences from your Real-time Customer Profile data. These segments are centrally configured and maintained on Platform, and are readily accessible by other Adobe applications. The Segmentation Service API allows you to programmatically integrate the service's various functionalities into your experience application, providing RESTful endpoints for managing segment definitions, exports, schedules, and more.

    - Related documentation:
        - [Segmentation Service documentation](https://www.adobe.com/go/segmentation-overview-en)

    - Visualize API calls with Postman (a free, third-party software):
        - [Real-time Customer Profile API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Real-time%20Customer%20Profile%20API.postman_collection.json)
        - [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)
        - [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)

    - API paths:
        - PLATFORM Gateway URL: https://<span>platform.adobe.io/
        - Base path for this API: /data/core/ups
        - Example of a complete path: https://<span>platform.adobe.io/data/core/ups/segment/definitions
      
    - Required headers:
        - All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](https://www.adobe.com/go/platform-api-authentication-en).
        - All resources in Experience Platform are isolated to specific virtual sandboxes. All requests to Platform APIs require the header `x-sandbox-name` whose value is the all-lowercase name of the sandbox the operation will take place in (for example, "prod"). See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
        - All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.

host: platform.adobe.io
basePath: /data/core/ups
tags:
  - name: Estimates
    description: Estimates provide statistical information on a segment definition, such as the projected audience size and confidence interval.
  - name: Export jobs
    description: Export jobs are asynchronous processes that are used to persist audience segment members to datasets.
  - name: Previews
    description: Previews provide paginated lists of qualifying profiles for a segment definition.
  - name: Schedules
    description: Create a recurring schedule to automatically run export jobs. A schedule can run at most once daily.
  - name: Segment definitions
    description: Segment definitions include a Profile Query Language (PQL) statement that defines which profiles will be part of an audience segment.
  - name: Segment jobs
    description: Segment jobs process previously established segment definitions to generate an audience segment.
  - name: Segment search
    description: Segment search allows users to search across multiple namespaces or get specific structural information about specified objects.

paths:
  '/export/jobs':
    get:
      tags:
        - Export jobs
      summary: Retrieve a list of all export jobs.
      operationId: getExportJobs
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: limit
          in: query
          description: >- 
            Limit the number of export jobs returned in the list.
          required: false
          type: integer
        - name: offset
          in: query
          description: >-
            Offset the page of results returned, ordered by created time of resource.
          required: false
          type: string
        - name: status
          in: query
          description: >-
            Filter the export jobs returned by job status.
          required: false
          type: string
          enum:
            - NEW
            - SUCCEEDED
            - FAILED
      responses:
        '200':
          description: A list of the export jobs returned.
          schema:
            $ref: '#/definitions/GetExportJobsResponse'
        '403':
          description: Access is forbidden.
        '503':
          description: The service is unavailable.
    post:
      tags:
        - Export jobs
      summary: Create a new export job.
      operationId: postExportJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: x-profile-instance-id
          in: header
          description: >-
            The ID of the profile instance. **Example**: `ups`
          required: false
          type: string
        - in: body
          name: body
          description: >- 
            - **fields** - [Optional] Column filters (comma-separated list of columns in dot notation). Limits the data fields to be included in the export to only those provided in this parameter. The same parameter is also available when creating a segment, therefore the fields in the segment may have already been filtered. Omitting this value will result in all fields being included in the exported data.

            - **mergePolicy** - [Optional] Specifies the merge policy to govern the exported data. Include this parameter when there are multiple segments being exported. Omitting this value will cause the Export Service to use the merge policy provided by the segmentId or snapshotName.
                - **id** - The ID of the merge policy.
                - **version** - The specific version of the merge policy to use. Omitting this value will default to the most recent version.
            - **filter** - [Optional] Specifies one or more of the following filters to apply to the segment before export.
                - **segments** - [Optional] Specifies the segments to export. Omitting this value will result in all data from all profiles being exported. Accepts an array of segment objects, each containing the following fields:
                    - **segmentId** - **[Required if specifying segments]** Segment ID for profiles to be exported.
                    - **segmentNs** - [Optional] Segment namespace for the given segmentId.
                    - **status** - [Optional] An array of strings providing a status filter for the `segmentID`. By default, `status` will have the value `["realized", "existing"]` which represents all profiles that fall into the segment at the current time. Possible values include: `"realized"`, `"existing"`, and `"exited"`.
                - **segmentQualificationTime** - [Optional] Filter based on segment qualification time. The start time and/or end time can be provided.
                    - **startTime** - [Optional] Segment qualification start time for a segment ID for a given status. It not provided, there will be no filter on the start time for a segment ID qualification. The timestamp must be provided in [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
                    - **endTime** - [Optional] Segment qualification end time for a segment ID for a given status. It not provided, there will be no filter on the end time for a segment ID qualification. The timestamp must be provided in [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
                - **fromIngestTimestamp** - [Optional] Filters the resulting profiles to those that have been updated after the provided timestamp. Value is provided in RFC 3339 format. Supports `greater_than` operand.
                - **emptyProfiles** - [Optional] Boolean. Profiles can contain Profile records, ExperienceEvent records, or both. Profiles with no Profile records and only ExperienceEvent records are referred to as "emptyProfiles". To export all profiles in the Profile store, including the "emptyProfiles", set the value of "emptyProfiles" to `true`. If "emptyProfiles" is set to `false`, only profiles with Profile records in the store are exported. By default, if "emptyProfiles" attribute is not included, only profiles containing Profile records are exported.
            - **additionalFields** - [Optional] Additional profile fields that need to be exported.
                - **eventList** - Used if ExperienceEvents need to be exported with profiles.
                    - **fields** - Comma-separated list of ExperienceEvent fields to be included in the export. If not provided, all ExperienceEvent fields are exported.
                    - **filter** - Filters ExperienceEvents based on the parameters below. If not provided, all events corresponding to the resulting profiles will be exported.
                        - **fromIngestTimestamp** - Filters ExperienceEvents to those that have been updated after the provided timestamp. This is not the event time itself but the ingestion time for the events. Value is provided in RFC 3339 format.
            - **destination** - **[Required]** Destination information for the exported data.
                - **datasetId** - **[Required]** The ID of the dataset where data is to be exported.
                - **segmentPerBatch** [Optional] A Boolean value that, if not provided, defaults to false. A value of false exports all segment IDs into a single batch ID. A value of true exports one segment ID into one batch ID.
            - **schema.name** - **[Required]** The name of the schema associated with the dataset where data is to be exported.
          required: true
          schema:
            $ref: '#/definitions/CreateExportJobRequest'
      responses:
        '200':
          description: The export job has been  successfully created.
          schema:
            $ref: '#/definitions/ExportJobResponse'
          headers:
            X-Location:
              type: string
              description: The HREF of the export job.
        '403':
          description: Access is forbidden.
        '503':
          description: The service is unavailable.
  '/export/jobs/{EXPORT_JOB_ID}':
    get:
      tags:
        - Export jobs
      summary: Retrieve an export job by ID.
      operationId: getExportJobById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: EXPORT_JOB_ID
          in: path
          description: >-
            The ID of the export job you want to retrieve.
          required: true
          type: string
      responses:
        '200':
          description: The export job successfully retrieved.
          schema:
            $ref: '#/definitions/ExportJobResponse'
        '403':
          description: Access is forbidden.
        '404':
          description: The export job was not found.
        '503':
          description: The service is unavailable.
    delete:
      tags:
        - Export jobs
      summary: Cancel or delete an export job by ID.
      operationId: cancelExportJob
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: EXPORT_JOB_ID
          in: path
          description: >-
            The ID of the export job you want to cancel or delete.
          required: true
          type: string
      responses:
        '200':
          description: The export job was successfully cancelled.
          schema:
            $ref: '#/definitions/CancelExportJobResponse'
        '403':
          description: Access is forbidden.
        '404':
          description: The export job was not found.
        '503':
          description: The service is unavailable.
  '/segment/definitions':
    get:
      tags:
      - Segment definitions
      summary: Retrieve a list of segment definitions.
      operationId: getSegmentDefinitions
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: >-
            There needs to be one unique ID per request.
          required: true
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - name: start
          in: query
          description: >-
            The page offset, as per created time of resource.
          required: false
          type: integer
          format: int64
          x-example: 109103839
        - name: limit
          in: query
          description: >-
            The maximum size of the page.
          required: false
          type: integer
          x-example: 10
        - name: page
          in: query
          description: >-
            The page number.
          required: false
          type: integer
          x-example: 0
        - name: sort
          in: query
          description: >-
            The parameters used to sort the results.
          required: false
          type: string
          x-example: sort=name:asc,internalId:desc
      responses:
        '200':
          description: A list of Profile segment definitions is returned.
          schema:
            "$ref": "#/definitions/SegmentDefinition"
        '403':
          description: Access is forbidden.
        '503':
          description: The service is unavailable.
    post:
      tags:
      - Segment definitions
      summary: Create a new segment definition.
      operationId: postSegmentDefinition
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: x-request-id
          in: header
          description: >- 
            A unique ID must be used per request.
          required: false
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - $ref: '#/parameters/segment-body'
      responses:
        '200':
          description: The segment definition was successfully posted.
          schema:
            "$ref": "#/definitions/SegmentDefinition"
          headers:
            X-Location:
              type: string
              description: The URL of the segment definition.
        '400':
          description: An invalid segment definition was posted.
        '403':
          description: Access is forbidden.
        '422':
          description: The segment definition already exists. In order to update a segment definition, use the PATCH operation instead.
        '503':
          description: The service is unavailable.
  '/segment/definitions/{SEGMENT_ID}':
    get:
      tags:
      - Segment definitions
      summary: Retrieve a segment definition by ID.
      operationId: getSegmentDefinitionById
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: >-
            A unique ID must be used per request.
          required: true
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - $ref: '#/parameters/segmentId'
      responses:
        '200':
          description: The segment definition was successfully returned.
          schema:
            "$ref": "#/definitions/SegmentDefinition"
        '403':
          description: Access is forbidden.
        '404':
          description: The segment definition was not found.
        '503':
          description: The service is unavailable.
    delete:
      tags:
      - Segment definitions
      summary: Delete a segment definition by ID.
      operationId: deleteSegmentDefinition
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: >-
            A unique ID must be used per request.
          required: true
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - $ref: '#/parameters/segmentId'
      responses:
        '200':
          description: The segment definition was successfully deleted.
          schema:
            "$ref": "#/definitions/MessageResponse"
        '403':
          description: Access is forbidden.
        '503':
          description: The service is unavailable.
    patch:
      tags:
        - Segment definitions
      summary: Overwrite a segment definition.
      operationId: patchSegmentDefinition
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: x-request-id
          in: header
          description: >-
            A unique ID must be used per request.
          required: true
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - $ref: '#/parameters/segmentId'
        - $ref: '#/parameters/segment-body'
      responses:
        '200':
          description: The segment definition was successfully updated.
          schema:
            "$ref": "#/definitions/SegmentDefinition"
          headers:
            X-Location:
              type: string
              description: HREF to the segment definition
        '400':
          description: The segment definition is invalid.
        '403':
          description: Access is forbidden.
        '503':
          description: The service is unavailable.
  '/segment/definitions/bulk-get':
    post:
      tags:
        - Segment definitions
      summary: Retrieve multiple segment definitions using multiple segment definition IDs
      operationId: bulkGetSegmentDefinitions
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: body
          in: body
          description: >-
            An array of the segment definition IDs that you are trying to retrieve.
          schema:
            type: object
            properties:
              ids:
                type: array
                items:
                  type: object
                example: 
                  - id: 54669488-03ab-4e0d-a694-37fe49e32be8
                  - id: c527dc3f-07fe-4b96-be4e-23f38e734ff8
      responses:
        '207':
          description: The details of each segment definition are returned. The sample response has been truncated to show only the details for the first segment definition.
          schema:
            type: object
            properties:
              results:
                type: object
                properties:
                  "{SEGMENT_ID}":
                    $ref: '#/definitions/SegmentDefinition'
  '/segment/conversion':
    post:
      tags:
        - Segment definitions
      summary: Converts a segment definition from pql/text to pql/json and vice versa.
      operationId: convertSegmentDefinition
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: x-request-id
          in: header
          description: >- 
            A unique ID must be used per request.
          required: false
          type: string
          x-example: jRot0Q3pgFi2lmLecebqHGTfnApAwVnQ
        - $ref: '#/parameters/segment-body'
      responses:
        '200':
          description: The segment definition was successfully converted.
          schema:
            "$ref": "#/definitions/SegmentDefinition"
        '400':
          description: An invalid segment definition was posted.
        '409':
          description: Conflict. An entity with the specified ID already exists in the system.
        '429':
          description: Too many requests. Please try again in a few minutes.
        '503':
          description: The service is unavailable.
  '/segment/jobs':
    get:
      tags:
        - Segment jobs
      summary: Retrieve a list of all segment job requests.
      operationId: getSegmentJobs
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - name: x-request-id
          in: header
          description: >-
            A unique ID must be used per request.
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - name: snapshot.name
          in: query
          description: >-
            The snapshot name.
          required: false
          type: string
          x-example: inUS
        - name: start
          in: query
          description: >- 
            The page offset, as per the created time of the resource.
          required: false
          type: integer
          format: int64
          x-example: 2
        - name: limit
          in: query
          description: >-
            The maximum number of segment jobs retrieved per page.
          required: false
          type: integer
          x-example: 10
        - name: status
          in: query
          description: >- 
            The job status.
          required: false
          type: string
          x-example: PROCESSING
        - name: sort
          in: query
          description: >-
            Used to order the segment jobs. Is written in the format [attributeName]:[desc|asc]
          required: false 
          type: string
          x-example: creationTime:desc
        - name: property
          in: query
          description: >-
            Used to get exact matches within an attribute in the segment job. Is written in the format [arrayTypeAttributeName]~[objectKey]==[value]
          required: false 
          type: string
          x-example: segments~segmentId==workInCanada
      responses:
        '200':
          description: A list of the segment jobs returned.
          schema:
            $ref: '#/definitions/SegmentJob'
        '403':
          description: Access is forbidden.
        '500':
          description: There was an issue reading the segment job.
        '503':
          description: The service is unavailable.
    post:
      tags:
        - Segment jobs
      summary: Create a new segment job request.
      operationId: postSegmentJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'        
        - name: x-profile-instance-id
          in: header
          description: >- 
            The ID of the Profile Instance. **Example**: `ups`
          required: false
          type: string
          x-example: ups
        - name: x-request-id
          in: header
          description: >-
            The request ID. **Example**: `q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA`
          required: false
          type: string
          x-example: q0gf6caRuRtX2s5khaN1Zgd1OoEXcPJA
        - in: body
          name: body
          description: >-
            List of segment jobs. Each should be in JSON format.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/SegmentJobRequest'
      responses:
        '200':
          description: The segment job request was successfully posted.
          schema:
            $ref: '#/definitions/SegmentJob'
        '400':
          description: The segment job request could not be posted. Double check your request body content.
        '403':
          description: Access is forbidden.
        '429':
          description: There are too many segmentation jobs in processing at the moment. Try again at a later time.
        '500':
          description: There was an issue reading the segment job.
        '503':
          description: The service is unavailable.
  '/segment/jobs/{SEGMENT_JOB_ID}':
    get:
      tags:
        - Segment jobs
      summary: Retrieve a segment job request by ID.
      operationId: getSegmentJobById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/segmentJobId'
        - $ref: '#/parameters/x-request-id'
      responses:
        '200':
          description: The segment job request was successfully retrieved.
          schema:
            $ref: '#/definitions/SegmentJob'
        '403':
          description: Access is forbidden.
        '404':
          description: The segment job request was not found.
        '503':
          description: The service is unavailable.
    delete:
      tags:
        - Segment jobs
      summary: Cancel or delete a segment job request by ID.
      operationId: deleteSegmentJob
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/segmentJobId'
        - $ref: '#/parameters/x-request-id'

      responses:
        '200':
          description: The segment job request has been marked for cancellation.
          schema:
            $ref: '#/definitions/CancelSegmentJobResponse'
        '403':
          description: Access is forbidden.
        '404':
          description: The segment job request was not found.
        '503':
          description: The service is unavailable.
  '/segment/jobs/bulk-get':
    post:
      tags:
        - Segment jobs
      summary: Retrieve multiple segment jobs using multiple job IDs
      operationId: bulkGetSegmentJobs
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - name: body
          in: body
          description: >-
            An array of the segment jobs IDs that you are trying to retrieve.
          schema:
            type: object
            properties:
              ids:
                type: array
                items:
                  type: object
                example: 
                  - id: cc3419d3-0389-47f1-b174-fead6b3c830d
                  - id: c527dc3f-07fe-4b96-be4e-23f38e734ff8
      responses:
        '207':
          description: The details of each segment jobs is returned. The sample response has been truncated to show only the details for the first segment job.
          schema:
            type: object
            properties:
              results:
                type: object
                properties:
                  "{SEGMENT_ID}":
                    $ref: '#/definitions/SegmentJob'
  '/preview':
    post:
      tags:
      - Previews
      summary: Create a new preview job.
      operationId: postPreview
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/content-type'
        - in: body
          name: body
          description: >- 
            - **predicateExpression**: The predicate expression that is to be evaluated. 
            
            - **predicateType**: (Default: PQL) The only value that is available to use for this is PQL for now.
            
            - **predicateModel**: (Default: xdm.model.profile) The model against which this predicate is to be evaluated. Please note that 'touchpoint' is not treated as model as it can be associated with any of the models like profile.
            
            - **graphType**: The graph type that you want to get the cluster from. Possible values are "none" (perform no identity stitching) and "pdg" (perform identity stitching based on your private identity graph).
          required: true
          schema:
            $ref: "#/definitions/CreatePreviewRequest"
      responses:
        201:
          description: The preview job was successfully posted.
          schema:
            $ref: "#/definitions/PreviewQueryResponse"
          headers:
            X-Location:
              type: string
              description: The HREF to the profile preview.
        403:
          description: Access is forbidden.
        503:
          description: The service is unavailable.
  '/preview/{PREVIEW_ID}':
    get:
      tags:
      - Previews
      summary: Retrieve the results of a preview job by ID.
      operationId: getPreview
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/previewId'
        - name: offset
          in: query
          description: >- 
            The offset of the page.
          required: false
          type: string
          x-example: offset=10200
        - name: limit
          in: query
          description: >- 
            The number of entries that should be present on a page. If not specified, this value will be 1000.
          required: false
          type: integer
          x-example: 100
      responses:
        200:
          description: The results of the preview job have been successfully retrieved.
          schema:
            $ref: "#/definitions/PreviewResponse"
        403:
          description: Access is forbidden.
        404:
          description: The preview job was not found.
        503:
          description: The service is unavailable.
    delete:
      tags:
      - Previews
      summary: Cancel or delete a preview job by ID.
      operationId: deletePreview
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/previewId'
      responses:
        200:
          description: The preview job was successfully cancelled.
          schema:
            $ref: "#/definitions/MessageResponse"
        403:
          description: Access is forbidden.
        404:
          description: The preview job was not found.
        503:
          description: The service is unavailable.
  '/estimate/{ESTIMATE_ID}':
    get:
      tags:
      - Estimates
      summary: Retrieve the results of an estimate job by ID.
      operationId: getEstimateById
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/x-api-key'
        - $ref: '#/parameters/x-gw-ims-org-id'
        - $ref: '#/parameters/x-sandbox-name'
        - $ref: '#/parameters/estimateId'      
      responses:
        200:
          description: The estimate job was successfully retrieved.
          schema:
            $ref: "#/definitions/EstimateResponse"
        403:
          description: Access is forbidden.
        404:
          description: The estimate job was not found.
        503:
          description: The service is unavailable.
  '/config/schedules':
    get:
      tags:
      - Schedules
      summary: Retrieve a list of schedules for your IMS Organization
      operationId: getSchedules
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/x-request-id'
      - $ref: '#/parameters/start'
      - $ref: '#/parameters/limit'
      responses:
        '200':
          description: A list of schedules is returned.
          schema:
            $ref: '#/definitions/SchedulesResponse'
        '403':
          description: Access is forbidden.
        '500':
          description: There was an issue reading the schedules.
        '503':
          description: The service is unavailable.
    post:
      tags:
      - Schedules
      summary: Create a schedule, including specifying the time when the schedule should be triggered.
      description: >-
        The scheduler is updated periodically (approximately every 30 minutes), so changes to a schedule may not go into effect immediately.
      operationId: postSchedule
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/content-type'
      - $ref: '#/parameters/x-request-id' 
      - in: body
        name: body
        description: >-
          - **name**: **(Required)** The name of schedule. Must be a string.
          - **type**: **(Required)** The job type in string format.  
            - Supported types: `batch_segmentation` and `export`.
          - **properties**: **(Required)** An object containing additional properties related to the schedule.
            - **properties.segments**: **(Required when `type` equals `batch_segmentation`)** Using `["*"]` ensures all segments are included.
          - **schedule**: **(Required)** A string containing the job schedule. Jobs can only be scheduled to run once a day, meaning you cannot schedule a job to run more than once during a 24 hour period. The example shown (`0 30 13 * * ?`) means the job is triggered every day at 13:30:00 UTC. For more information, please review the [cron expression format](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) documentation.

          - **state**: *(Optional)* String containing the schedule state. Available values: `active` and `inactive`. Default value is `inactive`.
        required: true
        schema:
          "$ref": "#/definitions/ScheduleCreate"
      responses:
        '200':
          description: The schedule was successfully created.
          schema:
            $ref: '#/definitions/Schedule'
        '400':
          description: The schedule posted is invalid.
        '403':
          description: Access is forbidden.
        '500':
          description: There was an issue reading schedules.
        '503':
          description: The service is unavailable.
  '/config/schedules/{SCHEDULE_ID}':
    get:
      tags:
      - Schedules
      summary: Retrieve a schedule by its ID.
      description: >-
        The scheduler is updated periodically (approximately every 30 minutes), so changes to a schedule may not go into effect immediately.
      operationId: getScheduleById
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/schedule-id'
      - $ref: '#/parameters/x-request-id'
      responses:
        '200':
          description: The schedule was successfully returned.
          schema:
            $ref: '#/definitions/Schedule'
        '403':
          description: Access is forbidden.
        '404':
          description: The schedule was not found.
        '503':
          description: The service is unavailable.
    patch:
      tags:
      - Schedules
      summary: Update a schedule, including changing the trigger time or enabling/disabling the schedule.
      description: >-
        The scheduler is updated periodically (approximately every 30 minutes), so changes to a schedule may not go into effect immediately.
      operationId: patchSchedule
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/schedule-id'
      - $ref: '#/parameters/x-request-id'
      - in: body
        name: body
        description: >-
          Use JSON Patch formatting to update the schedule. Note: You must use an "add" operation to add or update the given "path" with the given "value".
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/schedulePatchOperation'
      responses:
        '204':
          description: (No content) The schedule was successfully updated.
        '400':
          description: The schedule is invalid.
        '403':
          description: Access is forbidden.
        '429':
          description: There are too many schedule update requests processing at the moment. Try again at a later time.
        '500':
          description: There was an issue reading the schedule.
        '503':
          description: The service is unavailable.
    delete:
      tags:
      - Schedules
      summary: Delete a schedule by its ID.
      operationId: deleteSchedule
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/x-api-key'
      - $ref: '#/parameters/x-gw-ims-org-id'
      - $ref: '#/parameters/x-sandbox-name'
      - $ref: '#/parameters/schedule-id'
      - $ref: '#/parameters/x-request-id'
      responses:
        '204':
          description: (No content) The schedule was deleted successfully deleted.
        '403':
          description: Access is forbidden.
        '404':
          description: The schedule was not found.
        '503':
          description: The service is unavailable.
  '/search/namespaces':
      get:
        tags:
          - Segment search
        summary: Retrieve a list of search count results, queried across all namespaces. 
        operationId: queryNamespace
        produces:
          - application/json
        parameters:
          - name: schema.name
            in: query
            description: The schema class value associated with the search objects. Currently, only `_xdm.context.segmentdefinition` is supported.
            required: true
            type: string
            x-example: _xdm.context.segmentdefinition
          - $ref: '#/parameters/authorization'      
          - $ref: '#/parameters/x-api-key'
          - $ref: '#/parameters/x-gw-ims-org-id'
          - name: x-ups-search-version
            in: header
            description: The version of the Search API used. The only supported version is `1.0`.
            required: false
            type: string
            x-example: '1.0'
          - $ref: '#/parameters/x-sandbox-name'
          - name: s
            in: query
            description: The search query, based on the Lucene query syntax.
            required: false
            type: string
            x-example: name:test
        responses:
          '200':
            description: Retrieve a list of search counts, per namespace, based on the specified query.
            schema:
              $ref: '#/definitions/SearchNamespaceList'
          '403':
            description: Access is forbidden.
          '503':
            description: The service is unavailable.
  '/search/entities':
      get:
        tags:
          - Segment search
        summary: Retrieve a list of all full text indexed objects contained within a namespace resulting from a search
        operationId: queryEntity
        produces:
          - application/json
        parameters:
          - name: schemaClass
            in: query
            description: The schema class value associated with the search objects. Currently, only `_xdm.context.segmentdefinition` is supported.
            required: true
            type: string
            x-example: _xdm.context.segmentdefinition
          - name: namespace
            in: query
            description: The namespace you want to search within.
            required: true
            type: string
            x-example: AAMTraits
          - $ref: '#/parameters/authorization'      
          - $ref: '#/parameters/x-api-key'
          - $ref: '#/parameters/x-gw-ims-org-id'
          - name: x-ups-search-version
            in: header
            description: The version of the Search API used. The only supported version is `1.0`.
            required: false
            type: string
            x-example: '1.0'
          - $ref: '#/parameters/x-sandbox-name'
          - name: s
            in: query
            description: The search query, based on the [Lucene query syntax](https://docs.microsoft.com/en-us/azure/search/query-lucene-syntax).
            required: false
            type: string
            x-example: name:test
          - name: entityId
            in: query
            description: The ID of the folder you want to search for external segments in.
            required: false
            type: string
            x-example: fastMotorcyclesFolderid
          - name: limit
            in: query
            description: The number of search results to return per page. The maximum is 50.
            required: false
            type: number
            x-example: 10
          - name: page
            in: query
            description: The offset of the page. The first page starts at 0.
            required: false
            type: number
            x-example: 2
        responses:
          '200':
            description: A paginated list of search results. Folders are shown first, followed by external segments.
            schema:
              $ref: '#/definitions/SearchEntityList'
          '403':
            description: Access is forbidden.
          '503':
            description: The service is unavailable.
  '/search/taxonomy':
      get:
        tags:
          - Segment search
        summary: Get the taxonomic information associated with a search object.
        description: "Show the search object's organization"
        operationId: showSearchObjectStructure
        produces:
          - application/json
        parameters:
          - name: schema.name
            in: query
            description: The name of the schema being searched.
            required: true
            type: string
            x-example: _xdm.context.segmentdefinition      
          - name: namespace
            in: query
            description: namespace
            required: true
            type: string
            x-example: AAMTraits
          - $ref: '#/parameters/authorization'      
          - $ref: '#/parameters/x-api-key'
          - $ref: '#/parameters/x-gw-ims-org-id'
          - name: x-ups-search-version
            in: header
            description: The version of the Search API used.
            required: false
            type: string
            x-example: '1.0'
          - $ref: '#/parameters/x-sandbox-name'
          - name: entityId
            in: query
            description: The ID of the object you want to get structural information about. 
            required: true
            type: string
            x-example: porshe911_id
        responses:
          '200':
            description: Taxonomic information associated with an entityId.  This returns an array of folders that contain the search object, the first element of the array is the root folder and last element of the array is search object's parent folder.
            schema:
              $ref: '#/definitions/TaxonomySearchObject'
          '403':
            description: Access is forbidden.
          '503':
            description: The service is unavailable.                    

definitions:
  EstimateResponse:
    type: object
    properties:
      estimatedSize:
        type: integer
        format: int32
        example: 35935
      numRowsToRead:
        type: integer
        format: int32
        example: 35935
      estimatedNamespaceDistribution:
        type: array
        items:
          type: object
          properties:
            namespaceId:
              type: string
              example: "4"
            profilesMatchedSoFar:
              type: integer
              example: 11986
      state:
        type: string
        example: RESULT_READY
      profilesReadSoFar:
        type: integer
        format: int32
        example: 35935
      standardError:
        type: integer
        format: int32
        example: 0
      error:
        type: object
        properties:
          description:
            type: string
            example: ""
          traceback:
            type: string
            example: ""
      profilesMatchedSoFar:
        type: integer
        example: 12123
      totalRows:
        type: integer
        format: int32
        example: 35935
      confidenceInterval:
        type: string
        example: 95%
      _links:
        $ref: "#/definitions/PreviewLink"
  PreviewLink:
    type: object
    required:
      - preview
    properties:
      preview:
        type: string
        example: "https://platform.adobe.io/data/core/ups/preview/app-32be0328-3f31-4b64-8d84-acd0c4fbdad3/execution/0?previewQueryId={QUERY_ID}"
        description: The URI to get more information about the estimate.
  PreviewResponse:
    type: object
    properties:
      page:
        description: The page information of the current response entity.
      link:
        type: string
        description: The HREF link to the preview.
      state:
        type: string
        description: The execution state of the query.
      results:
        type: array
        description: The list of end customer entities.
        items:
          $ref: "#/definitions/PreviewResults"
    description: The end customer entity response, with current page information and next page link.
  PreviewQueryResponse:
    type: object
    required:
      - previewExecutionId
      - previewQueryId
      - previewQueryStatus
      - state
    properties:
      previewQueryId:
        type: string
        example: 4a45e853-ac91-4bb7-a426-150937b6af5c
        description: An ID that can be used for debugging purposes.
      state:
        type: string
        example: RUNNING
        description: The state of the preview job.
      previewQueryStatus:
        type: string
        example: RUNNING
        description: The state of the preview job.
      previewId:
        type: string
        example: MDoyOjRhNDVlODUzLWFjOTEtNGJiNy1hNDI2LTE1MDkzN2I2YWY1Yzo0Mg
        description: The ID for the preview job. You can use this ID to retrieve results of the preview job.
      previewExecutionId:
        type: integer
        format: int32
        example: 42
  CreatePreviewRequest:
    type: object
    properties:
      predicateExpression:
        type: string
        example: xEvent.metrics.commerce.abandons.value > 0
        description: The predicate expression that is to be evaluated.
      predicateType:
        type: string
        example: pql/text
        description: The predicate expression type. By default, this is PQL.
      predicateModel:
        type: string
        example: _xdm.context.profile
        description: The model in which the predicate is evaluated against. By default, this value is "xdm.model.profile".
      graphType:
        type: string
        example: pdg
        enum: 
          - pdg
          - none 
        description: The graph type that you want to get the cluster from. If the value is "pdg", identity stitching will be done based on your private identity graph. If the value is "none", no identity stitching will be done.
  IndividualPreview:
    type: object
    properties:
      objectId:
        type: string
        description: A unique identifier of XDM object.
      _href:
        type: string
        description: The profile access link to the contents of an XDM object.
  PreviewResults:
    type: object
    properties:
      objectId:
        type: string
        description: A unique identifier of the XDM object.
      _href:
        type: string
        description: The profile access link to the contents of an XDM object.
      relatedObjects:
        type: array
        description: A list of related objectIds.
        items:
          $ref: "#/definitions/IndividualPreview"
  SegmentJobErrorResponse:
    type: object
    properties:
      code:
        type: string
        example: 0080000018
        description: The error code for the segment job.
      msg:
        type: string
        example: 'com.microsoft.azure.documentdb.DocumentClientException: Message: {"Errors":["Request rate is large"]}'
        description: The segment job error message.
      callStack:
        type: string
        description: Call stack
    description: The error response from the segment job.
  SegmentJob:
    type: object
    required:
      - errors
      - metrics
      - segments
    properties:
      id:
        type: string
        example: 468eeefd-95a2-45a1-8bfc-b806dafce7ee
        description: The segment job request ID.
      imsOrgId:
        type: string
        example: "{IMG_ORG}"
        description: The IMS Organization ID that was provided.
      profileInstanceId:
        type: string
        example: "{PROFILE_INSTANCE}"
        description: The ID of the profile instance.
      status:
        type: string
        example: PROCESSING
        description: The status of the segment job.
        enum:
          - NEW
          - QUEUED
          - PROCESSING
          - CANCELLING
          - CANCELLED
          - FAILED
          - SUCCEEDED
      batchId:
        type: string
        example: 65e18145-a5e8-4993-94f3-c70fadaa1fef
        description: The ID of the batch.
      computeJobId:
        type: integer
        format: int64
        example: 1
        description: The compute job ID.
      computeGatewayJobId:
        type: string
        example: c3505859-d256-45d0-a6f3-c25f8f8508f5
        description: The compute gateway job ID, which can be use to get the job status from compute gateway API.
      creationTime:
        type: integer
        format: int64
        example: 1233456789000
        description: The timestamp, as unix time in milliseconds, for when the segment job was created.
      updateTime:
        type: integer
        format: int64
        example: 1233456789000
        description: The timestamp, as unix time in milliseconds, for when the segment job was last updated.
      segments:
        type: array
        items:
          $ref: '#/definitions/SegmentInfo'
      errors:
        type: array
        items:
          $ref: '#/definitions/SegmentJobErrorResponse'
      metrics:
        type: object
        required:
        - profileSegmentationTime
        - totalTime
        properties:
          totalTime:
            type: object
            properties:
              startTimeInMs:
                type: number
                example: 123456789000
                description: The timestamp, as unix time in milliseconds, for when the segment job request is created.
              endTimeInMs:
                type: number
                example: 123456799000
                description: The timestamp, as unix time in milliseconds, for when the segment job is completed.
              totalTimeInMs:
                type: number
                example: 10000
                description: The time it takes for the segment job to complete in milliseconds. This is calculated by subtracting "startTimeInMs" from "endTimeInMs".
            description: Information about the time it takes for the segment job to complete.
          profileSegmentationTime:
            type: object
            properties:
              startTimeInMs:
                type: number
                example: 123456789000
                description: The timestamp, as unix time in milliseconds, for when the computation starts.
              endTimeInMs:
                type: number
                example: 123456799000
                description: The timestamp, as unix time in milliseconds, for when the computation is completed.
              totalTimeInMs:
                type: number
                example: 10000
                description: The computation time in milliseconds. This is calculated by subtracting the "startTimeInMs" from the "endTimeInMs".
            description: Information about the computation time.
          totalProfile:
            type: integer
            format: int64
            example: 1233456789000
            description: Total number of scanned profiles.
          segmentedProfileCounter:
            type: object
            description: A map from segment IDs to the number of merged profiles in those segments.
            additionalProperties:
              type: number
          segmentedProfileByNamespaceCounter:
            type: object
            description: The number of segmented profiles by namespace per segment ID.
            additionalProperties:
              type: object
              additionalProperties:
                type: number 
          segmentedProfileByStatusCounter:
            type: object
            description: The number of segmented profiles by status per segment ID.
            additionalProperties:
              type: object
              additionalProperties:
                type: number 
        description: Information about the segment job.
      requestId:
        type: string
        example: cc3d3381-8682-41d4-93bd-566e378624d3
        description: An optional ID that can be used for debugging purposes to identify the request.
      modelName:
        type: string
        example: _xdm.context.profile
        description: The name of the model.
      _links:
        type: object
        description: A link to get the job status or cancel a submitted job.
        additionalProperties:
          type: string
  Expression:
    type: object
    properties:
      type:
        type: string
        example: PQL
        description: The type of the expression.
        enum:
          - PQL
          - ARL
      format:
        type: string
        example: pql/text
        description: The format of the expression.
        enum:
          - pql/text
          - pql/json
      value:
        type: string
        example: workAddress.country = "US"
        description: The query string, written as PQL.
    description: Information regarding the segment definition's expression.
  SegmentInfo:
    type: object
    required:
      - segment
    properties:
      segmentId:
        type: string
        example: 7863c010-e092-41c8-ae5e-9e533186752e
        description: The segment ID.
      segment:
        type: object
        required:
        - expression
        - mergePolicy
        properties:
          id:
            type: string
            example: 7863c010-e092-41c8-ae5e-9e533186752e
            description: The segment ID.
          version:
            type: integer
            format: int32
            example: 1
            description: The segment version.
          expression:
            $ref: '#/definitions/Expression'
          mergePolicy:
            type: object
            properties:
              id:
                type: string
                example: ups-default
                description: The ID of the merge policy.
              version:
                type: integer
                format: int32
                example: 1
                description: The version of the merge policy.
            description: Merge policy information for the segment.
        description: The metadata for the segments.
    description: The segments returned within a segment job.
  CancelSegmentJobResponse:
    type: object
    properties:
      code:
        type: string
        example: '200'
        description: The status code received when successfully cancelling a segment job.
      message:
        type: string
        example: Segment job with ID '468eeefd-95a2-45a1-8bfc-b806dafce7ee' has been deleted
        description: The message received when successfully cancelling a segment job.
    description: Standard Response
  SegmentJobRequest:
    type: object
    required:
      - segmentId
    properties:
      segmentId:
        type: string
        example: 7863c010-e092-41c8-ae5e-9e533186752e
        description: The ID of the segment definition.
  SegmentDefinition:
    type: object
    required:
    - expression
    - name
    - schema
    - ttlInDays
    properties:
      id:
        type: string
      imsOrgId:
        type: string
        example: "{IMS_ORG}"
        description: The ID of the IMS Organization related to the segment.
      name:
        type: string
        example: People who ordered in the last 30 days
        description: A unique name for the segment definition.
      mergePolicyId:
        type: string
        example: 5ed35fd8-6eeb-4ad2-bed9-43e695b8ac0b
        description: The ID of the merge policy.
      profileInstanceId:
        type: string
        example: ups
        description: The ID of the profile instance provided.
      description:
        type: string
        example: Last 30 days
        description: A brief description about the segment definition.
      expression:
        "$ref": "#/definitions/Expression"
      schema:
        "$ref": "#/definitions/SchemaClass"
      evaluationInfo:
        type: object
        properties:
          batch:
            type: object
            properties:
              enabled:
                type: boolean
                example: true 
          continuous: 
            type: object
            properties:
              enable:
                type: boolean
                example: false 
          synchronous:
            type: object
            properties:
              enable:
                type: boolean
                example: false 
      payloadSchema:
        type: string
      ttlInDays:
        type: integer
        format: int32
        example: 60
        description: A value representing the time to live.
      creationTime:
        type: integer
        format: int64
        description: The timestamp, as unix time in milliseconds, for when the segment definition was created.
      updateTime:
        type: integer
        format: int64
        description: The timestamp, as unix time in milliseconds, for when the segment definition was last updated.
      updateEpoch:
        type: integer
        format: int64
        description: The timestamp, as unix time in seconds, for when the segment definition was last updated.
  MessageResponse:
    type: object
    required:
    - message
    - status
    properties:
      status:
        type: boolean
      message:
        type: string
  AdditionalFields:
    type: object
    properties:
      eventList:
        description: The name of the additional field to be exported.
        type: object
        properties:
          fields:
            type: string
            description: The fields filter for the event list.
          filter:
            description: The filter values for exporting the event list.
            type: object
            properties:
              fromIngestTimestamp:
                type: string
                example: '2018-01-01T00:00:00Z'
                description: Filters experience events ingested after the given timestamp. The timestamp should be written in the RFC 3339 format.
    description: Additional fields that need to be exported.
  FeedbackMetrics:
    type: object
    properties:
      startTimeInMs:
        type: number
        example: 123456789000
        description: The start time, in milliseconds.
      endTimeInMs:
        type: number
        example: 123456799000
        description: The end time, in milliseconds.
      totalTimeInMs:
        type: number
        example: 10000
        description: The total time the export job takes, in milliseconds. This is calculated by subtracting the start time from the end time.
    description: The metrics for the export job.
  Filter:
    type: object
    properties:
      segments:
        type: array
        description: An array of filter values for the export job.
        items:
          type: object
          properties:
            segmentId:
              type: string
              example: 52c26d0d-45f2-47a2-ab30-ed06abc981ff
              description: The ID of the segment.
            segmentNs:
              type: string
              example: ups
              description: The segment namespace. By default, the value is "ups".
            status:
              type: array
              items:
                type: string
                example: realized
              description: Status filter for segmentIds, default- ["realized","existing"].
          description: Segment values for filter.
      segmentQualificationTime:
        type: object
        description: The timestamp for exporting when profiles entered or exited a segment. The timestamp should be written in RFC 3339 format.
        properties:
          startTime:
            type: string
            example: '2018-01-01T00:00:00Z'
            description: The start time for the segment qualification.
          endTime:
            type: string
            example: '2018-02-01T00:00:00Z'
            description: The end time for the segment qualification.
      fromIngestTimestamp:
        type: string
        example: '2018-01-01T00:00:00Z'
        description: Filters profiles and experience events updated after the given timestamp. The timestamp should be written in RFC 3339 format.
      emptyProfiles:
        type: boolean
        example: true
        description: Boolean. Profiles can contain profile fragments, ExperienceEvent fragments, or both. Profiles with no profile fragments and only ExperienceEvent fragments are referred to as "emptyProfiles". To export all profiles in the profile store, including the "emptyProfiles", set the value of "emptyProfiles" to true. If "emptyProfiles" is set to false, only profiles with profile fragments in the store are exported. By default, "if "emptyProfiles" attribute is not included, only profiles containing profile fragments are exported.
    description: Array of filter values for Export Job to export Profiles.
  MergePolicyObject:
    type: object
    properties:
      id:
        type: string
        example: timestampOrdered-none-mp
        description: The ID of the merge policy.
      version:
        type: number
        example: 1
        description: The version of the given merge policy. By default the value will be "Latest".
    description: An object that describes the items within a merge policy.
  ExportJobResponse:
    type: object
    properties:
      id:
        type: number
        example: 100
        description: The ID of the export job.
      jobType:
        type: string
        example: BATCH
        enum:
          - BATCH
          - STREAMING
        description: The type for the export job. It can be either batch or streaming.
      destination:
        description: The destination for the export job results.
        type: object
        properties:
          datasetId:
            type: string
            example: 5b7c86968f7b6501e21ba9df
            description: The dataset ID of the destination.
          segmentPerBatch:
            type: boolean
            example: false
            description: Determines if segment IDs will be all batched into a single batch ID. If true, each segment ID will get its own batch ID. If false, all segment Ids will be batched into a single batch ID.
          batchId:
            type: string
            example: da5cfb4de32c4b93a09f7e37fa53ad52
            description: The batch ID of the destination.
          batches:
            type: object
            properties:
              segmentId:
                type: string
                example: 52c26d0d-45f2-47a2-ab30-ed06abc981ff
                description: The segment ID provided in the export job request.
              segmentNs:
                type: string
                example: ups
                description: The namespace of the segment.
              status:
                type: array
                items:
                  type: string
                  example: realized
                description: The status filter for segmentIds, default- ["realized","existing"].
              batchId:
                type: string
                example: da5cfb4de32c4b93a09f7e37fa53ad52
                description: The batch ID for a particular segment ID export.
            description: The object for multi-segment export feature and will only be returned when segmentPerBatch is marked as true. If segmentPerBatch is marked as false, batchId is returned in first level "batchId" field under "destination" object.
      fields:
        type: string
        example: 'identities.id,personalEmail.address'
        description: Column filters.
      schema:
        description: The schema name for the export job.
        type: object
        properties:
          name:
            type: string
            example: _xdm.context.profile
            description: The name of the schema.
      imsOrgId:
        type: string
        example: 1BD6382559DF0C130A49422D@AdobeOrg
        description: The IMS Organization ID that was provided.
      status:
        type: string
        example: SUCCEEDED
        description: The status of the export job.
        enum:
            - NEW
            - PROCESSING
            - SUCCEEDED
            - FAILED
      filter:
        $ref: '#/definitions/Filter'
      additionalFields:
        $ref: '#/definitions/AdditionalFields'
      mergePolicy:
        $ref: '#/definitions/MergePolicyObject'
      profileInstanceId:
        type: string
        example: ups
        description: The ID of the profile instance provided.
      errors:
        type: array
        description: The errors returned, in case of failure.
        items:
          type: object
          properties:
            code:
              type: string
              example: '0100000003'
            msg:
              type: string
              example: Error in Export Job
            callStack:
              type: string
              example: com.adobe.aep.unifiedprofile.common.logging.Logger
      metrics:
        description: The metrics for the export job.
        type: object
        properties:
          totalTime:
            $ref: '#/definitions/FeedbackMetrics'
          profileExportTime:
            $ref: '#/definitions/FeedbackMetrics'
          aCPDatasetWriteTime:
            $ref: '#/definitions/FeedbackMetrics'
      computeGatewayJobId:
        description: The compute gateway job ID.
        type: object
        properties:
          exportJob:
            type: string
            example: f3058161-7349-4ca9-807d-212cee2c2e94
            description: The compute gateway job ID for an export job.
          pushJob:
            type: string
            example: feaeca05-d137-4605-aa4e-21d19d801fc6
            description: The compute gateway job ID for a push job.
      creationTime:
        type: integer
        format: int64
        example: 1538615973895
        description: The timestamp, as unix time in seconds, for when the export job was created.
      updateTime:
        type: integer
        format: int64
        example: 1538616233239
        description: The timestamp, as unix time in seconds, for when the export job was last updated.
      requestId:
        type: string
        example: d995479c-8a08-4240-903b-af469c67be1f
        description: An optional ID that can be used for debugging purposes to identify the request.
    description: The information after submitting a export job.
  CreateExportJobRequest:
    type: object
    properties:
      fields:
        type: string
        example: 'identities.id,personalEmail.address'
        description: The columns in which you can filter by. They are written as comma separated dot notation of the requested columns.
      mergePolicy:
        $ref: '#/definitions/MergePolicyObject'
      filter:
        $ref: '#/definitions/Filter'
      additionalFields:
        $ref: '#/definitions/AdditionalFields'
      destination:
        description: The location where the exported data will be stored.
        type: object
        properties:
          datasetId:
            type: string
            example: 5b7c86968f7b6501e21ba9df
            description: The dataset ID of the destination.
      schema:
        description: The schema name for the data.
        type: object
        properties:
          name:
            type: string
            example: _xdm.context.profile
            description: The name of the schema.
    description: The request for creating an export job.
  GetExportJobsResponse:
    type: object
    properties:
      records:
        type: array
        description: The list of export job records.
        items:
          $ref: '#/definitions/ExportJobResponse'
      page:
        description: The page information of the current response entity.
        type: object
        properties:
          sortField:
            type: string
            example: createdTime
            description: The field in which records are sorted by. By default, records are sorted by creation time.
          sort:
            type: string
            example: desc
            description: The order in which records are sorted. By default, records are sorted in descending order.
          pageOffset:
            type: string
            example: '1540974701302_96'
            description: The offset of the page. By default, the offset is the creation time and job id for the last record on the page.
          pageSize:
            type: integer
            format: int32
            example: 10
            description: The total number of records of the page.
      link:
        description: The href links.
        type: object
        properties:
          next:
            type: string
            description: The href link to the next page of the records. If there are no more records, this value is empty.
  CancelExportJobResponse:
    type: object
    properties:
      status:
        type: boolean
        example: true
        description: The status of the request.
      message:
        type: string
        example: Export job has been marked for cancelling
        description: The message that will be sent when cancelling an export job.
    description: The response for cancelling an export job.
  SchemaClass:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: _xdm.context.profile
        description: The ID of the schema class.
    description: The schema class.
  SchedulesResponse:
    type: object
    required:
    - _page
    - children
    properties:
      _page:
        $ref: '#/definitions/SchedulesPage'
      children:
        type: array
        items:
          $ref: '#/definitions/Schedule'
  SchedulesPage:
    type: object
    required:
    - totalCount
    - pageSize
    properties:
      totalCount:
        type: number
        example: 100
        description: The total number of schedules.
      pageSize:
        type: number
        example: 100
        description: The number of schedules per page.
      next:
        type: string
        example: 1
        description: The offset to start pagination for the schedules.
  Schedule:
    type: object
    required:
    - type
    - name
    - schedule
    - properties
    properties:
      id:
        type: string
        example: 5e61e66e-e8b4-4a7b-8d41-70c74b0b981a
        description: A unique, read-only, system-generated schedule ID.
      name:
        type: string
        example: profile-default
        description: The name of the schedule.
      type:
        type: string
        enum: [batch_segmentation]
        example: batch_segmentation
        description: The job type for the schedule.
      schedule:
        type: string
        example: 0 0 1 * * ?
        description: A cron expression stating when the schedule should be triggered. Jobs can only be scheduled to run once a day, meaning you cannot schedule a job to run more than once during a 24 hour period. For more information, please review the [cron expression format](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) documentation.
      state:
        type: string
        enum: [active, inactive]
        example: inactive
        description: The state of the schedule. If the schedule is inactive, it must be activated before it will be triggered.
      properties:
        type: object
        required:
        - segments
        properties:
          segments:
            type: array
            items:
              type: string
              example: '*'
            description: This field is required if the job type is batch_segmentation. It holds a list of segment definitions which need to be evaluated at the scheduled time. Use `*` to evaluate all segments.
        description: schedule properties
      createEpoch:
        type: integer
        example: 1234567890
        description: The timestamp, as unix time in seconds, for when the schedule was created.
      updateEpoch:
        type: integer
        example: 1234567890
        description: The timestamp, as unix time in seconds, for when the schedule was last updated.
    description: The schedule entity.
  ScheduleCreate:
    type: object
    required:
    - name
    - type
    - schedule
    - properties
    properties:
      name:
        type: string
        example: profile-default
        description: The name of the schedule being created.
      type:
        type: string
        enum: [batch_segmentation]
        example: batch_segmentation
        description: The job type.
      properties:
        type: object
        required:
        - segments
        properties:
          segments:
            type: array
            items:
              type: string
              example: '*'
            description: This field is required if the job type is batch_segmentation. It holds a list of segment definitions which need to be evaluated at the scheduled time. Use `*` to evaluate all segments.
        description: schedule properties 
      schedule:
        type: string
        example: 0 0 1 * * ?
        description: A cron expression stating when the schedule should be triggered. Jobs can only be scheduled to run once a day, meaning you cannot schedule a job to run more than once during a 24 hour period. For more information, please review the [cron expression format](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) documentation.
      state:
        type: string
        enum: [active, inactive]
        example: inactive
        description: The state of the schedule. If the schedule is inactive, it must be activated before it will be triggered.
    description: The request body for creating a schedule.
  schedulePatchOperation:
    type: object
    required:
    - op
    - path
    - value
    properties:
      op:
        type: string
        example: add
        description: The patch operation you are performing.
        enum:
        - add
      path:
        type: string
        example: /state
        description: The path of the attribute that needs to be updated.
      value:
        type: string
        example: active
        description: The new value used to update the specified attribute.
    description: Patch operation
  SearchNamespaceList:
      type: object
      properties:
        namespaces:
          type: array
          description: A list of namespaces and the number of search objects resulting from the search for each namespace.
          items:
            $ref: '#/definitions/SearchNamespaceObject'
          example: 
           - namespace: 'AAMTraits'
             displayName: 'AAMTraits'
             count: 45
           - namespace: 'AAMSegments'
             displayName: 'AAMSegments'
             count: 10
           - namespace: 'SegmentsAISegments'
             displayName: 'SegmentsAISegments'
             count: 3
        totalCount:
          type: string
          description: The total number of namespaces returned.
          example: 3
        status:
          type: object
          properties:
            message:
              type: string
              description: Extra information about the search status.
              example: "Success"
  SearchEntityList:
    type: object
    properties: 
      entities:
        type: array
        description: A list of namespaces and the number of search objects resulting from the search for each entity.
        items:
          $ref: '#/definitions/SearchEntityObject'
      page:
        $ref: '#/definitions/SearchResultsPageObject'
      status:
        type: object
        properties:
          message:
            type: string
            description: Extra information about the search status.
            example: "Search system is not setup correctly."
  TaxonomySearchObject:
    type: object
    properties:
      taxonomy:
        type: array
        description: List of folder IDs and names. This list starts at the root folder and then traverses through the subfolders until it reaches the folder that contains the search object specified by the entityId.
        items:
          $ref: '#/definitions/TaxonomySearchValue'
        example:
          - id: "carTraits"
            base64EncodedSourceId: "RFVGamdpRk1BZy01ZTY4MzBmYzM5N2I0NTE4YWFhMWEwOGY1"
            name: "AAMTraits for Cars"
            parentFolderId: "root"
          - id: "fastCarsFolder"
            base64EncodedSourceId: "RFVGZ01BLTVlNjgzMGZjMzk3YjQ1MThhYWExYTA4Zg2"
            name: "Fast Cars"
            parentFolderId: "carTraits"
          - id: "porsche"
            base64EncodedSourceId: "REFGZ01CLTVlNjczMGZjMzk3YjQ1MThhZGIxYTA4Zg=="
            name: "Porshe"
            parentFolderId: "redCarsFolderId"
      status:
        type: object
        properties:
          message:
            type: string
            description: Extra information about the search status.
            example: "Cannot find entityId redcarsFolderId."
  TaxonomySearchValue:
    type: object
    properties:
      'id':
        type: string
        description: The ID of the searchable object.
      'base64EncodedSourceId':
        type: string
        description: The base64 encoded version of the source ID.
      'name':
        type: string
        description: The name of the searchable object.
      'parentFolderId':
        type: string
        description: The ID of the parent folder.
  SearchNamespaceObject:
    type: object
    properties:
      namespace:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: The name of the namespace.
            count:
              type: number
              description: The number of objects within the namespace.          
  SearchEntityObject:
    type: object
    properties:
      id:
        type: string
        example: folder2
        description: The ID of the object that is indexed for full text search.
      base64EncodedSourceId:
        type: string
        example: REZrcUMyX3Vmb2xkZXIyLUFBTVNlZ21lbnRzQS01ZTBlMjU2MzQyYzI0ZjE4YWQyZDc1MDg1
        description: The base64 encoded version of the sourceId.
      sourceId:
        description: The non-base64 encoded version of the sourceId.
      isFolder:
        type: boolean
        example: true
        description: A boolean that shows whether or not the search object is a folder.
      parentFolderId:
        type: string
        example: root
        description: The ID of the folder that contains this search object or root if the object exists and the root level.
      name:
        type: string
        example: Segment that targets males age 45 to 50 living on the west coast
        description: The name of the search object.
      description:
        type: string
        example: Under development, targeting east coast millionaires that buy red cars.
        description: A description attached to the search object.
    description: An individual search result after issuing a full text search.        
  SearchResultsPageObject:
    type: object
    properties:
      totalCount:
        type: number
        example: 20323
        description: The number of search objects found.
      totalPages:
        type: integer
        format: int32
        example: 100
        description: The total number of pages resulting from your search.
      pageOffset:
        type: integer
        format: int32
        example: 0
        description: The current page offset. The first page has a value of 0.
      pageSize:
        type: integer
        format: int32
        example: 10
        description: The total number of search objects on this page.
parameters:
  authorization:
    name: Authorization
    description: >-
      The access token which can be copied from your Experience Platform integration, prefixed with "Bearer ". For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  x-gw-ims-org-id:
    name: x-gw-ims-org-id
    description: >-
      The Organization ID which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  x-api-key:
    name: x-api-key
    description: >-
      The API key which can be copied from your Experience Platform integration. For more information on how to obtain this value, visit the [authentication tutorial](http://www.adobe.com/go/platform-api-authentication-en).
    required: true
    type: string
    in: header
  content-type:
    name: Content-Type
    description: >-
      The type of content being sent in the body of the request. Should be 'application/json'.
    required: true
    type: string
    in: header
  segment-body: 
    in: body
    name: body
    description: >-
      - **name**: The name of the segment. This value must be unique.

      - **description**: A description of the segment.
      
      - **expression**: The PQL expression of the segment. Contains the PQL type, format, as well as the value of the PQL query.
      
      - **schema**: - The schema class for the segment.
      
      - **ttlInDays**: - A value representing the time to live.
    required: true
    schema:
      $ref: '#/definitions/SegmentDefinition'
  x-request-id:
    name: x-request-id
    in: header
    description: >- 
      An optional header that may be used for debugging purposes when investigating issues with a workflow. The same ID can be used to identify a single request to the service from a flow. A new ID should be created for each request.
    required: false
    type: string
  eventTypeId:
    name: eventTypeId
    in: path
    description: >-
      The ID of the event type.
    required: true
    type: string
  x-sandbox-name:
    name: x-sandbox-name
    in: header
    description: >-
      All resources in Experience Platform are isolated to specific virtual sandboxes. Requests to Platform APIs require a header that specifies the name of the sandbox in which the operation will take place. See the [sandboxes overview](https://adobe.com/go/sandbox-overview-en) for more information.
    required: true
    type: string
  segmentId:
    name: SEGMENT_ID
    in: path
    description: >-
      The ID of the segment definition.
    required: true
    type: string
    x-example: b9f6c339-f7f4-4141-b6c7-b562079da47c
  segmentJobId:
    name: SEGMENT_JOB_ID
    in: path
    description: >-
      The ID of the segment job request.
    required: true
    type: string
    x-example: ca8fe8a8-0f38-478a-9905-fd515d1d2988
  previewId:
    name: PREVIEW_ID
    in: path
    description: >-
      The ID of the preview job.
    required: true
    type: string
    x-example: MDowOjZkNDQ1NDhjLTQ5YmQtNDI5Mi1hNzMxLTU1NjU4ZGU1MThmNzo0MA== 
  estimateId:
    name: ESTIMATE_ID
    in: path
    description: >-
      The ID of the estimate job.
    required: true
    type: string
    x-example: MDowOjZkNDQ1NDhjLTQ5YmQtNDI5Mi1hNzMxLTU1NjU4ZGU1MThmNzo0MA== 
  start:      
    name: start
    in: query
    description: >-
      Return results from a specific page offset. For example, `start=3`.
    required: false
    type: integer
  limit:  
    name: limit
    in: query
    description: >-
      Limit response to a specific number of objects. Must be a positive number. For example, `limit=10`
    required: false
    type: integer
  schedule-id:  
    name: SCHEDULE_ID
    in: path
    description: >-
      The ID of the schedule against which the operation is being performed.
    required: true
    type: string