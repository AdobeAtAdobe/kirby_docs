swagger: '2.0'
info:
  description: Access API for Unified Profile service
  version: 0.0.1
  title: profileaccess API
  termsOfService: ''
host: platform-INT.adobe.io
basePath: /data/core/ups/models
tags:
  - name: models
  - name: health-detailed
  - name: health
  - name: ping
  - name: version
paths:
  '/{model}':
    put:
      tags:
        - models
      summary: Puts XDM Model objects into the Unified Profile Store.
      description: ''
      operationId: putModelObjectRoute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: model
          in: path
          description: Name of XDM model. Case in-sensitive.
          required: true
          type: string
          x-example: profile
        - name: x-gw-ims-org-id
          in: header
          description: IMS Client Id
          required: true
          type: string
          x-example: 123@AdobeOrg
        - in: body
          name: body
          description: List of XDM Model objects to be put. Each should be in Json format.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ModelObjectEntity'
      responses:
        '200':
          description: Objects created successfully.
        '403':
          description: You are forbidden to make this request.
        '422':
          description: Failed to create the objects.
          schema:
            $ref: '#/definitions/FailedModelObjectRecord'
        '503':
          description: Service unavailable
  '/{model}/{recordId}':
    get:
      tags:
        - models
      summary: >-
        Gets a specified KeyValue XDM Model Object and retrieves all its
        properties.
      description: ''
      operationId: getModelObjectRoute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: model
          in: path
          description: 'Name of XDM model, case in-sensitive.'
          required: true
          type: string
          x-example: profile
        - name: recordId
          in: path
          description: >-
            Unique identifier for the model object. In case of Profile XDM
            Model, {recordId} is expected to be in XID format
          required: true
          type: string
          x-example: '252132804'
        - name: fields
          in: query
          description: >-
            Fields for the model object. By default, all fields will be fetched.
            Separated by comma.
          required: false
          type: string
          x-example: 'person.firstName,person.lastName'
        - name: graphType
          in: query
          description: >-
            Graph-type (output type) you want to get the cluster from. Only
            'coop' is supported for now
          required: false
          type: string
          x-example: coop
        - name: x-gw-ims-org-id
          in: header
          description: IMS Client Id
          required: true
          type: string
          x-example: southwest@adobe.com
      responses:
        '200':
          description: 'XDM model objects of given {recordId} successfully returned. '
          schema:
            $ref: '#/definitions/ModelObjectEntity'
        '403':
          description: You are forbidden to make this request.
        '404':
          description: '{model} with recordId {recordId} does not exist.'
        '503':
          description: Service unavailable
    delete:
      tags:
        - models
      summary: Deletes a specified XDM Model Object.
      description: ''
      operationId: deleteModelObjectRoute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: model
          in: path
          description: 'Name of XDM model, case in-sensitive.'
          required: true
          type: string
          x-example: profile
        - name: recordId
          in: path
          description: >-
            Unique identifier for the model object. In case of Profile XDM
            Model, {recordId} is expected to be in XID format
          required: true
          type: string
          x-example: '252132804'
        - name: x-gw-ims-org-id
          in: header
          description: IMS Client Id
          required: true
          type: string
          x-example: southwest@adobe.com
      responses:
        '200':
          description: successful operation
          schema:
            $ref: >-
              #/definitions/Function1DataAccessServiceFunction1RequestContextFutureRouteResult
        '204':
          description: The delete operation was successful.
        '403':
          description: You are forbidden to make this request.
        '404':
          description: '{model} with recordId {recordId} does not exist.'
        '503':
          description: Service unavailable
  '/{model}/{recordId}/ExperienceEvent':
    get:
      tags:
        - models
      summary: >-
        Gets a specified XDM Model Object and retrieves all its ExperienceEvent
        properties.
      description: ''
      operationId: getModelTimeSeriesObjectRoute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: model
          in: path
          description: 'Name of XDM model, case in-sensitive.'
          required: true
          type: string
          x-example: profile
        - name: recordId
          in: path
          description: >-
            Unique identifier for the model object. In case of Profile XDM
            Model, {recordId} is expected to be in XID format
          required: true
          type: string
          x-example: '252132804'
        - name: x-gw-ims-org-id
          in: header
          description: IMS Client Id
          required: true
          type: string
          x-example: southwest@adobe.com
        - name: fields
          in: query
          description: >-
            Selective fields to be fetched. Separated by comma. By default all
            fields. field=* means all fields.
          required: false
          type: string
          x-example: 'field1.field2,field3'
        - name: startTime
          in: query
          description: >-
            Epoch time of start of the time range query. Included. If not
            specified, will fetch from the beginning.
          required: false
          type: string
          x-example: '1517019315'
        - name: endTime
          in: query
          description: >-
            Epoch time of end of the time range query. Excluded. If not
            specified, will fetch till the end.
          required: false
          type: string
          x-example: '1517019396'
        - name: graphType
          in: query
          description: >-
            Graph-type (output type) you want to get the cluster from. Only
            'coop' is supported for now
          required: false
          type: string
          x-example: coop
        - name: start
          in: query
          description: >-
            Ordering value of first record in result. Dictates the ordering
            value of first record in desired page. Ordering field is a
            combination of schemaRef Index and the ordering field within a
            schemaRef (in reverse order).
          required: false
          type: string
          x-example: start=1-12345678
        - name: limit
          in: query
          description: How many entries should be present in a page. 1000 if not specified.
          required: false
          type: integer
          x-example: 100
      responses:
        '200':
          description: 'XDM model objects of given {recordId} successfully returned. '
          schema:
            $ref: '#/definitions/TimeSeriesObjectResponseEntity'
        '403':
          description: You are forbidden to make this request.
        '404':
          description: '{model} with recordId {recordId} does not exist.'
        '503':
          description: Service unavailable
  /health-detailed:
    get:
      tags:
        - health-detailed
      summary: Return a detailed health check message
      description: ''
      operationId: detailedHealthRoute
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Detailed health check succeeded
          schema:
            $ref: '#/definitions/HealthDetailedResponse'
        '503':
          description: Service is unavailable
  /health:
    get:
      tags:
        - health
      summary: Return a health check message
      description: ''
      operationId: healthRoute
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Health check succeeded
          schema:
            $ref: '#/definitions/HealthResponse'
        '503':
          description: Service is unavailable
  /ping:
    get:
      tags:
        - ping
      summary: Return a ping message
      description: ''
      operationId: pingRoute
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Ping succeeded
          schema:
            $ref: '#/definitions/PingResponse'
        '503':
          description: Service unavailable
  /version:
    get:
      tags:
        - version
      summary: Return version information
      description: ''
      operationId: versionRoute
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Version info response succeeded
          schema:
            $ref: '#/definitions/VersionResponse'
        '503':
          description: Service unavailable
securityDefinitions: {}
definitions:
  ModelObjectEntity:
    type: object
    properties:
      recordId:
        type: string
        description: Unique identifier of XDM Model object.
      timestamp:
        type: string
        description: >-
          The Unix timestamp (in milliseconds) captures when event has happened.
          This is required for time series data.
      sourceId:
        type: string
        description: Id of the source of the record.
      record:
        type: object
        description: Any user defined JSON as per the definition of XDM Model
        additionalProperties:
          type: number
  FailedModelObjectRecord:
    type: object
    properties:
      record:
        type: object
        description: Raw records failed to put.
        items:
          $ref: '#/definitions/ModelObjectEntity'
      failedReason:
        type: string
        description: Reason of the failure.
  Link:
    type: object
    properties:
      next:
        type: string
        description: >-
          The href link to the next page of the records. Empty if no more
          records.
    description: The link information.
  Page:
    type: object
    properties:
      sortField:
        type: string
        description: The order records are sorted. By default is timestamp.
      sort:
        type: string
        description: The sorting order. By default is ascending order.
      pageOffset:
        type: string
        description: >-
          The offset of the page. By default is the internal id for the first
          record.
      pageSize:
        type: integer
        format: int32
        description: The total number of records of this page.
    description: The page information of the response entity.
  TimeSeriesObjectResponseEntity:
    type: object
    properties:
      records:
        type: array
        description: The list of XDM Model object records.
        items:
          $ref: '#/definitions/ModelObjectEntity'
      page:
        description: The page information of the current response entity.
        $ref: '#/definitions/Page'
      link:
        description: The href links.
        $ref: '#/definitions/Link'
    description: >-
      The XDM Model Object entity response, with current page information and
      next page link.
  Function1:
    type: object
  Function1DataAccessServiceFunction1RequestContextFutureRouteResult:
    type: object
  HealthDetailedResponse:
    type: object
    required:
      - dependencies
      - status
    properties:
      status:
        type: boolean
      dependencies:
        type: array
        items:
          $ref: '#/definitions/ServiceHealth'
  ServiceHealth:
    type: object
    required:
      - service
      - status
    properties:
      service:
        type: string
      status:
        type: boolean
  HealthResponse:
    type: object
    required:
      - status
    properties:
      status:
        type: boolean
  PingResponse:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
  VersionResponse:
    type: object
    required:
      - branchName
      - buildDate
      - buildInfo
      - cycleNumber
      - gitCommit
      - projectName
      - projectVersion
      - versionNumber
    properties:
      projectName:
        type: string
      projectVersion:
        type: string
      buildInfo:
        type: string
      versionNumber:
        type: string
      branchName:
        type: string
      cycleNumber:
        type: string
      gitCommit:
        type: string
      buildDate:
        type: string
